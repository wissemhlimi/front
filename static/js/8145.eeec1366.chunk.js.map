{"version":3,"file":"static/js/8145.eeec1366.chunk.js","mappings":"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","sources":["view/Propos_nous/Content.tsx","view/Propos_nous/Propos.tsx","view/shared/Breadcrumb.tsx","view/shared/Image.tsx","view/shared/Nodatafound/Empty.tsx","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport AproposService from \"src/modules/Apropos/AproposService\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport Empty from \"src/view/shared/Nodatafound/Empty\";\nimport { AboutUs } from \"src/assets/images\";\nimport { Col, Row } from \"antd\";\nimport Image from \"../shared/Image\";\n\nexport default function Content() {\n  const [propsText, setPropsText] = useState([]);\n  const [currentlySelectedLanguage, setCurrentlySelectedLanguage] =\n    useState(\"fr\");\n  const [aboutIsLoading, setaboutIsLoading] = useState(true);\n\n  const getAboutText = () => {\n    setCurrentlySelectedLanguage(localStorage.getItem(\"language\") ?? \"fr\");\n    AproposService.getApropos()\n      .then((res: any) => {\n        setPropsText((propsText) => propsText.concat(res));\n        setaboutIsLoading(false);\n      })\n      .catch((err) => console.error(err));\n  };\n  useEffect(() => {\n    getAboutText();\n  }, []);\n\n  return (\n    <ContentLayout>\n      <div>\n        <img\n          src={AboutUs}\n          style={{ width: \"350px\", marginLeft: \"10px\", marginRight: \"10px\" }}\n        />\n      </div>\n      <div>\n        {aboutIsLoading === true ? (\n          <>\n            {[...Array(5)].map((x, i) => (\n              <Skeleton key={i} height={20} className=\"Skeleton\" />\n            ))}\n          </>\n        ) : (\n          <>\n            {\n              {\n                fr: (\n                  <>\n                    {propsText[0][\"rows\"][0] ? (\n                      <p>{propsText[0][\"rows\"][0][\"aboutFR\"]} </p>\n                    ) : (\n                      <Empty />\n                    )}\n                  </>\n                ),\n                en: (\n                  <>\n                    {propsText[0][\"rows\"][0] ? (\n                      <p>{propsText[0][\"rows\"][0][\"aboutEN\"]} </p>\n                    ) : (\n                      <Empty />\n                    )}\n                  </>\n                ),\n                ar: (\n                  <>\n                    {propsText[0][\"rows\"][0] ? (\n                      <p>{propsText[0][\"rows\"][0][\"aboutAR\"]} </p>\n                    ) : (\n                      <Empty />\n                    )}\n                  </>\n                ),\n              }[currentlySelectedLanguage]\n            }\n          </>\n        )}\n      </div>\n    </ContentLayout>\n  );\n}\n\nconst ContentLayout = styled.section`\n  display: flex;\n  max-width: 100%;\n  margin: 2rem auto;\n\n  p {\n    font-size: 1rem;\n    line-height: 1.5;\n    color: var(--violet);\n    text-align: justify;\n    margin-bottom: 2rem;\n  }\n\n  .Skeleton {\n    margin-top: 1rem;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Content from \"./Content\";\nimport Breadcrumb from \"../shared/Breadcrumb\";\nimport { i18n } from \"src/i18n\";\n\nfunction Propos() {\n  return (\n    <ProposLayout>\n      <Breadcrumb\n        title={i18n(\"menu.propos\")}\n        items={[[i18n(\"app.title\"), \"/\"], [i18n(\"menu.propos\")]]}\n      />\n      <Content />\n    </ProposLayout>\n  );\n}\n\nexport default Propos;\n\nconst ProposLayout = styled.section`\n  max-width: 1170px;\n  margin: 2rem auto;\n  font-family: \"Proxima Nova\";\n  font-style: normal;\n\n  @media screen and (max-width: 1170px) {\n    margin: 160px 10px 0 10px;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst BreadcrumbNav = styled.div`\n  margin: 28px 0 10px 0;\n  .breadcrumb {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n  }\n  ol {\n    display: flex;\n  }\n  li {\n    font-family: \"Proxima Nova\";\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 25px;\n  }\n  .breadcrump__nav {\n    margin: auto;\n    left: 0;\n    display: flex;\n    max-width: 1170px;\n    flex-direction: column;\n  }\n\n  .breadcrumb-item:not(.active) a {\n    color: rgba(0, 0, 0, 0.45);\n  }\n\n  h2 {\n    font-family: \"Bebas Neue Pro\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 47px;\n    line-height: 39px;\n  }\n`;\n\nfunction Breadcrumb(props) {\n  const isLink = (item) => {\n    return item.length > 1;\n  };\n  return (\n    <BreadcrumbNav>\n      <div className=\"breadcrump__nav\">\n        <div>\n          <h2 className=\"h2\">{props.title}</h2>\n        </div>\n        <div>\n          <ol className=\"breadcrumb\">\n            {props.items.map((item, index) => (\n              <li key={item[0]} className={`breadcrumb-item liClass`}>\n                {isLink(item) ? (\n                  <Link to={item[1]}>\n                    {\" \"}\n                    {item[0]}\n                    {item[1] === \"/\" ? (\n                      <>{item[1]}</>\n                    ) : (\n                      <div style={{ display: \"none\", marginBottom: 0 }}>\n                        {item[1]}\n                      </div>\n                    )}\n                  </Link>\n                ) : (\n                  item[0]\n                )}\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </BreadcrumbNav>\n  );\n}\n\nexport default Breadcrumb;\n","import React from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nimport PropTypes from \"prop-types\";\nimport { noImage } from \"src/assets/images\";\n\nfunction Image(props) {\n  const { src, width, height, alt, caption, key } = props;\n  let srcs = src ? src : noImage;\n\n  return (\n    <LazyLoadImage\n      alt={alt}\n      height={height}\n      src={srcs} // use normal <img> attributes as props\n      width={width}\n      key={key}\n      effect=\"blur\"\n      caption={caption}\n    />\n  );\n}\n\nexport default Image;\n","import React from \"react\";\nimport { BsBox } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport Image from \"../Image\";\nimport { notfoundsearch } from \"../../../assets/images\";\nimport { i18n } from \"../../../i18n\";\n\nfunction Empty() {\n  return (\n    <Not>\n      <div className=\"app__empty\">\n        <div className=\"empty\">\n          <Image src={notfoundsearch} height={100} width={100} />\n          <h4 className=\"h4\" id=\"noDataFound\">\n            &nbsp;{i18n(\"common.noData\")}\n          </h4>\n        </div>\n      </div>\n    </Not>\n  );\n}\n\nexport default Empty;\n\nconst Not = styled.div`\n  .app__empty {\n    width: 100%;\n    height: 100%;\n    max-width: 1170px;\n    margin: auto;\n  }\n\n  .empty {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    row-gap: 1rem;\n    justify-content: center;\n    width: 100%;\n    height: 60vh;\n  }\n`;\n","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["Content","useState","propsText","setPropsText","currentlySelectedLanguage","setCurrentlySelectedLanguage","aboutIsLoading","setaboutIsLoading","useEffect","localStorage","getItem","AproposService","then","res","concat","catch","err","console","error","getAboutText","ContentLayout","src","AboutUs","style","width","marginLeft","marginRight","Array","map","x","i","height","className","fr","Empty","en","ar","styled","ProposLayout","Breadcrumb","title","i18n","items","BreadcrumbNav","props","isLink","item","length","index","to","display","marginBottom","alt","caption","key","srcs","noImage","LazyLoadImage","effect","Not","notfoundsearch","id","SkeletonThemeContext","React","defaultEnableAnimation","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","containerClassName","containerTestId","circle","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","styleOptions","baseColor","highlightColor","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}
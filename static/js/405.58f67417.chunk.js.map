{"version":3,"file":"static/js/405.58f67417.chunk.js","mappings":"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","sources":["modules/Search/SearchService.tsx","view/Search/SRPCard.tsx","view/Search/SearchContext.tsx","view/Search/SRP/SRPTable.tsx","view/Search/SRP/SearchResults.tsx","view/Search/Search.tsx"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\n\nexport default class SearchService {\n  // GET CATEGORIES LIST FOR PUBLICATIONS\n  static async getCategoriesList() {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/category-publication`\n    );\n    return response.data;\n  }\n\n  static async getSearchResultsForPublicationsBasedOnSearchString(\n    SEARCH_STRING,\n    OFFSET\n  ) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/search?filter=${SEARCH_STRING}&limit=10&offset=${OFFSET}&validated={true}`\n    );\n    return response.data;\n  }\n\n  // SAERCH BASED ON CATEGORIES (REVERSE LOGIC)\n  static async searchUsingMainCatefories(SEARCH_STRING, categoryName, OFFSET) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/category-publication?filter[titleFR]=${categoryName}`\n    );\n    const publicationsOfSelectedCategory = response.data.rows[0]?.publications;\n    const finalResponseOBject = {\n      rows: publicationsOfSelectedCategory ?? [],\n      count: publicationsOfSelectedCategory?.length ?? 0,\n    };\n    return finalResponseOBject;\n  }\n\n  // ARCHIVE SEARCH\n  static async getSearchResultsForArchiveBasedOnSearchString(\n    SEARCH_STRING,\n    FILTER_STRING,\n    OFFSET\n  ) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/publication?filter[descriptionFR]=${SEARCH_STRING}&limit=5&offset=${OFFSET}&filter[statut]=archive${FILTER_STRING}`\n    );\n    return response.data;\n  }\n\n  static async getArchivePublications(SEARCH_STRING, FILTER, OFFSET) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/publication/search?filter=${SEARCH_STRING}&limit=10&offset=${OFFSET}&advanced[statut]=${FILTER.statut}&advanced[thematique]=${FILTER.thematique}&advanced[category]=${FILTER.category}`\n    );\n    return response.data;\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport parse from \"html-react-parser\";\nimport moment from \"moment\";\nimport { calendar, noData } from \"src/assets/images\";\nexport default function SRPCard({\n  _id,\n  date,\n  content,\n  thumbnail,\n  title,\n  entite,\n  type,\n}) {\n  const formattedDate = moment(date).format(\"l\");\n  return (\n    <CardLayout>\n      <Link to={\"/\" + entite + \"/\" + _id}>\n        <div className=\"search__description\">\n          <div>\n            <div className=\"evenement__left\">\n              {thumbnail ? (\n                <img\n                  className=\"lazyload\"\n                  style={{ width: 100, height: 100 }}\n                  src={thumbnail}\n                  alt=\"\"\n                />\n              ) : (\n                <img\n                  className=\"lazyload\"\n                  style={{ width: 100, height: 100 }}\n                  src={noData}\n                  alt=\"\"\n                />\n              )}\n            </div>\n            <div className=\"evenement__right\">\n              <div className=\"date\">\n                <div>\n                  <img className=\"lazyload\" src={calendar} alt=\"\" srcSet=\"\" />\n                  {formattedDate}\n                </div>\n                {type ? (\n                  <div className=\"cardHeader\">\n                    <span className=\"categoryBadge\">{type}</span>\n                  </div>\n                ) : null}\n              </div>\n              {title ? (\n                <div className=\"title\">\n                  {title.length > 100\n                    ? parse(title.substring(0, 100) + \"...\")\n                    : parse(title)}\n                </div>\n              ) : null}\n              {content ? (\n                <div className=\"right__footer\">\n                  {content.length > 100\n                    ? parse(content.substring(0, 100) + \"...\")\n                    : parse(content)}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </Link>\n      <hr></hr>\n    </CardLayout>\n  );\n}\n\nconst CardLayout = styled.div`\n  /* LEFT SECTION */\n  hr {\n    height: 1px;\n    background-color: #2b2840;\n    border: none;\n  }\n  .cardContent {\n    flex-grow: 1;\n    height: 100%;\n    padding-left: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    .cardHeader {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n      font-size: 12px;\n      font-family: \"Proxima Nova\";\n\n      .categoryBadge {\n        background: #f8d7da;\n        border-radius: 3px;\n        color: var(--dark--red);\n        padding: 0.4rem 0.5rem;\n        font-size: 12px;\n        font-family: \"Proxima Nova\";\n      }\n    }\n\n    .title {\n      margin-top: 1.5rem;\n      color: var(--violet);\n\n      span {\n        font-family: \"Bebas Neue Pro\";\n        font-style: normal;\n        font-weight: 700;\n        font-size: 23px;\n        line-height: 24px;\n      }\n    }\n  }\n  hr {\n    margin-top: 10px;\n    margin-bottom: 5px;\n  }\n`;\n","import { createContext } from \"react\";\n\nexport const SearchContext = createContext<any>(null);\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { SearchContext } from \"../SearchContext\";\n// COMPONENTS\nimport SRPCard from \"../SRPCard\";\n// ICONS\nimport { BsBox } from \"react-icons/bs\";\nimport Breadcrumb from \"src/view/shared/Breadcrumb\";\nimport { i18n } from \"src/i18n\";\nimport { Tabs } from \"antd\";\nimport { baseUrl } from \"../../shared/BaseUrl\";\n\nexport default function SRPTable({ currentPostsToShow }) {\n  // GLOBAL STATE\n  const { TabPane } = Tabs;\n\n  const { isLoading } = useContext(SearchContext);\n  const langue = localStorage.getItem(\"language\");\n  // HELPER FUNCTION\n  const getValidThumbnail = (attachmentsArray) => {\n    const acceptableExtions = \"png, jpg, jpeg, gif\";\n    let fakeUrl = \"https://via.placeholder.com/270x175\";\n    attachmentsArray.forEach((att) => {\n      if (att.downloadUrl)\n        if (att.downloadUrl.length >= 1) {\n          const urlExtension = att.downloadUrl.substring(\n            att.downloadUrl.lastIndexOf(\".\") + 1,\n            att.downloadUrl.length\n          );\n          if (acceptableExtions.includes(urlExtension)) {\n            fakeUrl = att.downloadUrl;\n          }\n        }\n    });\n    return fakeUrl;\n  };\n\n  return (\n    <div>\n      <SRPDataLayout>\n        {\n          // ONCE LOADING IS DONE\n          isLoading === true ? (\n            <section>\n              <Skeleton height={170} />\n            </section>\n          ) : (\n            <section>\n              {currentPostsToShow.count > 0 ? (\n                <section>\n                  <Tabs\n                    className=\"links\"\n                    defaultActiveKey={\n                      currentPostsToShow.rows.rowsEvent.length > 0\n                        ? \"0\"\n                        : currentPostsToShow.rows.rowsPublication.length > 0\n                        ? \"1\"\n                        : currentPostsToShow.rows.rowsGlosaire.length > 0\n                        ? \"2\"\n                        : \"3\"\n                    }\n                    onChange={(key: string) => {}}\n                  >\n                    <TabPane\n                      className=\"\"\n                      tab={i18n(\"menu.Evènements\")}\n                      key=\"0\"\n                      disabled={currentPostsToShow.rows.rowsEvent.length <= 0}\n                    >\n                      <>\n                        {currentPostsToShow.rows.rowsEvent.map(\n                          (searchResult, index) => {\n                            let thumbnail: any;\n                            if (searchResult.photos.length >= 1) {\n                              thumbnail = getValidThumbnail(\n                                searchResult.photos\n                              );\n                            }\n                            if (langue === \"fr\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"category\"]\n                                      ? searchResult[\"category\"][\"titleFR\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"titleFR\"]}\n                                  entite={\"Evenements\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"date\"]}\n                                  content={searchResult[\"descriptionFR\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            } else if (langue === \"ar\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"category\"]\n                                      ? searchResult[\"category\"][\"titleAR\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"titleAR\"]}\n                                  entite={\"Evenements\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"date\"]}\n                                  content={searchResult[\"descriptionAR\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            } else if (langue === \"en\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"category\"]\n                                      ? searchResult[\"category\"][\"titleEN\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"titleEN\"]}\n                                  entite={\"Evenements\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"date\"]}\n                                  content={searchResult[\"descriptionEN\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            }\n                          }\n                        )}\n                      </>\n                    </TabPane>\n                    <TabPane\n                      tab={i18n(\"menu.Publications\")}\n                      key=\"1\"\n                      disabled={\n                        currentPostsToShow.rows.rowsPublication.length <= 0\n                      }\n                    >\n                      <>\n                        {currentPostsToShow.rows.rowsPublication.map(\n                          (searchResult, index) => {\n                            let thumbnail =\n                              searchResult.photos.length > 0\n                                ? `${baseUrl}/file/download?privateUrl=${searchResult.photos[0].privateUrl}`\n                                : \"\";\n\n                            if (langue === \"fr\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"category\"]\n                                      ? searchResult[\"category\"][\"titleFR\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"titleFR\"]}\n                                  entite={\"detail\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"date\"]}\n                                  content={searchResult[\"descriptionFR\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            } else if (langue === \"ar\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"category\"]\n                                      ? searchResult[\"category\"][\"titleAR\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"titleAR\"]}\n                                  entite={\"detail\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"date\"]}\n                                  content={searchResult[\"descriptionAR\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            } else if (langue === \"en\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"category\"]\n                                      ? searchResult[\"category\"][\"titleEN\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"titleEN\"]}\n                                  entite={\"detail\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"date\"]}\n                                  content={searchResult[\"descriptionEN\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            }\n                          }\n                        )}\n                      </>\n                    </TabPane>\n                    <TabPane\n                      tab={i18n(\"menu.Glossaire\")}\n                      key=\"2\"\n                      disabled={\n                        currentPostsToShow.rows.rowsGlosaire.length <= 0\n                      }\n                    >\n                      <>\n                        {currentPostsToShow.rows.rowsGlosaire.map(\n                          (searchResult, index) => {\n                            if (langue === \"fr\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"categorie\"]\n                                      ? searchResult[\"categorie\"][\"titleFR\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"nomFR\"]}\n                                  entite={\"Glossaire\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"updatedAt\"]}\n                                  content={searchResult[\"definitionFR\"]}\n                                  thumbnail={\"\"}\n                                />\n                              );\n                            } else if (langue === \"ar\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"categorie\"]\n                                      ? searchResult[\"categorie\"][\"titleAR\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"nomAR\"]}\n                                  entite={\"Glossaire\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"updatedAt\"]}\n                                  content={searchResult[\"definitionAR\"]}\n                                  thumbnail={\"\"}\n                                />\n                              );\n                            } else if (langue === \"en\") {\n                              return (\n                                <SRPCard\n                                  type={\n                                    searchResult[\"categorie\"]\n                                      ? searchResult[\"categorie\"][\"titleEN\"]\n                                      : null\n                                  }\n                                  title={searchResult[\"nomEN\"]}\n                                  entite={\"Glossaire\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"updatedAt\"]}\n                                  content={searchResult[\"definitionEN\"]}\n                                  thumbnail={\"\"}\n                                />\n                              );\n                            }\n                          }\n                        )}\n                      </>\n                    </TabPane>\n                    <TabPane\n                      tab={i18n(\"menu.Médiathèque\")}\n                      key=\"3\"\n                      disabled={\n                        currentPostsToShow.rows.rowsMediatheque.length <= 0\n                      }\n                    >\n                      <>\n                        {currentPostsToShow.rows.rowsMediatheque.map(\n                          (searchResult, index) => {\n                            let thumbnail: any;\n                            if (searchResult.photos.length >= 1) {\n                              thumbnail = getValidThumbnail(\n                                searchResult.photos\n                              );\n                            }\n\n                            if (langue === \"fr\") {\n                              return (\n                                <SRPCard\n                                  type={searchResult[\"type\"]}\n                                  title={searchResult[\"titleFR\"]}\n                                  entite={\"Mediatheque/entity\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"updatedAt\"]}\n                                  content={searchResult[\"descriptionFR\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            } else if (langue === \"ar\") {\n                              return (\n                                <SRPCard\n                                  type={searchResult[\"type\"]}\n                                  title={searchResult[\"titleAR\"]}\n                                  entite={\"Mediatheque/entity\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"updatedAt\"]}\n                                  content={searchResult[\"descriptionAR\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            } else if (langue === \"en\") {\n                              return (\n                                <SRPCard\n                                  type={searchResult[\"type\"]}\n                                  title={searchResult[\"titleEN\"]}\n                                  entite={\"Mediatheque/entity\"}\n                                  key={index}\n                                  _id={searchResult[\"_id\"] ?? 0}\n                                  date={searchResult[\"updatedAt\"]}\n                                  content={searchResult[\"descriptionEN\"]}\n                                  thumbnail={thumbnail}\n                                />\n                              );\n                            }\n                          }\n                        )}\n                      </>\n                    </TabPane>\n                  </Tabs>\n                </section>\n              ) : (\n                <h3 id=\"noDataFound\">\n                  <BsBox />\n                  &nbsp;{i18n(\"common.noData\")}\n                </h3>\n              )}\n            </section>\n          )\n        }\n      </SRPDataLayout>\n    </div>\n  );\n}\n\nconst SRPDataLayout = styled.div`\n  width: 100%;\n  margin: 1rem 0;\n\n  #noDataFound {\n    font-family: \"Proxima Nova\";\n    font-style: normal;\n    font-weight: 100;\n    font-size: 1.5rem;\n    text-align: center;\n    color: #c7c6c6;\n\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SearchService from \"src/modules/Search/SearchService\";\nimport { SearchContext } from \"../SearchContext\";\n\n// COMPONENTS\nimport SRPTable from \"./SRPTable\";\nimport SRPFooter from \"./SRPFooter\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport { i18n } from \"src/i18n\";\nimport Breadcrumb from \"src/view/shared/Breadcrumb\";\n\nexport default function SearchResults({ location }) {\n  // GLOBAL STATE\n  const { setIsLoading, SRP, setSRP, searchString, setcurrentPageIndex } =\n    useContext(SearchContext);\n\n  const searchPublications = (SEARCH_STRING: string) => {\n    setIsLoading(true);\n    SearchService.getSearchResultsForPublicationsBasedOnSearchString(\n      SEARCH_STRING,\n      0\n    ).then((res) => {\n      setcurrentPageIndex(0);\n      setSRP(res);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    searchPublications(location.HOME_SEARCH_STRING);\n  }, []);\n  let currentPostsToShow: any[] = [];\n  if (SRP.length >= 1)\n    if (SRP[0].rows.length >= 1) currentPostsToShow = SRP[0].rows;\n\n  return (\n    <SRPLayout>\n      <SRPTable currentPostsToShow={SRP} />\n    </SRPLayout>\n  );\n}\n\nconst SRPLayout = styled.div`\n  margin-top: 1rem;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { SearchContext } from \"./SearchContext\";\nimport styled from \"styled-components\";\n\n// COMPONENTS\n\nimport SearchResults from \"./SRP/SearchResults\";\n// OTHER\n\nexport default function Search({ location }) {\n  // GLOBAL STATE\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchString, setSearchString] = useState(location.HOME_SEARCH_STRING);\n  const [SRP, setSRP] = useState([]);\n  const [publicationFilter, setpublicationFilter] = useState(\"autre\");\n  // PAGINATION LOGIC\n  const [currentPageIndex, setcurrentPageIndex] = useState(0);\n  const [numberOfPostsPerPage, setnumberOfPostsPerPage] = useState(5);\n\n  return (\n    <SearchContext.Provider\n      value={{\n        isLoading,\n        setIsLoading,\n        SRP,\n        setSRP,\n        searchString,\n        setSearchString,\n        publicationFilter,\n        setpublicationFilter,\n        currentPageIndex,\n        setcurrentPageIndex,\n        numberOfPostsPerPage,\n        setnumberOfPostsPerPage,\n      }}\n    >\n      <SearchLayout>\n        <section className=\"wideContent\">\n          <SearchResults location={location} />\n        </section>\n      </SearchLayout>\n    </SearchContext.Provider>\n  );\n}\n\nconst SearchLayout = styled.section`\n  max-width: 1170px;\n  margin: auto;\n\n  @media (max-width: 1071px) {\n    margin: 150px 0 0 0;\n  }\n  .wideContent {\n    display: flex;\n    justify-content: flex-start;\n  }\n`;\n"],"names":["SearchService","tenantId","AuthCurrentTenant","authAxios","response","data","SEARCH_STRING","OFFSET","categoryName","publicationsOfSelectedCategory","rows","publications","finalResponseOBject","count","length","FILTER_STRING","FILTER","statut","thematique","category","SRPCard","_id","date","content","thumbnail","title","entite","type","formattedDate","moment","format","CardLayout","to","className","style","width","height","src","alt","noData","calendar","srcSet","parse","substring","styled","SearchContext","createContext","SRPTable","currentPostsToShow","TabPane","Tabs","isLoading","useContext","langue","localStorage","getItem","getValidThumbnail","attachmentsArray","fakeUrl","forEach","att","downloadUrl","urlExtension","lastIndexOf","includes","SRPDataLayout","defaultActiveKey","rowsEvent","rowsPublication","rowsGlosaire","onChange","key","tab","i18n","disabled","map","searchResult","index","photos","baseUrl","privateUrl","rowsMediatheque","id","SearchResults","location","setIsLoading","SRP","setSRP","setcurrentPageIndex","searchString","useEffect","HOME_SEARCH_STRING","then","res","SRPLayout","Search","useState","setSearchString","publicationFilter","setpublicationFilter","currentPageIndex","numberOfPostsPerPage","setnumberOfPostsPerPage","Provider","value","SearchLayout"],"sourceRoot":""}
{"version":3,"file":"static/js/3434.18814b4f.chunk.js","mappings":"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","sources":["view/shared/Breadcrumb.tsx","view/shared/Date.tsx","view/shared/Detaill/Detaill.tsx","view/shared/Image.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BreadcrumbNav = styled.div`\r\n\tmargin: 28px 0 10px 0;\r\n\t.breadcrumb {\r\n\t\twidth: 100%;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tbackground-color: transparent;\r\n\t}\r\n\tol {\r\n\t\tdisplay: flex;\r\n\t}\r\n\tli {\r\n\t\tfont-family: \"Proxima Nova\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 25px;\r\n\t}\r\n\t.breadcrump__nav {\r\n\t\tmargin: auto;\r\n\t\tleft: 0;\r\n\t\tdisplay: flex;\r\n\t\tmax-width: 1170px;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.breadcrumb-item:not(.active) a {\r\n\t\tcolor: rgba(0, 0, 0, 0.45);\r\n\t}\r\n\r\n\th2 {\r\n\t\tfont-family: \"Bebas Neue Pro\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 47px;\r\n\t\tline-height: 39px;\r\n\t}\r\n`;\r\n\r\nfunction Breadcrumb(props) {\r\n\tconst isLink = (item) => {\r\n\t\treturn item.length > 1;\r\n\t};\r\n\treturn (\r\n\t\t<BreadcrumbNav>\r\n\t\t\t<div className=\"breadcrump__nav\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t{props.items.map((item, index) => (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={item[0]}\r\n\t\t\t\t\t\t\t\tclassName={`breadcrumb-item ${\r\n\t\t\t\t\t\t\t\t\tprops.items.length - 1 === index ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t\t\t{isLink(item) ? (\r\n\t\t\t\t\t\t\t\t\t<Link to={item[1]}>\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{item[0]} {item[1]}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\titem[0]\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</BreadcrumbNav>\r\n\t);\r\n}\r\n\r\nexport default Breadcrumb;\r\n","import moment from \"moment\";\r\n\r\nclass Date {\r\n  static Hour(date) {\r\n    return moment(date).format(\"hh:mm a\");\r\n  }\r\n\r\n  // this format 12 avril 2022 //\r\n  static pipeDate = (date) => {\r\n    let d = date.split(\"T\")[0];\r\n    return moment(d).format(\"DD-MM-YYYY\");\r\n  };\r\n\r\n  static HourMinute(date) {\r\n    return moment(date).format(\"DD-MM-YYYY HH:mm\");\r\n  }\r\n\r\n  static fullDate(date) {\r\n    return moment(date).format(\"DD-MM-YYYY\");\r\n  }\r\n  static Day(date) {\r\n    return moment(date).format(\"D\");\r\n  }\r\n\r\n  static Month(date) {\r\n    return moment(date).format(\"MMMM\");\r\n  }\r\n\r\n  static Year(date) {\r\n    return moment(date).format(\"y\");\r\n  }\r\n\r\n  static date(date) {\r\n    const day = this.Day(date);\r\n    const month = this.Month(date);\r\n    const year = this.Year(date);\r\n    const full_date = `${day} ${month} ${year} `;\r\n\r\n    return full_date;\r\n  }\r\n\r\n  static DetaillDate(date) {\r\n    return moment(date).format(\"dddd, MMMM Do YYYY\");\r\n  }\r\n}\r\nexport default Date;\r\n","import React, { useEffect } from \"react\";\r\nimport { calendar__bttom } from \"../../../assets/images\";\r\nimport { i18n } from \"../../../i18n\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport Image from \"../Image\";\r\nimport \"./DetaillWrapper.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport actions from \"src/modules/publication/list/publicationListActions\";\r\nimport selectors from \"src/modules/publication/list/publicationListSelectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Translate from \"../Translate\";\r\nimport Skeletons from \"../Skeletons\";\r\nimport Date from \"../Date\";\r\nimport { BsBox } from \"react-icons/bs\";\r\nimport Empty from \"../Nodatafound/Empty\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../shared/BaseUrl\";\r\n\r\nfunction Detaill() {\r\n  const match = useRouteMatch();\r\n  const id = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const rows = useSelector(selectors.selectRows);\r\n  const loading = useSelector(selectors.selectLoading);\r\n  // const selectHasRows = useSelector(selectors.selectHasRows);\r\n\r\n  const doFetch = async () => {\r\n    if (match.path === \"/detaill/category/:id\") {\r\n      dispatch(actions.doFindAllByCategory(id));\r\n    } else if (match.path === \"/detaill/:id\") {\r\n      dispatch(actions.doFindAllByThematique(id));\r\n    }\r\n  };\r\n  let titleBreadcrumb =\r\n    match.path === \"/detaill/category/:id\"\r\n      ? Translate.Trans(\"title\", rows)\r\n      : Translate.Trans(\"title\", rows);\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <div className=\"app__detaill\">\r\n      {loading && <h4 className=\"detaill__sketlon\">{i18n(\"table.loading\")}</h4>}\r\n      {/* {!selectHasRows && <Empty />} */}\r\n      {!loading && rows && (\r\n        <>\r\n          <div className=\"app__calendar\">\r\n            <img src={calendar__bttom} alt=\"\" />\r\n          </div>\r\n          <div className=\"__detaillwrapper\">\r\n            <Breadcrumb\r\n              title={titleBreadcrumb}\r\n              items={[[i18n(\"app.title\"), \"/\"], [i18n(titleBreadcrumb)]]}\r\n            />\r\n\r\n            <div className=\"detaill\">\r\n              <div className=\"list__detaills\">\r\n                {rows?.publications?.map((item) => (\r\n                  <Link to={`/detail/${item.id}`}>\r\n                    <div>\r\n                      <Image\r\n                        src={\r\n                          item.photos.length > 0\r\n                            ? `${baseUrl}/file/download?privateUrl=${item.photos[0].privateUrl}`\r\n                            : \"\"\r\n                        }\r\n                        alt=\"publication2 Icon\"\r\n                        id=\"image__desktop\"\r\n                        width=\"370\"\r\n                        height=\"300\"\r\n                      />\r\n                      <div className=\"list__detaill\">\r\n                        <div className=\"detaill__header\">\r\n                          <div></div>\r\n                          <div className=\"header__right\">\r\n                            {\" \"}\r\n                            {Date.HourMinute(item.date)}\r\n                          </div>\r\n                        </div>{\" \"}\r\n                        <div\r\n                          className=\"detaill__content text__wrap\"\r\n                          style={{ maxWidth: 350 }}\r\n                        >\r\n                          {Translate.Trans(\"title\", item)}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Detaill;\r\n","import React from \"react\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Image(props) {\r\n  const { src, width, height, alt, caption, key } = props;\r\n  let srcs = src ? src : `https://placehold.jp/${width}x${height}.png`;\r\n\r\n  return (\r\n    <LazyLoadImage\r\n      alt={alt}\r\n      height={height}\r\n      src={srcs} // use normal <img> attributes as props\r\n      width={width}\r\n      key={key}\r\n      effect=\"blur\"\r\n      caption={caption}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Image;\r\n"],"names":["BreadcrumbNav","styled","props","isLink","item","length","className","title","items","map","index","to","Date","date","moment","format","day","this","Day","month","Month","year","Year","pipeDate","d","split","match","useRouteMatch","id","params","dispatch","useDispatch","rows","useSelector","selectors","loading","doFetch","path","actions","titleBreadcrumb","Translate","useEffect","i18n","src","calendar__bttom","alt","publications","photos","baseUrl","privateUrl","width","height","style","maxWidth","caption","key","srcs","LazyLoadImage","effect"],"sourceRoot":""}
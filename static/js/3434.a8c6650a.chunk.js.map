{"version":3,"file":"static/js/3434.a8c6650a.chunk.js","mappings":"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","sources":["view/shared/Breadcrumb.tsx","view/shared/Date.tsx","view/shared/Detaill/Detaill.tsx","view/shared/Image.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst BreadcrumbNav = styled.div`\n  margin: 28px 0 10px 0;\n  .breadcrumb {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n  }\n  ol {\n    display: flex;\n  }\n  li {\n    font-family: \"Proxima Nova\";\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 25px;\n  }\n  .breadcrump__nav {\n    margin: auto;\n    left: 0;\n    display: flex;\n    max-width: 1170px;\n    flex-direction: column;\n  }\n\n  .breadcrumb-item:not(.active) a {\n    color: rgba(0, 0, 0, 0.45);\n  }\n\n  h2 {\n    font-family: \"Bebas Neue Pro\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 47px;\n    line-height: 39px;\n  }\n`;\n\nfunction Breadcrumb(props) {\n  const isLink = (item) => {\n    return item.length > 1;\n  };\n  return (\n    <BreadcrumbNav>\n      <div className=\"breadcrump__nav\">\n        <div>\n          <h2 className=\"h2\">{props.title}</h2>\n        </div>\n        <div>\n          <ol className=\"breadcrumb\">\n            {props.items.map((item, index) => (\n              <li key={item[0]} className={`breadcrumb-item liClass`}>\n                {isLink(item) ? (\n                  <Link to={item[1]}>\n                    {\" \"}\n                    {item[0]}\n                    {item[1] === \"/\" ? (\n                      <>{item[1]}</>\n                    ) : (\n                      <div style={{ display: \"none\", marginBottom: 0 }}>\n                        {item[1]}\n                      </div>\n                    )}\n                  </Link>\n                ) : (\n                  item[0]\n                )}\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </BreadcrumbNav>\n  );\n}\n\nexport default Breadcrumb;\n","import moment from \"moment\";\n\nclass Date {\n  static Hour(date) {\n    return moment(date).format(\"hh:mm a\");\n  }\n\n  // this format 12 avril 2022 //\n  static pipeDate = (date) => {\n    let d = date.split(\"T\")[0];\n    return moment(d).format(\"DD-MM-YYYY\");\n  };\n\n  static HourMinute(date) {\n    return moment(date).format(\"DD-MM-YYYY HH:mm\");\n  }\n\n  static fullDate(date) {\n    return moment(date).format(\"DD-MM-YYYY\");\n  }\n  static Day(date) {\n    return moment(date).format(\"D\");\n  }\n\n  static Month(date) {\n    return moment(date).format(\"MMMM\");\n  }\n\n  static Year(date) {\n    return moment(date).format(\"y\");\n  }\n\n  static date(date) {\n    const day = this.Day(date);\n    const month = this.Month(date);\n    const year = this.Year(date);\n    const full_date = `${day} ${month} ${year} `;\n\n    return full_date;\n  }\n\n  static DetaillDate(date) {\n    return moment(date).format(\"dddd, MMMM Do YYYY\");\n  }\n}\nexport default Date;\n","import React, { useEffect } from \"react\";\nimport { calendar__bttom, noImage } from \"../../../assets/images\";\nimport { i18n } from \"../../../i18n\";\nimport Breadcrumb from \"../Breadcrumb\";\nimport Image from \"../Image\";\nimport \"./DetaillWrapper.css\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport actions from \"src/modules/publication/list/publicationListActions\";\nimport selectors from \"src/modules/publication/list/publicationListSelectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Translate from \"../Translate\";\nimport Skeletons from \"../Skeletons\";\nimport Date from \"../Date\";\nimport { BsBox } from \"react-icons/bs\";\nimport Empty from \"../Nodatafound/Empty\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl } from \"../../shared/BaseUrl\";\n\nfunction Detaill() {\n  const match = useRouteMatch();\n  const id = match.params.id;\n  const dispatch = useDispatch();\n  const rows = useSelector(selectors.selectRows);\n  const loading = useSelector(selectors.selectLoading);\n  // const selectHasRows = useSelector(selectors.selectHasRows);\n  const language = localStorage.getItem(\"language\");\n\n  const doFetch = async () => {\n    if (match.path === \"/detaill/category/:id\") {\n      dispatch(actions.doFindAllByCategory(id));\n    } else if (match.path === \"/detaill/:id\") {\n      dispatch(actions.doFindAllByThematique(id));\n    }\n  };\n  let titleBreadcrumb =\n    match.path === \"/detaill/category/:id\"\n      ? Translate.Trans(\"title\", rows)\n      : Translate.Trans(\"title\", rows);\n\n  useEffect(() => {\n    doFetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, id]);\n\n  return (\n    <div className=\"app__detaill\">\n      {loading && (\n        <h4 className=\"h4 detaill__sketlon\">{i18n(\"table.loading\")}</h4>\n      )}\n      {/* {!selectHasRows && <Empty />} */}\n      {!loading && rows && (\n        <>\n          <div className=\"app__calendar\">\n            <Link to=\"/evenement\">\n              <img src={calendar__bttom} alt={noImage} />\n            </Link>\n          </div>\n          <div className=\"__detaillwrapper\">\n            <Breadcrumb\n              title={titleBreadcrumb}\n              items={[\n                [i18n(\"app.title\"), \"/\"],\n                [i18n(titleBreadcrumb), \"/publication\"],\n              ]}\n            />\n\n            <div className=\"detaill\">\n              <div className=\"list__detaills\">\n                {rows?.publications?.map((item) => (\n                  <Link to={`/detail/${item.id}`}>\n                    <div>\n                      {language === \"fr\" ? (\n                        <Image\n                          src={\n                            item.photos.length > 0\n                              ? `${baseUrl}/file/download?privateUrl=${item.photos[0]?.privateUrl}`\n                              : noImage\n                          }\n                          alt={noImage}\n                          id=\"image__desktop\"\n                          width=\"370\"\n                          height=\"300\"\n                        />\n                      ) : language === \"ar\" ? (\n                        <Image\n                          src={\n                            item.photosAR.length > 0\n                              ? `${baseUrl}/file/download?privateUrl=${item.photosAR[0]?.privateUrl}`\n                              : noImage\n                          }\n                          alt={noImage}\n                          id=\"image__desktop\"\n                          width=\"370\"\n                          height=\"300\"\n                        />\n                      ) : (\n                        <Image\n                          src={\n                            item.photosEN.length > 0\n                              ? `${baseUrl}/file/download?privateUrl=${item.photosEN[0]?.privateUrl}`\n                              : noImage\n                          }\n                          alt={noImage}\n                          id=\"image__desktop\"\n                          width=\"370\"\n                          height=\"300\"\n                        />\n                      )}\n\n                      <div className=\"list__detaill\">\n                        <div className=\"detaill__header\">\n                          <div></div>\n                          <div className=\"header__right\">\n                            {\" \"}\n                            {Date.HourMinute(item.date)}\n                          </div>\n                        </div>{\" \"}\n                        <div\n                          className=\"detaill__content text__wrap\"\n                          style={{ maxWidth: 350 }}\n                        >\n                          {Translate.Trans(\"title\", item)}\n                        </div>\n                      </div>\n                    </div>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Detaill;\n","import React from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nimport PropTypes from \"prop-types\";\nimport { noImage } from \"src/assets/images\";\n\nfunction Image(props) {\n  const { src, width, height, alt, caption, key } = props;\n  let srcs = src ? src : noImage;\n\n  return (\n    <LazyLoadImage\n      alt={alt}\n      height={height}\n      src={srcs} // use normal <img> attributes as props\n      width={width}\n      key={key}\n      effect=\"blur\"\n      caption={caption}\n    />\n  );\n}\n\nexport default Image;\n"],"names":["BreadcrumbNav","styled","props","isLink","item","length","className","title","items","map","index","to","style","display","marginBottom","Date","date","moment","format","day","this","Day","month","Month","year","Year","pipeDate","d","split","match","useRouteMatch","id","params","dispatch","useDispatch","rows","useSelector","selectors","loading","language","localStorage","getItem","doFetch","path","actions","titleBreadcrumb","Translate","useEffect","i18n","src","calendar__bttom","alt","noImage","publications","photos","baseUrl","privateUrl","width","height","photosAR","photosEN","maxWidth","caption","key","srcs","LazyLoadImage","effect"],"sourceRoot":""}
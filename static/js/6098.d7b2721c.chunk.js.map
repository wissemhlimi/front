{"version":3,"file":"static/js/6098.d7b2721c.chunk.js","mappings":"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","sources":["modules/publication/form/publicationFormSelectors.tsx","modules/publication/publicationEnumerators.tsx","view/shared/form/items/RadioFormItem.tsx","view/shared/form/items/AutocompleteFormItem.tsx","modules/categoryPublication/categoryPublicationSelectors.tsx","view/Publications/autocomplete/PublicationAutocompleteFormItem.tsx","view/shared/styles/ImagesWrapper.tsx","view/shared/uploaders/ImagesContentUploader.tsx","view/shared/form/items/ImagesUploadFormItem.tsx","view/Publications/form/PublicationForm.tsx","view/Publications/form/PublicationFormPage.tsx","view/shared/uploaders/FilesUploader.tsx","view/shared/form/items/FilesFormItem.tsx","view/shared/form/items/TextAreaFormItem.tsx"],"sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectRaw = (state) => state.publication.form;\n\nconst selectRecord = createSelector(\n  [selectRaw],\n  (raw) => raw.record,\n);\n\nconst selectInitLoading = createSelector(\n  [selectRaw],\n  (raw) => Boolean(raw.initLoading),\n);\n\nconst selectSaveLoading = createSelector(\n  [selectRaw],\n  (raw) => Boolean(raw.saveLoading),\n);\n\nconst publicationFormSelectors = {\n  selectInitLoading,\n  selectSaveLoading,\n  selectRecord,\n  selectRaw,\n};\n\nexport default publicationFormSelectors;","const publicationEnumerators = {\n  categorie: [\n    \"Manifestation\",\n    \"article scientifique\",\n    \"article journalistique\",\n    \"rapport\",\n    \"entretien\",\n    \"données numériques\",\n    \"autre\",\n  ],\n  type: [\n    \"Texte\",\n    \"audio\",\n    \"vidéo\",\n    \"lien_web\",\n    \"photo\",\n    \"infographie\",\n    \"statistiques\",\n    \"autre\",\n  ],\n  statut: [\"archive\", \"en_attente\", \"valide\", \"rejete\"],\n};\n\nexport default publicationEnumerators;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormErrors from \"src/view/shared/form/formErrors\";\nimport { useFormContext } from \"react-hook-form\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\nimport \"@splidejs/react-splide/css\";\nimport { GrTextAlignFull } from \"react-icons/gr\";\nimport { IoVideocamOutline } from \"react-icons/io5\";\nimport { CgLink } from \"react-icons/cg\";\nimport { BsCamera } from \"react-icons/bs\";\nimport { BiMicrophone, BiStats } from \"react-icons/bi\";\nimport { AiOutlineQuestion } from \"react-icons/ai\";\nimport { VscGraphScatter } from \"react-icons/vsc\";\nimport { i18n } from \"src/i18n\";\n\nfunction RadioFormItem(props) {\n  const {\n    label,\n    name,\n    hint,\n    options,\n    externalErrorMessage,\n    required,\n    className,\n  } = props;\n\n  const {\n    register,\n    errors,\n    formState: { touched, isSubmitted },\n    setValue,\n    watch,\n  } = useFormContext();\n\n  useEffect(() => {\n    register({ name });\n  }, [register, name]);\n\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n\n  return (\n    <section className=\"contentTypes\">\n      <span>{label}</span>\n      <Splide\n        className=\"splide\"\n        options={{\n          gap: \".2rem\",\n          perPage: 5,\n          pagination: false,\n          Wheel: true,\n          width: \"100%\",\n        }}\n      >\n        {options.map((option) => (\n          <SplideSlide key={option.value}>\n            <label key={option.value} htmlFor={option.label}>\n              <input\n                type=\"radio\"\n                className={className}\n                id={`${option.value}`}\n                name={`${name}-${option.value}`}\n                value={option.value}\n                checked={String(option.value) === String(watch(name))}\n                onChange={(e) => {\n                  setValue(name, e.target.value, {\n                    shouldValidate: true,\n                    shouldDirty: true,\n                  });\n                  props.onChange && props.onChange(e.target.value);\n                }}\n              />\n              <div className=\"TypeCard\">\n                {\n                  {\n                    Texte: <GrTextAlignFull className=\"icon\" fontSize={20} />,\n                    audio: <BiMicrophone className=\"icon\" fontSize={20} />,\n                    vidéo: <IoVideocamOutline className=\"icon\" fontSize={20} />,\n                    lien_web: <CgLink className=\"icon\" fontSize={20} />,\n                    photo: <BsCamera className=\"icon\" fontSize={20} />,\n                    infographie: (\n                      <VscGraphScatter className=\"icon\" fontSize={20} />\n                    ),\n                    statistiques: <BiStats className=\"icon\" fontSize={20} />,\n                    autre: <AiOutlineQuestion className=\"icon\" fontSize={20} />,\n                  }[option.label]\n                }\n                <span>\n                  {i18n(\n                    `entities.publication.enumerators.type.${option.label}`\n                  )}\n                </span>\n              </div>\n            </label>\n          </SplideSlide>\n        ))}\n      </Splide>\n    </section>\n  );\n}\n\nRadioFormItem.defaultProps = {\n  required: false,\n};\n\nRadioFormItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  label: PropTypes.string,\n  hint: PropTypes.string,\n  required: PropTypes.bool,\n  externalErrorMessage: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default RadioFormItem;\n","import { i18n } from \"src/i18n\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport FormErrors from \"src/view/shared/form/formErrors\";\nimport AsyncSelect from \"react-select/async\";\nimport { useFormContext } from \"react-hook-form\";\n\nconst AUTOCOMPLETE_SERVER_FETCH_SIZE = 100;\n\nfunction AutocompleteFormItem(props) {\n  const {\n    errors,\n    watch,\n    setValue,\n    register,\n    formState: { touched, isSubmitted },\n  } = useFormContext();\n\n  const {\n    label,\n    name,\n    hint,\n    placeholder,\n    autoFocus,\n    externalErrorMessage,\n    mode,\n    required,\n    isClearable,\n    fetchFn,\n    mapper,\n  } = props;\n\n  useEffect(() => {\n    register({ name });\n  }, [register, name]);\n\n  const originalValue = watch(name);\n\n  const value = () => {\n    if (mode === \"multiple\") {\n      return valueMultiple();\n    } else {\n      return valueOne();\n    }\n  };\n\n  const valueMultiple = () => {\n    if (originalValue) {\n      return originalValue.map((value) => mapper.toAutocomplete(value));\n    }\n\n    return [];\n  };\n\n  const valueOne = () => {\n    if (originalValue) {\n      return mapper.toAutocomplete(originalValue);\n    }\n\n    return null;\n  };\n\n  const handleSelect = (value) => {\n    if (mode === \"multiple\") {\n      return handleSelectMultiple(value);\n    } else {\n      return handleSelectOne(value);\n    }\n  };\n\n  const handleSelectMultiple = (values) => {\n    if (!values) {\n      setValue(name, [], { shouldValidate: true, shouldDirty: true });\n      props.onChange && props.onChange([]);\n      return;\n    }\n\n    const newValue = values.map((value) => mapper.toValue(value));\n    setValue(name, newValue, { shouldValidate: true, shouldDirty: true });\n    props.onChange && props.onChange(newValue);\n  };\n\n  const handleSelectOne = (value) => {\n    if (!value) {\n      setValue(name, null, { shouldValidate: true, shouldDirty: true });\n      props.onChange && props.onChange(null);\n      return;\n    }\n\n    const newValue = mapper.toValue(value);\n    setValue(name, newValue, { shouldValidate: true, shouldDirty: true });\n    props.onChange && props.onChange(newValue);\n  };\n\n  const handleSearch = async (value) => {\n    try {\n      const results = await fetchFn(value, AUTOCOMPLETE_SERVER_FETCH_SIZE);\n\n      return results.map((result) => mapper.toAutocomplete(result));\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  };\n\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n\n  const isInvalid = Boolean(errorMessage);\n\n  const controlStyles = isInvalid\n    ? {\n        control: (provided) => ({\n          ...provided,\n          borderColor: \"red\",\n        }),\n      }\n    : undefined;\n\n  return (\n    <div className='form-group'>\n      {Boolean(label) && (\n        <label\n          className={`col-form-label ${required ? \"required\" : null}`}\n          htmlFor={name}>\n          {label}\n        </label>\n      )}\n      <div style={{ display: \"flex\" }}>\n        <AsyncSelect\n          className='w-100'\n          styles={controlStyles}\n          id={name}\n          name={name}\n          defaultOptions={true}\n          isMulti={mode === \"multiple\" ? true : false}\n          loadOptions={handleSearch}\n          placeholder={placeholder || \"\"}\n          autoFocus={autoFocus || undefined}\n          onChange={handleSelect}\n          onBlur={(event) => {\n            props.onBlur && props.onBlur(event);\n          }}\n          value={value()}\n          isClearable={isClearable}\n          loadingMessage={() => i18n(\"autocomplete.loading\")}\n          noOptionsMessage={() => i18n(\"autocomplete.noOptions\")}\n        />\n      </div>\n\n      <div className='invalid-feedback'>{errorMessage}</div>\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\n    </div>\n  );\n}\n\nAutocompleteFormItem.defaultProps = {\n  isClearable: true,\n  mode: \"default\",\n  required: false,\n};\n\nAutocompleteFormItem.propTypes = {\n  fetchFn: PropTypes.func.isRequired,\n  mapper: PropTypes.object.isRequired,\n  required: PropTypes.bool,\n  mode: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  hint: PropTypes.string,\n  autoFocus: PropTypes.bool,\n  placeholder: PropTypes.string,\n  externalErrorMessage: PropTypes.string,\n  isClearable: PropTypes.bool,\n  showCreate: PropTypes.bool,\n  hasPermissionToCreate: PropTypes.bool,\n};\n\nexport default AutocompleteFormItem;\n","import { createSelector } from 'reselect';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport PermissionChecker from 'src/modules/auth/permissionChecker';\nimport Permissions from 'src/security/permissions';\n\nconst selectPermissionToRead = createSelector(\n  [\n    authSelectors.selectCurrentTenant,\n    authSelectors.selectCurrentUser,\n  ],\n  (currentTenant, currentUser) =>\n    new PermissionChecker(currentTenant, currentUser).match(\n      Permissions.values.categoryPublicationRead,\n    ),\n);\n\nconst selectPermissionToEdit = createSelector(\n  [\n    authSelectors.selectCurrentTenant,\n    authSelectors.selectCurrentUser,\n  ],\n  (currentTenant, currentUser) =>\n    new PermissionChecker(currentTenant, currentUser).match(\n      Permissions.values.categoryPublicationEdit,\n    ),\n);\n\nconst selectPermissionToCreate = createSelector(\n  [\n    authSelectors.selectCurrentTenant,\n    authSelectors.selectCurrentUser,\n  ],\n  (currentTenant, currentUser) =>\n    new PermissionChecker(currentTenant, currentUser).match(\n      Permissions.values.categoryPublicationCreate,\n    ),\n);\n\nconst selectPermissionToImport = createSelector(\n  [\n    authSelectors.selectCurrentTenant,\n    authSelectors.selectCurrentUser,\n  ],\n  (currentTenant, currentUser) =>\n    new PermissionChecker(currentTenant, currentUser).match(\n      Permissions.values.categoryPublicationImport,\n    ),\n);\n\nconst selectPermissionToDestroy = createSelector(\n  [\n    authSelectors.selectCurrentTenant,\n    authSelectors.selectCurrentUser,\n  ],\n  (currentTenant, currentUser) =>\n    new PermissionChecker(currentTenant, currentUser).match(\n      Permissions.values.categoryPublicationDestroy,\n    ),\n);\n\nconst categoryPublicationSelectors = {\n  selectPermissionToRead,\n  selectPermissionToEdit,\n  selectPermissionToCreate,\n  selectPermissionToDestroy,\n  selectPermissionToImport,\n};\n\nexport default categoryPublicationSelectors;\n","import React, { useState } from \"react\";\nimport CategoryPublicationService from \"src/modules/categoryPublication/categoryPublicationService\";\nimport AutocompleteFormItem from \"src/view/shared/form/items/AutocompleteFormItem\";\nimport { useSelector } from \"react-redux\";\nimport selectors from \"src/modules/categoryPublication/categoryPublicationSelectors\";\nimport { useFormContext } from \"react-hook-form\";\n\nconst CategoryPublicationAutocompleteFormItem = (props) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const { setValue, getValues } = useFormContext();\n  const language = localStorage.getItem(\"language\");\n\n  const hasPermissionToCreate = useSelector(selectors.selectPermissionToCreate);\n\n  const doCloseModal = () => {\n    setModalVisible(false);\n  };\n\n  const doOpenModal = () => {\n    setModalVisible(true);\n  };\n\n  const fetchFn = (value, limit) => {\n    return CategoryPublicationService.listAutocomplete(value, limit, language);\n  };\n\n  const mapper = {\n    toAutocomplete(value) {\n      if (!value) {\n        return null;\n      }\n\n      const key = value.id;\n      let label = value.label;\n\n      if (value.titleFR) {\n        label = value.titleFR;\n      }\n\n      return {\n        key,\n        label,\n      };\n    },\n\n    toValue(value) {\n      if (!value) {\n        return null;\n      }\n\n      return {\n        id: value.key,\n        label: value.label,\n      };\n    },\n  };\n\n  const { form, ...rest } = props;\n  return (\n    <>\n      <AutocompleteFormItem\n        {...rest}\n        fetchFn={fetchFn}\n        mapper={mapper}\n        onOpenModal={doOpenModal}\n        inMemoryFilter\n        hasPermissionToCreate={hasPermissionToCreate}\n      />\n    </>\n  );\n};\n\nexport default CategoryPublicationAutocompleteFormItem;\n","import styled from \"styled-components\";\n\nconst ImagesWrapper = styled.div`\n  .ant-upload-select-picture-card i {\n    font-size: 32px;\n    color: #999;\n  }\n\n  .ant-upload-select-picture-card .ant-upload-text {\n    margin-top: 8px;\n    color: #666;\n  }\n\n  .ant-upload-list-item-info > span {\n    width: 100%;\n    height: 100%;\n  }\n\n  .ant-upload-list-item-thumbnail > img {\n    object-fit: cover;\n  }\n`;\n\nexport default ImagesWrapper;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Upload, Modal } from \"antd\";\n// import FileUploader from 'src/modules/shared/fileUpload/fileUploader';\nimport Errors from \"src/modules/shared/error/errors\";\nimport ImagesWrapper from \"src/view/shared/styles/ImagesWrapper\";\nimport { i18n } from \"src/i18n\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport FileUploader from \"src/modules/shared/fileupload/fileUploader\";\n\nconst ImagesContentUploader = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState(\"\");\n\n  const value = () => {\n    const { value } = props;\n\n    if (!value) {\n      return [];\n    }\n\n    return Array.isArray(value) ? value : [value];\n  };\n\n  const fileList = () => {\n    return value().map((item) => ({\n      uid: item.id || undefined,\n      name: item.name,\n      status: \"done\" as \"done\",\n      url: item.downloadUrl,\n      size: item.size,\n      type: item.type,\n    }));\n  };\n\n  const handleCancel = () => {\n    setPreviewVisible(false);\n  };\n\n  const handlePreview = (file) => {\n    setPreviewImage(file.url);\n    setPreviewVisible(true);\n  };\n\n  const handleSuccess = (file) => {\n    setLoading(false);\n    props.onChange([...value(), file]);\n  };\n\n  const handleError = (error) => {\n    setLoading(false);\n    Errors.showMessage(error);\n  };\n\n  const handleRemove = (id) => {\n    props.onChange(value().filter((item) => item.id !== id));\n  };\n\n  const handleChange = (file) => {\n    if (!file || !file.file || !file.file.status) {\n      return;\n    }\n\n    if (file.file.status === \"removed\") {\n      handleRemove(file.file.uid);\n    } else {\n      setLoading(true);\n    }\n  };\n\n  const validate = (file) => {\n    try {\n      FileUploader.validate(file, {\n        storage: props.storage,\n        image: true,\n      });\n      return true;\n    } catch (error) {\n      handleError(error);\n      return false;\n    }\n  };\n\n  const { max } = props;\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className=\"ant-upload-text\">{i18n(\"fileUploader.upload\")}</div>\n    </div>\n  );\n  return (\n    <ImagesWrapper>\n      <Upload\n        accept=\"image/*\"\n        fileList={fileList()}\n        listType=\"picture-card\"\n        customRequest={(request) => {\n          FileUploader.uploadFromRequest(\n            request,\n            {\n              storage: props.storage,\n              image: true,\n            },\n            (file) => {\n              handleSuccess(file);\n            },\n            (error) => {\n              handleError(error);\n            }\n          );\n        }}\n        onChange={handleChange}\n        onPreview={handlePreview}\n        beforeUpload={validate}\n      >\n        {max && fileList().length >= max ? null : uploadButton}\n      </Upload>\n\n      <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\n        <img\n          alt={previewImage}\n          style={{\n            width: \"100%\",\n          }}\n          src={previewImage}\n        />\n      </Modal>\n    </ImagesWrapper>\n  );\n};\n\nImagesContentUploader.propTypes = {\n  max: PropTypes.number,\n  storage: PropTypes.object,\n  value: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ImagesContentUploader;\n","import { Form } from \"antd\";\nimport { useFormContext } from \"react-hook-form\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport FormErrors from \"src/view/shared/form/formErrors\";\nimport ImagesUploader from \"src/view/shared/uploaders/ImagesUploader\";\nimport ImagesContentUploader from \"src/view/shared/uploaders/ImagesContentUploader\";\n\nconst ImagesUploadFormItem = (props) => {\n  const {\n    label,\n    name,\n    hint,\n    layout,\n    storage,\n    max,\n    required,\n\n    externalErrorMessage,\n  } = props;\n\n  const {\n    errors,\n    formState: { touched, isSubmitted },\n    setValue,\n    watch,\n    register,\n  } = useFormContext();\n\n  useEffect(() => {\n    register({ name });\n  }, [register, name]);\n\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n\n  const formHelperText = errorMessage || hint;\n\n  return (\n    <Form.Item\n      {...layout}\n      label={label}\n      required={required}\n      validateStatus={errorMessage ? \"error\" : \"success\"}\n      help={formHelperText}\n    >\n      <ImagesContentUploader\n        storage={storage}\n        value={watch(name)}\n        onChange={(value) => {\n          setValue(name, value, { shouldValidate: true, shouldDirty: true });\n          props.onChange && props.onChange(value);\n        }}\n        max={max}\n      />\n    </Form.Item>\n  );\n};\n\nImagesUploadFormItem.defaultProps = {\n  layout: null,\n  max: undefined,\n  required: false,\n};\n\nImagesUploadFormItem.propTypes = {\n  storage: PropTypes.object.isRequired,\n  max: PropTypes.number,\n\n  required: PropTypes.bool,\n\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  hint: PropTypes.string,\n  layout: PropTypes.object,\n};\n\nexport default ImagesUploadFormItem;\n","import React, { useState, useEffect } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport moment from \"moment\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport yupFormSchemas from \"src/modules/shared/yup/yupFormSchemas\";\nimport { i18n } from \"src/i18n\";\nimport * as yup from \"yup\";\nimport FilesFormItem from \"src/view/shared/form/items/FilesFormItem\";\nimport Storage from \"src/security/storage\";\nimport TextAreaFormItem from \"src/view//shared/form/items/TextAreaFormItem\";\nimport ButtonIcon from \"src/view/shared/ButtonIcon\";\nimport publicationEnumerators from \"src/modules/publication/publicationEnumerators\";\nimport RadioFormItem from \"src/view/shared/form/items/RadioFormItem\";\nimport CategoryPublicationAutocompleteFormItem from \"../autocomplete/PublicationAutocompleteFormItem\";\nimport AproposService from \"src/modules/Apropos/AproposService\";\nimport ImagesFormItem from \"src/view/shared/form/items/ImagesFormItem\";\nimport ImagesUploadFormItem from \"src/view/shared/form/items/ImagesUploadFormItem\";\nimport InputFormItem from \"src/view/shared/form/items/InputFormItem\";\n\nconst schema = yup.object().shape({\n  thematique: yupFormSchemas.relationToOne(\n    i18n(\"entities.publication.fields.thematique\"),\n    {}\n  ),\n  category: yupFormSchemas.relationToOne(\n    i18n(\"entities.publication.fields.categorie\"),\n    {\n      required: false,\n    }\n  ),\n  supportsAR: yupFormSchemas.files(i18n(\"entities.publication.fields.photos\"), {\n    required: false,\n  }),\n  photosAR: yupFormSchemas.images(i18n(\"entities.publication.fields.photos\"), {\n    required: false,\n  }),\n  supports: yupFormSchemas.files(i18n(\"entities.publication.fields.photos\"), {\n    required: false,\n  }),\n  photos: yupFormSchemas.images(i18n(\"entities.publication.fields.photos\"), {\n    required: false,\n  }),\n  supportsEN: yupFormSchemas.files(i18n(\"entities.publication.fields.photos\"), {\n    required: false,\n  }),\n  photosEN: yupFormSchemas.images(i18n(\"entities.publication.fields.photos\"), {\n    required: false,\n  }),\n  titleAR: yupFormSchemas.string(i18n(\"entities.publication.fields.titleAR\"), {\n    required: false,\n  }),\n  titleFR: yupFormSchemas.string(i18n(\"entities.publication.fields.titleFR\"), {\n    required: false,\n  }),\n  titleEN: yupFormSchemas.string(i18n(\"titleEN\"), {\n    required: false,\n  }),\n\n  descriptionFR: yupFormSchemas.string(\n    i18n(\"entities.publication.fields.description\"),\n    {\n      required: false,\n    }\n  ),\n  descriptionAR: yupFormSchemas.string(\n    i18n(\"entities.publication.fields.description\"),\n    {\n      required: false,\n    }\n  ),\n  descriptionEN: yupFormSchemas.string(\n    i18n(\"entities.publication.fields.description\"),\n    {\n      required: false,\n    }\n  ),\n});\nfunction PublicationForm(props) {\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      titleAR: record.titleAR,\n      titleFR: record.titleFR,\n      titleEN: record.titleEN,\n      thematique: record.thematique,\n      category: record.category,\n      type: record.type,\n      supportsAR: record.supportsAR || [],\n      photosAR: record.photosAR || [],\n      supports: record.supports || [],\n      photos: record.photos || [],\n      supportsEN: record.supportsEN || [],\n      photosEN: record.photosEN || [],\n      descriptionFR: record.descriptionFR,\n      descriptionAR: record.descriptionAR,\n      descriptionEN: record.descriptionEN,\n      statut: record.statut,\n    };\n  });\n  const currentlySelectedLanguage = localStorage.getItem(\"language\");\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: \"all\",\n    defaultValues: initialValues as any,\n  });\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const onSubmit = (values) => {\n    props.onSubmit(props?.record?.id, values);\n  };\n  const { saveLoading } = props;\n  return (\n    <FormProvider {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <div className=\"container__form\">\n          {/* CATEGORIES */}\n          <CategoryPublicationAutocompleteFormItem\n            name=\"category\"\n            label={i18n(\"entities.publication.fields.categorie\")}\n            required={false}\n            showCreate={!props.modal}\n          />\n\n          <RadioFormItem\n            name=\"type\"\n            label={i18n(\"entities.publication.fields.type\")}\n            options={publicationEnumerators.type.map((value) => ({\n              value,\n              label: value,\n            }))}\n            className=\"contentTypeRadio\"\n          />\n\n          {currentlySelectedLanguage === \"fr\" ? (\n            <>\n              <InputFormItem\n                name=\"titleFR\"\n                label={i18n(\"entities.publication.fields.title\")}\n                required={false}\n              />\n              <ImagesUploadFormItem\n                name=\"photos\"\n                label={i18n(\"entities.publication.fields.photos\")}\n                required={false}\n                storage={Storage.values.publicationPhotos}\n                max={1}\n              />\n              <FilesFormItem\n                name=\"supports\"\n                label={i18n(\"entities.publication.fields.supports\")}\n                required={false}\n                storage={Storage.values.publicationSupports}\n                max={1}\n                formats={undefined}\n              />\n              <TextAreaFormItem\n                name=\"descriptionFR\"\n                label={i18n(\"entities.publication.fields.description\")}\n                required={false}\n              />\n            </>\n          ) : currentlySelectedLanguage === \"en\" ? (\n            <>\n              <InputFormItem\n                name=\"titleEN\"\n                label={i18n(\"entities.publication.fields.title\")}\n                required={false}\n              />\n              <ImagesUploadFormItem\n                name=\"photosEN\"\n                label={i18n(\"entities.publication.fields.photos\")}\n                required={false}\n                storage={Storage.values.publicationPhotos}\n                max={1}\n              />\n              <FilesFormItem\n                name=\"supportsEN\"\n                label={i18n(\"entities.publication.fields.supports\")}\n                required={false}\n                storage={Storage.values.publicationSupports}\n                max={1}\n                formats={undefined}\n              />\n              <TextAreaFormItem\n                name=\"descriptionEN\"\n                label={i18n(\"entities.publication.fields.description\")}\n                required={false}\n              />\n            </>\n          ) : (\n            <>\n              <InputFormItem\n                name=\"titleAR\"\n                label={i18n(\"entities.publication.fields.title\")}\n                required={false}\n              />\n              <ImagesUploadFormItem\n                name=\"photosAR\"\n                label={i18n(\"entities.publication.fields.photos\")}\n                required={false}\n                storage={Storage.values.publicationPhotos}\n                max={1}\n              />\n              <FilesFormItem\n                name=\"supportsAR\"\n                label={i18n(\"entities.publication.fields.supports\")}\n                required={false}\n                storage={Storage.values.publicationSupports}\n                max={1}\n                formats={undefined}\n              />\n              <TextAreaFormItem\n                name=\"descriptionAR\"\n                label={i18n(\"entities.publication.fields.description\")}\n                required={false}\n              />\n            </>\n          )}\n\n          <div className=\"item__button\">\n            <button\n              className=\"cancel__button\"\n              onClick={onReset}\n              type=\"button\"\n              disabled={saveLoading}\n            >\n              {i18n(\"common.reset\")}\n            </button>\n            <button\n              className=\"form__button\"\n              onClick={form.handleSubmit(onSubmit)}\n              disabled={saveLoading}\n            >\n              <ButtonIcon loading={saveLoading} />\n              {i18n(\"common.save\")}\n            </button>\n          </div>\n        </div>\n      </form>\n    </FormProvider>\n  );\n}\n\nexport default PublicationForm;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { i18n } from \"src/i18n\";\nimport actions from \"src/modules/publication/form/publicationFormActions\";\nimport selectors from \"src/modules/publication/form/publicationFormSelectors\";\nimport { getHistory } from \"src/modules/store\";\nimport { Link } from \"react-router-dom\";\nimport PublicationForm from \"./PublicationForm\";\nimport Spinner from \"src/view/shared/Spinner\";\nimport FormWrapper from \"../../shared/styles/FormWrapper\";\nimport moment from \"moment\";\nimport Retour from \"../../shared/Retour\";\nimport AproposService from \"src/modules/Apropos/AproposService\";\n\nfunction PublicationFormPage() {\n  const [dispatched, setDispatched] = useState(false);\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n\n  const initLoading = useSelector(selectors.selectInitLoading);\n  const saveLoading = useSelector(selectors.selectSaveLoading);\n  const record = useSelector(selectors.selectRecord);\n\n  const [propsText, setPropsText] = useState(\"\");\n  const [currentlySelectedLanguage, setCurrentlySelectedLanguage] =\n    useState(\"fr\");\n  const getAboutText = () => {\n    setCurrentlySelectedLanguage(localStorage.getItem(\"language\") ?? \"fr\");\n    AproposService.getApropos()\n      .then((res: any) => {\n        if (res.rows.length > 0) {\n          setPropsText(res.rows[0]);\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n  useEffect(() => {\n    getAboutText();\n  }, []);\n\n  const isEditing = Boolean(match.params.id);\n  const title = isEditing\n    ? i18n(\"entities.publication.edit.title\")\n    : i18n(\"entities.publication.new.title\");\n  useEffect(() => {\n    dispatch(actions.doInit(match.params.id));\n    setDispatched(true);\n  }, [dispatch, match.params.id]);\n\n  const doSubmit = (id, data) => {\n    if (isEditing) {\n      dispatch(actions.doUpdate(id, data));\n    } else {\n      data.date = moment().format(\"YYYY-MM-DD\");\n      data.statut = \"en_attente\";\n      dispatch(actions.doCreate(data));\n    }\n  };\n  return (\n    <div className=\"app__contenu\">\n      <Link to=\"/profile\">\n        <Retour />\n      </Link>\n      <section className=\"contenu\">\n        <div className=\"mainContent\">\n          <div className=\"archieve__header\">\n            <h2 className=\"h2\">{i18n(\"menu.suggerer_des_donnees\")}</h2>\n            <div className=\"communiquer__bar\"></div>\n          </div>\n          {propsText ? (\n            <>\n              {currentlySelectedLanguage === \"fr\" ? (\n                <>\n                  {propsText[\"publicationDescFR\"] ? (\n                    <div className=\"contenu__description\">\n                      {propsText[\"publicationDescFR\"]}\n                    </div>\n                  ) : null}\n                </>\n              ) : currentlySelectedLanguage === \"ar\" ? (\n                <>\n                  {propsText[\"publicationDescAR\"] ? (\n                    <div className=\"contenu__description\">\n                      {propsText[\"publicationDescAR\"]}\n                    </div>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {propsText[\"publicationDescEN\"] ? (\n                    <div className=\"contenu__description\">\n                      {propsText[\"publicationDescEN\"]}\n                    </div>\n                  ) : null}\n                </>\n              )}\n            </>\n          ) : null}\n\n          <FormWrapper>\n            <div className=\"Login__container\">\n              {initLoading && <Spinner />}\n              {dispatched && !initLoading && (\n                <PublicationForm\n                  title={title}\n                  saveLoading={saveLoading}\n                  record={record}\n                  isEditing={isEditing}\n                  onSubmit={doSubmit}\n                  onCancel={() => getHistory().push(\"/profile\")}\n                />\n              )}\n            </div>\n          </FormWrapper>\n        </div>\n      </section>\n    </div>\n  );\n}\nexport default PublicationFormPage;\n","import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FileUploader from \"src/modules/shared/fileupload/fileUploader\";\nimport Errors from \"src/modules/shared/error/errors\";\nimport { i18n } from \"src/i18n\";\nimport ButtonIcon from \"src/view/shared/ButtonIcon\";\n\nfunction FilesUploader(props) {\n  const [loading, setLoading] = useState(false);\n  const input = useRef<any>();\n\n  const value = () => {\n    const { value } = props;\n    if (!value) {\n      return [];\n    }\n    return Array.isArray(value) ? value : [value];\n  };\n\n  const fileList = () => {\n    return value().map((item) => ({\n      uid: item.id || undefined,\n      name: item.name,\n      status: \"done\",\n      url: item.downloadUrl,\n    }));\n  };\n\n  const handleRemove = (id) => {\n    props.onChange(value().filter((item) => item.id !== id));\n  };\n\n  const handleChange = async (event) => {\n    try {\n      const files = event.target.files;\n\n      if (!files || !files.length) {\n        return;\n      }\n\n      let file = files[0];\n\n      FileUploader.validate(file, {\n        storage: props.storage,\n        formats: props.formats,\n      });\n      setLoading(true);\n      file = await FileUploader.upload(file, {\n        storage: props.storage,\n        formats: props.formats,\n      });\n      input.current.value = \"\";\n      setLoading(false);\n      props.onChange([...value(), file]);\n    } catch (error) {\n      input.current.value = \"\";\n      console.error(error);\n      setLoading(false);\n      Errors.showMessage(error);\n    }\n  };\n\n  const formats = () => {\n    const { schema } = props;\n    if (schema && schema.formats) {\n      return schema.formats.map((format) => `.${format}`).join(\",\");\n    }\n    return undefined;\n  };\n\n  const { max, readonly } = props;\n\n  const uploadButton = (\n    <label\n      className='btn btn-outline-secondary px-4 mb-2'\n      style={{ cursor: \"pointer\" }}>\n      <div className='upload__file'>\n        {i18n(\"fileUploader.upload\")}\n\n        <ButtonIcon loading={loading} iconClass='fas fa-plus' />\n      </div>\n      <input\n        style={{ display: \"none\" }}\n        disabled={loading || readonly}\n        accept={formats()}\n        type='file'\n        onChange={handleChange}\n        ref={input}\n      />\n    </label>\n  );\n\n  return (\n    <div>\n      {readonly || (max && fileList().length >= max) ? null : uploadButton}\n\n      {value() && value().length ? (\n        <div>\n          {value().map((item) => {\n            return (\n              <div className='file__show' key={item.id}>\n                <i className='fas fa-link text-muted mr-2'></i>\n                <a\n                  href={item.downloadUrl}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  download>\n                  {item.name}\n                </a>\n                {!readonly && (\n                  <button\n                    className='btn btn-link'\n                    type='button'\n                    onClick={() => handleRemove(item.id)}>\n                    <i className='fas fa-times'></i>\n                  </button>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nFilesUploader.propTypes = {\n  readonly: PropTypes.bool,\n  max: PropTypes.number,\n  formats: PropTypes.arrayOf(PropTypes.string),\n  storage: PropTypes.object,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\nexport default FilesUploader;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport FilesUploader from \"src/view/shared/uploaders/FilesUploader\";\nimport { useFormContext } from \"react-hook-form\";\nimport FormErrors from \"src/view/shared/form/formErrors\";\n\nfunction FilesFormItem(props) {\n  const {\n    label,\n    name,\n    hint,\n    storage,\n    formats,\n    max,\n    required,\n    externalErrorMessage,\n  } = props;\n\n  const {\n    register,\n    errors,\n    formState: { touched, isSubmitted },\n    setValue,\n    watch,\n  } = useFormContext();\n\n  useEffect(() => {\n    register({ name });\n  }, [register, name]);\n\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n\n  return (\n    <div className='form-group'>\n      {Boolean(label) && (\n        <label\n          className={`col-form-label ${required ? \"required\" : null}`}\n          htmlFor={name}>\n          {label}\n        </label>\n      )}\n\n      <br />\n\n      <FilesUploader\n        storage={storage}\n        formats={formats}\n        value={watch(name)}\n        onChange={(value) => {\n          setValue(name, value, { shouldValidate: true, shouldDirty: true });\n          props.onChange && props.onChange(value);\n        }}\n        max={max}\n      />\n\n      <div className='invalid-feedback'>{errorMessage}</div>\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\n    </div>\n  );\n}\n\nFilesFormItem.defaultProps = {\n  max: undefined,\n  required: false,\n};\n\nFilesFormItem.propTypes = {\n  storage: PropTypes.object.isRequired,\n  formats: PropTypes.any,\n\n  required: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  hint: PropTypes.string,\n  formItemProps: PropTypes.object,\n  max: PropTypes.number,\n};\n\nexport default FilesFormItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport FormErrors from \"src/view/shared/form/formErrors\";\n\nfunction TextAreaFormItem(props) {\n  const {\n    label,\n    name,\n    hint,\n    size,\n    placeholder,\n    autoFocus,\n    autoComplete,\n    externalErrorMessage,\n    required,\n  } = props;\n\n  const sizeLabelClassName =\n    {\n      small: \"col-form-label-sm\",\n      large: \"col-form-label-lg\",\n    }[size] || \"\";\n\n  const sizeInputClassName =\n    {\n      small: \"form-control-sm\",\n      large: \"form-control-lg\",\n    }[size] || \"\";\n\n  const {\n    register,\n    errors,\n    formState: { touched, isSubmitted },\n  } = useFormContext();\n\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n\n  return (\n    <div className='form_textarea'>\n      {Boolean(label) && (\n        <label\n          className={`col-form-label ${\n            required ? \"required\" : null\n          } ${sizeLabelClassName}`}\n          htmlFor={name}>\n          {label}\n        </label>\n      )}\n      <textarea\n        id={name}\n        name={name}\n        ref={register}\n        onChange={(event) => {\n          props.onChange && props.onChange(event.target.value);\n        }}\n        onBlur={(event) => {\n          props.onBlur && props.onBlur(event);\n        }}\n        placeholder={placeholder || undefined}\n        autoFocus={autoFocus || undefined}\n        autoComplete={autoComplete || undefined}\n        className={`form-control ${sizeInputClassName} ${\n          errorMessage ? \"is-invalid\" : \"\"\n        }`}\n      />\n      <div className='invalid-feedback'>{errorMessage}</div>\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\n    </div>\n  );\n}\n\nTextAreaFormItem.defaultProps = {\n  required: false,\n};\n\nTextAreaFormItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  label: PropTypes.string,\n  hint: PropTypes.string,\n  autoFocus: PropTypes.bool,\n  prefix: PropTypes.string,\n  placeholder: PropTypes.string,\n  externalErrorMessage: PropTypes.string,\n};\n\nexport default TextAreaFormItem;\n"],"names":["selectRaw","state","publication","form","selectRecord","createSelector","raw","record","selectInitLoading","Boolean","initLoading","selectSaveLoading","saveLoading","categorie","type","statut","RadioFormItem","props","label","name","options","hint","externalErrorMessage","className","required","useFormContext","register","errors","formState","touched","isSubmitted","setValue","watch","useEffect","FormErrors","gap","perPage","pagination","Wheel","width","map","option","htmlFor","id","value","checked","String","onChange","e","target","shouldValidate","shouldDirty","Texte","fontSize","audio","vidéo","lien_web","photo","infographie","statistiques","autre","i18n","defaultProps","AUTOCOMPLETE_SERVER_FETCH_SIZE","AutocompleteFormItem","placeholder","autoFocus","mode","isClearable","fetchFn","mapper","originalValue","valueMultiple","toAutocomplete","valueOne","handleSelectMultiple","values","newValue","toValue","handleSelectOne","handleSearch","results","result","console","error","errorMessage","controlStyles","control","provided","borderColor","undefined","style","display","styles","defaultOptions","isMulti","loadOptions","onBlur","event","loadingMessage","noOptionsMessage","selectPermissionToRead","authSelectors","currentTenant","currentUser","PermissionChecker","match","Permissions","selectPermissionToEdit","selectPermissionToCreate","selectPermissionToImport","selectPermissionToDestroy","useState","setModalVisible","language","getValues","localStorage","getItem","hasPermissionToCreate","useSelector","selectors","rest","limit","CategoryPublicationService","key","titleFR","onOpenModal","inMemoryFilter","styled","loading","setLoading","previewVisible","setPreviewVisible","previewImage","setPreviewImage","Array","isArray","fileList","item","uid","status","url","downloadUrl","size","handleError","Errors","max","uploadButton","LoadingOutlined","PlusOutlined","accept","listType","customRequest","request","FileUploader","storage","image","file","handleSuccess","filter","onPreview","beforeUpload","length","visible","footer","onCancel","alt","src","ImagesUploadFormItem","layout","formHelperText","validateStatus","help","schema","yup","shape","thematique","yupFormSchemas","category","supportsAR","photosAR","supports","photos","supportsEN","photosEN","titleAR","titleEN","descriptionFR","descriptionAR","descriptionEN","initialValues","currentlySelectedLanguage","useForm","resolver","yupResolver","defaultValues","onSubmit","handleSubmit","showCreate","modal","publicationEnumerators","InputFormItem","Storage","FilesFormItem","formats","TextAreaFormItem","onClick","Object","keys","forEach","disabled","ButtonIcon","dispatched","setDispatched","dispatch","useDispatch","useRouteMatch","propsText","setPropsText","setCurrentlySelectedLanguage","AproposService","then","res","rows","catch","err","getAboutText","isEditing","params","title","actions","to","Retour","FormWrapper","Spinner","data","date","moment","format","getHistory","push","input","useRef","handleChange","files","current","readonly","cursor","iconClass","join","ref","href","rel","download","autoComplete","sizeLabelClassName","small","large","sizeInputClassName"],"sourceRoot":""}
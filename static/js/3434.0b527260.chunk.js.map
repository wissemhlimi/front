{"version":3,"file":"static/js/3434.0b527260.chunk.js","mappings":"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","sources":["view/shared/Breadcrumb.tsx","view/shared/Date.tsx","view/shared/Detaill/Detaill.tsx","view/shared/Image.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BreadcrumbNav = styled.div`\r\n  margin: 28px 0 10px 0;\r\n  .breadcrumb {\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: transparent;\r\n  }\r\n  ol {\r\n    display: flex;\r\n  }\r\n  li {\r\n    font-family: \"Proxima Nova\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 25px;\r\n  }\r\n  .breadcrump__nav {\r\n    margin: auto;\r\n    left: 0;\r\n    display: flex;\r\n    max-width: 1170px;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .breadcrumb-item:not(.active) a {\r\n    color: rgba(0, 0, 0, 0.45);\r\n  }\r\n\r\n  h2 {\r\n    font-family: \"Bebas Neue Pro\";\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 47px;\r\n    line-height: 39px;\r\n  }\r\n`;\r\n\r\nfunction Breadcrumb(props) {\r\n  const isLink = (item) => {\r\n    return item.length > 1;\r\n  };\r\n  return (\r\n    <BreadcrumbNav>\r\n      <div className=\"breadcrump__nav\">\r\n        <div>\r\n          <h2>{props.title}</h2>\r\n        </div>\r\n        <div>\r\n          <ol className=\"breadcrumb\">\r\n            {props.items.map((item, index) => (\r\n              <li key={item[0]} className={`breadcrumb-item`}>\r\n                {isLink(item) ? (\r\n                  <Link to={item[1]}>\r\n                    {\" \"}\r\n                    {item[0]}\r\n                    {item[1] === \"/\" ? (\r\n                      <>{item[1]}</>\r\n                    ) : (\r\n                      <div style={{ display: \"none\", marginBottom: 0 }}>\r\n                        {item[1]}\r\n                      </div>\r\n                    )}\r\n                  </Link>\r\n                ) : (\r\n                  item[0]\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </BreadcrumbNav>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;\r\n","import moment from \"moment\";\r\n\r\nclass Date {\r\n  static Hour(date) {\r\n    return moment(date).format(\"hh:mm a\");\r\n  }\r\n\r\n  // this format 12 avril 2022 //\r\n  static pipeDate = (date) => {\r\n    let d = date.split(\"T\")[0];\r\n    return moment(d).format(\"DD-MM-YYYY\");\r\n  };\r\n\r\n  static HourMinute(date) {\r\n    return moment(date).format(\"DD-MM-YYYY HH:mm\");\r\n  }\r\n\r\n  static fullDate(date) {\r\n    return moment(date).format(\"DD-MM-YYYY\");\r\n  }\r\n  static Day(date) {\r\n    return moment(date).format(\"D\");\r\n  }\r\n\r\n  static Month(date) {\r\n    return moment(date).format(\"MMMM\");\r\n  }\r\n\r\n  static Year(date) {\r\n    return moment(date).format(\"y\");\r\n  }\r\n\r\n  static date(date) {\r\n    const day = this.Day(date);\r\n    const month = this.Month(date);\r\n    const year = this.Year(date);\r\n    const full_date = `${day} ${month} ${year} `;\r\n\r\n    return full_date;\r\n  }\r\n\r\n  static DetaillDate(date) {\r\n    return moment(date).format(\"dddd, MMMM Do YYYY\");\r\n  }\r\n}\r\nexport default Date;\r\n","import React, { useEffect } from \"react\";\r\nimport { calendar__bttom } from \"../../../assets/images\";\r\nimport { i18n } from \"../../../i18n\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport Image from \"../Image\";\r\nimport \"./DetaillWrapper.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport actions from \"src/modules/publication/list/publicationListActions\";\r\nimport selectors from \"src/modules/publication/list/publicationListSelectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Translate from \"../Translate\";\r\nimport Skeletons from \"../Skeletons\";\r\nimport Date from \"../Date\";\r\nimport { BsBox } from \"react-icons/bs\";\r\nimport Empty from \"../Nodatafound/Empty\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../shared/BaseUrl\";\r\n\r\nfunction Detaill() {\r\n  const match = useRouteMatch();\r\n  const id = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const rows = useSelector(selectors.selectRows);\r\n  const loading = useSelector(selectors.selectLoading);\r\n  // const selectHasRows = useSelector(selectors.selectHasRows);\r\n  const language = localStorage.getItem(\"language\");\r\n\r\n  const doFetch = async () => {\r\n    if (match.path === \"/detaill/category/:id\") {\r\n      dispatch(actions.doFindAllByCategory(id));\r\n    } else if (match.path === \"/detaill/:id\") {\r\n      dispatch(actions.doFindAllByThematique(id));\r\n    }\r\n  };\r\n  let titleBreadcrumb =\r\n    match.path === \"/detaill/category/:id\"\r\n      ? Translate.Trans(\"title\", rows)\r\n      : Translate.Trans(\"title\", rows);\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <div className=\"app__detaill\">\r\n      {loading && <h4 className=\"detaill__sketlon\">{i18n(\"table.loading\")}</h4>}\r\n      {/* {!selectHasRows && <Empty />} */}\r\n      {!loading && rows && (\r\n        <>\r\n          <div className=\"app__calendar\">\r\n            <Link to=\"/Evenements\">\r\n              <img src={calendar__bttom} alt=\"\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"__detaillwrapper\">\r\n            <Breadcrumb\r\n              title={titleBreadcrumb}\r\n              items={[\r\n                [i18n(\"app.title\"), \"/\"],\r\n                [i18n(titleBreadcrumb), \"/Publications\"],\r\n              ]}\r\n            />\r\n\r\n            <div className=\"detaill\">\r\n              <div className=\"list__detaills\">\r\n                {rows?.publications?.map((item) => (\r\n                  <Link to={`/detail/${item.id}`}>\r\n                    <div>\r\n                      {language === \"fr\" ? (\r\n                        <Image\r\n                          src={\r\n                            item.photos.length > 0\r\n                              ? `${baseUrl}/file/download?privateUrl=${item.photos[0]?.privateUrl}`\r\n                              : \"\"\r\n                          }\r\n                          alt=\"publication2 Icon\"\r\n                          id=\"image__desktop\"\r\n                          width=\"370\"\r\n                          height=\"300\"\r\n                        />\r\n                      ) : language === \"ar\" ? (\r\n                        <Image\r\n                          src={\r\n                            item.photosAR.length > 0\r\n                              ? `${baseUrl}/file/download?privateUrl=${item.photosAR[0]?.privateUrl}`\r\n                              : \"\"\r\n                          }\r\n                          alt=\"publication2 Icon\"\r\n                          id=\"image__desktop\"\r\n                          width=\"370\"\r\n                          height=\"300\"\r\n                        />\r\n                      ) : (\r\n                        <Image\r\n                          src={\r\n                            item.photosEN.length > 0\r\n                              ? `${baseUrl}/file/download?privateUrl=${item.photosEN[0]?.privateUrl}`\r\n                              : \"\"\r\n                          }\r\n                          alt=\"publication2 Icon\"\r\n                          id=\"image__desktop\"\r\n                          width=\"370\"\r\n                          height=\"300\"\r\n                        />\r\n                      )}\r\n\r\n                      <div className=\"list__detaill\">\r\n                        <div className=\"detaill__header\">\r\n                          <div></div>\r\n                          <div className=\"header__right\">\r\n                            {\" \"}\r\n                            {Date.HourMinute(item.date)}\r\n                          </div>\r\n                        </div>{\" \"}\r\n                        <div\r\n                          className=\"detaill__content text__wrap\"\r\n                          style={{ maxWidth: 350 }}\r\n                        >\r\n                          {Translate.Trans(\"title\", item)}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Detaill;\r\n","import React from \"react\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Image(props) {\r\n  const { src, width, height, alt, caption, key } = props;\r\n  let srcs = src ? src : `https://placehold.jp/${width}x${height}.png`;\r\n\r\n  return (\r\n    <LazyLoadImage\r\n      alt={alt}\r\n      height={height}\r\n      src={srcs} // use normal <img> attributes as props\r\n      width={width}\r\n      key={key}\r\n      effect=\"blur\"\r\n      caption={caption}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Image;\r\n"],"names":["BreadcrumbNav","styled","props","isLink","item","length","className","title","items","map","index","to","style","display","marginBottom","Date","date","moment","format","day","this","Day","month","Month","year","Year","pipeDate","d","split","match","useRouteMatch","id","params","dispatch","useDispatch","rows","useSelector","selectors","loading","language","localStorage","getItem","doFetch","path","actions","titleBreadcrumb","Translate","useEffect","i18n","src","calendar__bttom","alt","publications","photos","baseUrl","privateUrl","width","height","photosAR","photosEN","maxWidth","caption","key","srcs","LazyLoadImage","effect"],"sourceRoot":""}
{"version":3,"file":"static/js/2466.89c5aef1.chunk.js","mappings":"yQAQe,SAASA,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,YAC7BC,EAAY,CAChB,CAAEC,KAAM,YAAaC,QAAS,YAAaC,KAAM,eAAgBC,MAAO,GACxE,CAAEH,KAAM,WAAYC,QAAS,WAAYC,KAAM,aAAcC,MAAO,GACpE,CAAEH,KAAM,SAAUC,QAAS,SAAUC,KAAM,WAAYC,MAAO,GAC9D,CAAEH,KAAM,YAAaC,QAAS,YAAaC,KAAM,QAASC,MAAO,GACjE,CACEH,KAAM,gBACNC,QAAS,gBACTC,KAAM,UACNC,MAAO,IAWX,OACE,UAACC,EAAD,YACE,eAAIC,UAAU,KAAd,UAAoBC,EAAAA,EAAAA,IAAK,2BACzB,wBAAIA,EAAAA,EAAAA,IAAK,yBAET,iBAAKD,UAAU,cAAcE,SAZD,SAACC,GAC/B,IAAMC,EAAgBV,EAAUW,QAC9B,SAACC,GAAD,OAAQA,EAAGX,OAASQ,EAAMI,OAAOC,KAAjC,IACA,GACFf,EAAYW,EACb,EAOG,WACE,mBAAOK,QAAQ,YAAf,WACE,kBACEd,KAAK,QACLe,KAAK,WACLF,MAAM,YACNG,GAAG,YACHC,gBAAc,KAEhB,iBAAKZ,UAAU,mBAAf,WACE,SAAC,MAAD,CAAcA,UAAU,UACxB,2BAAOC,EAAAA,EAAAA,IAAK,iCAKfP,EAAUmB,KAAI,SAACnB,EAAWoB,GACzB,GAAwB,IAApBpB,EAAUI,MACZ,OACE,mBAAOW,QAASf,EAAUC,KAA1B,WACE,kBACEA,KAAK,QACLe,KAAK,WACLF,MAAOd,EAAUC,KACjBgB,GAAIjB,EAAUC,QAEhB,iBAAKK,UAAU,mBAAf,UAEI,CACEe,YAAY,SAAC,MAAD,CAAcf,UAAU,SACpCgB,YAAY,SAAC,MAAD,CAAiBhB,UAAU,SACvCiB,UAAU,SAAC,MAAD,CAAajB,UAAU,SACjCkB,OAAO,SAAC,MAAD,CAAclB,UAAU,SAC/BmB,SAAS,SAAC,MAAD,CAAcnB,UAAU,UACjCN,EAAUG,OAEd,6BAAOI,EAAAA,EAAAA,IAAK,eAAD,OAAgBP,EAAUE,UAArC,YAjBiCkB,EAsB1C,SAIR,CAED,I,EAAMf,EAAeqB,EAAAA,GAAAA,QAAH,s5C,kEC9EGC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CACnB,OADmBA,EAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MACnB,WAA4BC,GAA5B,uFACQC,EAAO,CACXD,KAAAA,GAEIE,EAAWC,EAAAA,EAAAA,MAJnB,SAKyBC,EAAAA,EAAAA,KAAA,kBAA0BF,EAA1B,YAA8CD,GALvE,cAKQI,EALR,yBAMSA,GANT,8FADmBN,MACnB,EADmBA,G,gCCQN,SAASO,EAAT,GAMX,IALFC,EAKC,EALDA,OACAlC,EAIC,EAJDA,KACAmC,EAGC,EAHDA,QACAC,EAEC,EAFDA,YACAC,EACC,EADDA,eAEA,GAAgDC,EAAAA,EAAAA,WAAS,GAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KAEMC,EAAgB,yCAAG,WAAOjC,GAAP,qFACvBA,EAAMkC,iBACAC,EAAa,CACjBT,OAAM,UAAEA,EAAOlC,YAAT,QAAiB,KACvBA,KAAe,OAATA,EAAgB,KAAOA,EAC7BoC,YAAaA,GAEfI,GAAoB,GAPG,SAQLd,EAAekB,eAAeD,GARzB,OASL,KATK,OASfE,OACNC,EAAAA,EAAAA,SAAgBxC,EAAAA,EAAAA,IAAK,oCAErBwC,EAAAA,EAAAA,OAAcxC,EAAAA,EAAAA,IAAK,2BAErBkC,GAAoB,GAdG,2CAAH,sDAgBlBO,EAA6B,KAAhBX,GAA+B,OAATpC,EACvC,OACE,UAACgD,EAAD,YACE,eAAI3C,UAAU,KAAd,UAAoBC,EAAAA,EAAAA,IAAK,eAAiB4B,EAAOjC,YAEjD,kBAAMgD,SAAUR,EAAhB,WACE,4BACE,kBAAO3B,QAAQ,cAAf,UAA8BR,EAAAA,EAAAA,IAAK,mBACnC,oBACEU,GAAG,cACHT,SAAU,SAACC,GAAD,OAAW2B,EAAQ3B,EAAMI,OAAOC,MAAhC,EAFZ,WAIE,mBAAQA,MAAM,KAAd,iBACA,mBAAQA,MAAM,UAAd,UACGP,EAAAA,EAAAA,IAAK,gDAER,mBAAQO,MAAM,WAAd,UAA0BP,EAAAA,EAAAA,IAAK,2BAC/B,mBAAQO,MAAM,UAAd,UAAyBP,EAAAA,EAAAA,IAAK,gCAGlC,4BACE,kBAAOQ,QAAQ,eAAf,UACGR,EAAAA,EAAAA,IAAK,+BAER,qBACEU,GAAG,eACHkC,KAAM,GACNC,KAAM,GACNtC,MAAOuB,EACP7B,SAAU,SAAC6C,GAAD,OAAOf,EAAee,EAAExC,OAAOC,MAA/B,QAGZ0B,IACA,oBACEvC,KAAK,SACLK,UAAW0C,EAAa,aAAe,qBACvCM,UAAWN,EAHb,WAKE,SAAC,MAAD,CAAY1C,UAAU,UACrBC,EAAAA,EAAAA,IAAK,sBAGTiC,IACC,mBAAQlC,UAAU,aAAlB,UACE,SAAC,MAAD,CAA2BA,UAAU,uBAMhD,CAED,I,EAAM2C,EAAavB,EAAAA,GAAAA,QAAH,owEClFD,SAAS6B,IAIvB,OAA4BhB,EAAAA,EAAAA,UAAS,CACpCtC,KAAM,YACNC,QAAS,YACTC,KAAM,eACNC,MAAO,IAJR,eAAO+B,EAAP,KAAeqB,EAAf,KAMA,GAAwBjB,EAAAA,EAAAA,UAAS,MAAjC,eAAOtC,EAAP,KAAamC,EAAb,KACA,GAAsCG,EAAAA,EAAAA,UAAS,IAA/C,eAAOF,EAAP,KAAoBC,EAApB,KAEA,OACC,UAACmB,EAAD,YACC,SAAC3D,EAAD,CAAYC,YAAayD,KACzB,SAACtB,EAAD,CACCC,OAAQA,EACRlC,KAAMA,EACNmC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,MAInB,CAED,I,EAAMmB,EAAc/B,EAAAA,GAAAA,QAAH,sB,WC3BF,SAASgC,IACtB,OACE,UAACC,EAAD,YACE,eAAIrD,UAAU,KAAd,UAAoBC,EAAAA,EAAAA,IAAK,yBAEzB,eAAID,UAAU,kBAAd,UAAiCC,EAAAA,EAAAA,IAAK,+BACtC,wBAAIA,EAAAA,EAAAA,IAAK,uBAET,eAAID,UAAU,kBAAd,UAAiCC,EAAAA,EAAAA,IAAK,wBACtC,0BACGA,EAAAA,EAAAA,IAAK,yBACN,cAAGqD,KAAK,8BAAR,uCAGF,eAAItD,UAAU,kBAAd,UAAiCC,EAAAA,EAAAA,IAAK,iCACtC,iBAAKD,UAAU,mBAAf,WACE,cAAGsD,KAAK,iCAAiCC,MAAO,CAAEC,OAAQ,IAA1D,UACE,gBAAKxD,UAAU,WAAWyD,IAAKC,EAAAA,GAAUC,IAAI,qBAE/C,cAAGL,KAAK,6BAA6BC,MAAO,CAAEC,OAAQ,IAAtD,UACE,gBAAKxD,UAAU,WAAWyD,IAAKG,EAAAA,GAASD,IAAI,oBAE9C,cAAGL,KAAK,wCAAwCC,MAAO,CAAEC,OAAQ,IAAjE,UACE,gBAAKxD,UAAU,WAAWyD,IAAKI,EAAAA,GAASF,IAAI,oBAE9C,cACEL,KAAK,iDACLC,MAAO,CAAEC,OAAQ,IAFnB,UAIE,gBAAKxD,UAAU,WAAWyD,IAAKK,EAAAA,GAAWH,IAAI,0BAKvD,CAED,I,EAAMN,EAAajC,EAAAA,GAAAA,QAAH,mZCnCD,SAAS2C,IACpB,OACI,UAACC,EAAD,YACI,SAACZ,EAAD,KACA,SAACH,EAAD,MAGX,CAED,I,IAAMe,EAAa5C,EAAAA,GAAAA,QAAH,mQ,qBC0BhB,MAnCA,WACE,IAAM6C,EAASC,aAAaC,QAAQ,YACpC,GAA8BlC,EAAAA,EAAAA,UAAS,IAAvC,eAAOmC,EAAP,KAAgBC,EAAhB,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,KAAoB,GAAI,GAAI,GAAI,IAAIC,MAAK,SAACC,GACpCA,EAAIC,MAAQ,IACC,OAAXT,GACFI,EAAWI,EAAI3B,KAAK,GAAG6B,YAEV,OAAXV,GACFI,EAAWI,EAAI3B,KAAK,GAAG8B,YAEV,OAAXX,GACFI,EAAWI,EAAI3B,KAAK,GAAG+B,YAG5B,GACF,GAAE,KAGD,+BACE,UAACC,EAAD,YACE,SAACC,EAAA,EAAD,CACEC,OAAO/E,EAAAA,EAAAA,IAAK,kBACZgF,MAAO,CAAC,EAAChF,EAAAA,EAAAA,IAAK,aAAc,KAAM,EAACA,EAAAA,EAAAA,IAAK,uBAE1C,SAACiF,EAAD,WACE,uBAAId,OAEN,SAACL,EAAD,QAIP,EAIKe,EAAgB1D,EAAAA,GAAAA,QAAH,+IAOb8D,EAAqB9D,EAAAA,GAAAA,IAAH,6I,oFC/ClB+D,EAAgB/D,EAAAA,GAAAA,IAAH,grBA6EnB,IAtCA,SAAoBgE,GAClB,IAAMC,EAAS,SAACC,GACd,OAAOA,EAAKC,OAAS,CACtB,EACD,OACE,SAACJ,EAAD,WACE,iBAAKnF,UAAU,kBAAf,WACE,0BACE,eAAIA,UAAU,KAAd,SAAoBoF,EAAMJ,WAE5B,0BACE,eAAIhF,UAAU,aAAd,SACGoF,EAAMH,MAAMpE,KAAI,SAACyE,EAAMxE,GAAP,OACf,eAAkBd,UAAS,0BAA3B,SACGqF,EAAOC,IACN,UAAC,KAAD,CAAME,GAAIF,EAAK,GAAf,UACG,IACAA,EAAK,GACO,MAAZA,EAAK,IACJ,8BAAGA,EAAK,MAER,gBAAK/B,MAAO,CAAE3D,QAAS,OAAQ6F,aAAc,GAA7C,SACGH,EAAK,QAKZA,EAAK,IAdAA,EAAK,GADC,YAwB5B,C","sources":["view/Contact/Content/FormHeader.tsx","modules/Contact/ContactService.tsx","view/Contact/Content/FormBody.tsx","view/Contact/Content/RightSection.tsx","view/Contact/Content/LeftSection.tsx","view/Contact/Content/Content.tsx","view/Contact/Contact.tsx","view/shared/Breadcrumb.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n// ICONS\nimport { GiMicroscope } from \"react-icons/gi\";\nimport { FaGraduationCap, FaNewspaper, FaFistRaised } from \"react-icons/fa\";\nimport { IoIosContact } from \"react-icons/io\";\nimport { i18n, i18nExists } from \"src/i18n\";\n\nexport default function FormHeader({ setUserType }) {\n  const userTypes = [\n    { type: \"chercheur\", display: \"chercheur\", icon: \"GiMicroscope\", state: 0 },\n    { type: \"etudiant\", display: \"etudiant\", icon: \"graduation\", state: 1 },\n    { type: \"presse\", display: \"presse\", icon: \"newPaper\", state: 1 },\n    { type: \"activiste\", display: \"activiste\", icon: \"power\", state: 1 },\n    {\n      type: \"acteur_social\",\n      display: \"acteur_social\",\n      icon: \"contact\",\n      state: 1,\n    },\n  ];\n\n  const handleUserTypeSelection = (event) => {\n    const typeToDisplay = userTypes.filter(\n      (ut) => ut.type === event.target.value\n    )[0];\n    setUserType(typeToDisplay);\n  };\n\n  return (\n    <HeaderLayout>\n      <h3 className=\"h3\">{i18n(\"ContactPage.EtesVous\")}</h3>\n      <p>{i18n(\"ContactPage.Phrase\")}</p>\n\n      <div className=\"radioOptins\" onChange={handleUserTypeSelection}>\n        <label htmlFor=\"chercheur\">\n          <input\n            type=\"radio\"\n            name=\"userType\"\n            value=\"chercheur\"\n            id=\"chercheur\"\n            defaultChecked\n          />\n          <div className=\"contentContainer\">\n            <GiMicroscope className=\"icon\" />\n            <span>{i18n(\"ContactPage.chercheur\")}</span>\n          </div>\n        </label>\n\n        {/* OTHERS */}\n        {userTypes.map((userTypes, index) => {\n          if (userTypes.state === 1) {\n            return (\n              <label htmlFor={userTypes.type} key={index}>\n                <input\n                  type=\"radio\"\n                  name=\"userType\"\n                  value={userTypes.type}\n                  id={userTypes.type}\n                />\n                <div className=\"contentContainer\">\n                  {\n                    {\n                      microscope: <GiMicroscope className=\"icon\" />,\n                      graduation: <FaGraduationCap className=\"icon\" />,\n                      newPaper: <FaNewspaper className=\"icon\" />,\n                      power: <FaFistRaised className=\"icon\" />,\n                      contact: <IoIosContact className=\"icon\" />,\n                    }[userTypes.icon]\n                  }\n                  <span>{i18n(`ContactPage.${userTypes.display}`)} </span>\n                </div>\n              </label>\n            );\n          }\n        })}\n      </div>\n    </HeaderLayout>\n  );\n}\n\nconst HeaderLayout = styled.section`\n  max-width: 700px;\n  padding-bottom: 1rem;\n  font-family: \"Proxima Nova\";\n  font-size: 1.2rem;\n  line-height: 1.5;\n  color: var(--violet);\n\n  p {\n    margin-top: 1rem;\n  }\n\n  h3 {\n    font-family: \"Proxima Nova\";\n    font-weight: 900;\n  }\n\n  .radioOptins {\n    margin-top: 1rem;\n    width: 100%;\n    display: grid;\n    grid-gap: 1rem;\n    grid-template-columns: repeat(auto-fit, minmax(90px, 1fr));\n\n    input[type=\"radio\"] {\n      display: none;\n\n      &:checked ~ .contentContainer {\n        border: 1px solid #e1011a;\n        .icon {\n          color: #e1011a;\n        }\n        span {\n          color: #e1011a;\n          font-family: \"Proxima Nova\";\n        }\n      }\n    }\n\n    .contentContainer {\n      width: 100%;\n      padding: 1.4rem;\n      border: 1px solid var(--gray3);\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n\n      .icon {\n        font-size: 2rem;\n        color: var(--violet);\n      }\n\n      span {\n        margin-top: 1rem;\n        font-size: 0.8rem;\n        text-transform: uppercase;\n        text-align: center;\n        color: var(--violet);\n      }\n\n      &:hover {\n        border: 1px solid #e1011a;\n        .icon {\n          color: #e1011a;\n        }\n        span {\n          color: #e1011a;\n        }\n      }\n    }\n  }\n`;\n","import authAxios from \"src/modules/shared/axios/authAxios\";\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\n\nexport default class ContactService {\n  static async submitFormData(data) {\n    const body = {\n      data,\n    };\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.post(`/tenant/${tenantId}/contact`, body);\n    return response;\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ContactService from \"src/modules/Contact/ContactService\";\n// ICONS\nimport { BiMailSend } from \"react-icons/bi\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { i18n } from \"src/i18n\";\n\nimport Message from \"src/view/shared/message\";\nimport Errors from \"src/modules/shared/error/errors\";\n\nexport default function FormBody({\n  sender,\n  type,\n  setType,\n  explication,\n  setExplication,\n}) {\n  const [formIsSubmitting, setformIsSubmitting] = useState(false);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const formValues = {\n      sender: sender.type ?? null,\n      type: type === \"--\" ? null : type,\n      explication: explication,\n    };\n    setformIsSubmitting(true);\n    const res = await ContactService.submitFormData(formValues);\n    if (res.status == 200) {\n      Message.success(i18n(\"entities.contact.create.success\"));\n    } else {\n      Message.error(i18n(\"entities.contact.error\"));\n    }\n    setformIsSubmitting(false);\n  };\n  let formValide = explication !== \"\" && type !== \"--\";\n  return (\n    <BodyLayout>\n      <h3 className=\"h3\">{i18n(\"ContactPage.\" + sender.display)}</h3>\n\n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <label htmlFor=\"contacttype\">{i18n(\"menu.Contact\")}</label>\n          <select\n            id=\"contacttype\"\n            onChange={(event) => setType(event.target.value)}\n          >\n            <option value=\"--\">--</option>\n            <option value=\"contact\">\n              {i18n(\"entities.contact.enumerators.type.contact\")}\n            </option>\n            <option value=\"question\">{i18n(\"ContactPage.question\")}</option>\n            <option value=\"problem\">{i18n(\"ContactPage.problem\")}</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"problemInput\">\n            {i18n(\"ContactPage.problemInput\")}\n          </label>\n          <textarea\n            id=\"problemInput\"\n            cols={30}\n            rows={10}\n            value={explication}\n            onChange={(e) => setExplication(e.target.value)}\n          ></textarea>\n        </div>\n        {!formIsSubmitting && (\n          <button\n            type=\"submit\"\n            className={formValide ? \"sendButton\" : \"sendButtonDisabled\"}\n            disabled={!formValide}\n          >\n            <BiMailSend className=\"icon\" />\n            {i18n(\"buttons.envoyer\")}\n          </button>\n        )}\n        {formIsSubmitting && (\n          <button className=\"sendButton\">\n            <AiOutlineLoading3Quarters className=\"loadingIcon\" />\n          </button>\n        )}\n      </form>\n    </BodyLayout>\n  );\n}\n\nconst BodyLayout = styled.section`\n  max-width: 700px;\n  padding-top: 1rem;\n  border-top: 2px solid #e1011a;\n\n  h3 {\n    font-family: \"Proxima Nova\";\n    text-transform: capitalize;\n    color: var(--violet);\n  }\n  p {\n    margin-top: 1rem;\n    font-family: \"Proxima Nova\";\n    font-size: 1rem;\n    line-height: 1.5;\n    color: var(--violet);\n  }\n\n  form {\n    font-family: \"Proxima Nova\";\n    font-size: 1rem;\n    line-height: 1.5;\n    color: var(--violet);\n\n    label {\n      font-size: 1.1rem;\n      font-weight: bold;\n      display: block;\n      margin-top: 1rem;\n      font-family: \"Proxima Nova\";\n    }\n    option {\n      font-family: \"Proxima Nova\";\n    }\n    input,\n    select,\n    textarea {\n      font-family: \"Proxima Nova\";\n      width: 100%;\n      margin-top: 0.5rem;\n      padding: 1rem;\n      font-size: 1rem;\n      color: var(--violet);\n      border: 1px solid var(--gray3);\n      border-radius: 0.3rem;\n    }\n\n    textarea {\n      font-family: \"Proxima Nova\";\n      resize: none;\n      border-radius: 0;\n    }\n\n    .sendButton {\n      width: 100%;\n      padding: 1rem 0;\n      margin-top: 1rem;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      text-transform: uppercase;\n      font-family: \"Bebas Neue\";\n      background-color: var(--red);\n      cursor: pointer;\n      color: var(--white);\n      font-size: 21px;\n      line-height: 25px;\n\n      .icon {\n        margin-right: 1rem;\n        font-size: 1.5rem;\n      }\n\n      .loadingIcon {\n        animation: spin 0.7s linear infinite;\n      }\n    }\n    .sendButtonDisabled {\n      width: 100%;\n      padding: 1rem 0;\n      margin-top: 1rem;\n      font-size: 1.2rem;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      // border: 1px solid #999999;\n      background-color: #cccccc;\n      color: #666666;\n      text-transform: uppercase;\n\n      .icon {\n        margin-right: 1rem;\n        font-size: 1.5rem;\n      }\n\n      .loadingIcon {\n        animation: spin 0.7s linear infinite;\n      }\n    }\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n// COMPONENTS\nimport FormHeader from \"./FormHeader\";\nimport FormBody from \"./FormBody\";\n\nexport default function RightSection() {\n\t// SIMPLE FORM SATTES\n\t// SIMPLE FORM REQUIRES SIMPLE LOGIC\n\t// PLEASE CONCIDER REFACTORING IF FORM GETS MORE COMPLICATED\n\tconst [sender, setSender] = useState({\n\t\ttype: \"chercheur\",\n\t\tdisplay: \"chercheur\",\n\t\ticon: \"GiMicroscope\",\n\t\tstate: 0,\n\t});\n\tconst [type, setType] = useState(null);\n\tconst [explication, setExplication] = useState(\"\");\n\n\treturn (\n\t\t<RightLayout>\n\t\t\t<FormHeader setUserType={setSender} />\n\t\t\t<FormBody\n\t\t\t\tsender={sender}\n\t\t\t\ttype={type}\n\t\t\t\tsetType={setType}\n\t\t\t\texplication={explication}\n\t\t\t\tsetExplication={setExplication}\n\t\t\t/>\n\t\t</RightLayout>\n\t);\n}\n\nconst RightLayout = styled.section``;\n","import React from \"react\";\n\nimport { twitter, instagram, facebook, youtube } from \"src/assets/images\";\nimport { i18n } from \"src/i18n\";\nimport styled from \"styled-components\";\n\nexport default function LeftSection() {\n  return (\n    <LeftLayout>\n      <h3 className=\"h3\">{i18n(\"ContactPage.titlep\")}</h3>\n\n      <h3 className=\"h3 sectionTitle\">{i18n(\"ContactPage.ParTelephone\")}</h3>\n      <p>{i18n(\"ContactPage.Jour\")}</p>\n\n      <h3 className=\"h3 sectionTitle\">{i18n(\"ContactPage.Email\")}</h3>\n      <p>\n        {i18n(\"ContactPage.contactp\")}\n        <a href=\"mailto:contact@al-forum.org\"> contact@al-forum.org</a>\n      </p>\n\n      <h3 className=\"h3 sectionTitle\">{i18n(\"ContactPage.ReseauxSociaux\")}</h3>\n      <div className=\"nav__socialmedia\">\n        <a href=\"https://www.facebook.com/ftdes\" style={{ margin: 10 }}>\n          <img className=\"lazyload\" src={facebook} alt=\"FaceBook Icon\" />\n        </a>\n        <a href=\"https://twitter.com/FT_DES\" style={{ margin: 10 }}>\n          <img className=\"lazyload\" src={twitter} alt=\"Twitter ICon\" />\n        </a>\n        <a href=\"https://www.youtube.com/@FTDESTunisie\" style={{ margin: 10 }}>\n          <img className=\"lazyload\" src={youtube} alt=\"Youtube Icon\" />\n        </a>\n        <a\n          href=\"https://www.instagram.com/ftdes_tunisie/?hl=fr\"\n          style={{ margin: 10 }}\n        >\n          <img className=\"lazyload\" src={instagram} alt=\"Instagram Icon\" />\n        </a>\n      </div>\n    </LeftLayout>\n  );\n}\n\nconst LeftLayout = styled.section`\n  h3 {\n    font-family: \"Proxima Nova\";\n    text-transform: capitalize;\n    color: var(--violet);\n  }\n\n  .sectionTitle {\n    margin-top: 1rem;\n    font-family: \"Proxima Nova\";\n    text-transform: capitalize;\n    font-size: 1.2rem;\n    color: #e1011a;\n  }\n\n  p {\n    font-family: \"Proxima Nova\";\n    line-height: 1.5;\n    font-size: 1rem;\n    color: #000;\n  }\n`;\n","import React from 'react'\nimport styled from 'styled-components'\n\n// COMPOENNTS\nimport RightSection from './RightSection';\nimport LeftSection from './LeftSection';\n\nexport default function Content() {\n    return (\n        <MainLayout>\n            <LeftSection />\n            <RightSection />\n        </MainLayout>\n    )\n}\n\nconst MainLayout = styled.section`\n   \n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin:2rem 0 1rem 0;\n\n    @media screen and (max-width: 1024px){ \n            flex-direction:column; \n            row-gap : 55px;\n    }\n`;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n// COMPONENTS\nimport Content from \"./Content/Content\";\nimport Breadcrumb from \"../shared/Breadcrumb\";\nimport { i18n } from \"src/i18n\";\nimport AproposService from \"src/modules/Apropos/AproposService\";\nfunction Contact() {\n  const langue = localStorage.getItem(\"language\");\n  const [apropos, setApropos] = useState(\"\");\n  useEffect(() => {\n    AproposService.list(\"\", \"\", \"\", \"\").then((res) => {\n      if (res.count > 0) {\n        if (langue === \"fr\") {\n          setApropos(res.rows[0].contactsFR);\n        }\n        if (langue === \"ar\") {\n          setApropos(res.rows[0].contactsAR);\n        }\n        if (langue === \"en\") {\n          setApropos(res.rows[0].contactsEN);\n        }\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <ContactLayout>\n        <Breadcrumb\n          title={i18n(\"common.Contact\")}\n          items={[[i18n(\"app.title\"), \"/\"], [i18n(\"common.Contact\")]]}\n        />\n        <DescriptionSection>\n          <p>{apropos}</p>\n        </DescriptionSection>\n        <Content />\n      </ContactLayout>\n    </>\n  );\n}\n\nexport default Contact;\n\nconst ContactLayout = styled.section`\n  max-width: 1170px;\n  margin: auto;\n  @media screen and (max-width: 1024px) {\n    margin: 160px 10px 0 10px;\n  }\n`;\nconst DescriptionSection = styled.div`\n  color: var(--violet);\n  font-size: 1rem;\n  font-weight: 400;\n  text-align: justify;\n  margin: 28px 0 10px 0px;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst BreadcrumbNav = styled.div`\n  margin: 28px 0 10px 0;\n  .breadcrumb {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n  }\n  ol {\n    display: flex;\n  }\n  li {\n    font-family: \"Proxima Nova\";\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 25px;\n  }\n  .breadcrump__nav {\n    margin: auto;\n    left: 0;\n    display: flex;\n    max-width: 1170px;\n    flex-direction: column;\n  }\n\n  .breadcrumb-item:not(.active) a {\n    color: rgba(0, 0, 0, 0.45);\n  }\n\n  h2 {\n    font-family: \"Bebas Neue Pro\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 47px;\n    line-height: 39px;\n  }\n`;\n\nfunction Breadcrumb(props) {\n  const isLink = (item) => {\n    return item.length > 1;\n  };\n  return (\n    <BreadcrumbNav>\n      <div className=\"breadcrump__nav\">\n        <div>\n          <h2 className=\"h2\">{props.title}</h2>\n        </div>\n        <div>\n          <ol className=\"breadcrumb\">\n            {props.items.map((item, index) => (\n              <li key={item[0]} className={`breadcrumb-item liClass`}>\n                {isLink(item) ? (\n                  <Link to={item[1]}>\n                    {\" \"}\n                    {item[0]}\n                    {item[1] === \"/\" ? (\n                      <>{item[1]}</>\n                    ) : (\n                      <div style={{ display: \"none\", marginBottom: 0 }}>\n                        {item[1]}\n                      </div>\n                    )}\n                  </Link>\n                ) : (\n                  item[0]\n                )}\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </BreadcrumbNav>\n  );\n}\n\nexport default Breadcrumb;\n"],"names":["FormHeader","setUserType","userTypes","type","display","icon","state","HeaderLayout","className","i18n","onChange","event","typeToDisplay","filter","ut","target","value","htmlFor","name","id","defaultChecked","map","index","microscope","graduation","newPaper","power","contact","styled","ContactService","data","body","tenantId","AuthCurrentTenant","authAxios","response","FormBody","sender","setType","explication","setExplication","useState","formIsSubmitting","setformIsSubmitting","handleFormSubmit","preventDefault","formValues","submitFormData","status","Message","formValide","BodyLayout","onSubmit","cols","rows","e","disabled","RightSection","setSender","RightLayout","LeftSection","LeftLayout","href","style","margin","src","facebook","alt","twitter","youtube","instagram","Content","MainLayout","langue","localStorage","getItem","apropos","setApropos","useEffect","AproposService","then","res","count","contactsFR","contactsAR","contactsEN","ContactLayout","Breadcrumb","title","items","DescriptionSection","BreadcrumbNav","props","isLink","item","length","to","marginBottom"],"sourceRoot":""}
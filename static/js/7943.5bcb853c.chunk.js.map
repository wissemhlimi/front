{"version":3,"file":"static/js/7943.5bcb853c.chunk.js","mappings":"yNAGqBA,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAwBnB,OAxBmBA,EAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,IAAAA,0BAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MACnB,kGACQC,EAAWC,EAAAA,EAAAA,MADnB,SAEyBC,EAAAA,EAAAA,IAAA,kBACVF,EADU,uBAErB,CAAC,GAJL,cAEQG,EAFR,yBAMSA,EAASC,MANlB,6FADmBL,I,wEAUnB,kGACQC,EAAWC,EAAAA,EAAAA,MADnB,SAEyBC,EAAAA,EAAAA,IAAA,kBAAyBF,EAAzB,cAA+C,CAAC,GAFzE,cAEQG,EAFR,yBAGSA,EAASC,MAHlB,6F,2EAMA,WAA8BC,GAA9B,qFACQL,EAAWC,EAAAA,EAAAA,MADnB,SAEyBC,EAAAA,EAAAA,IAAA,kBACVF,EADU,sBACYK,IAHrC,cAEQF,EAFR,yBAKSA,EAASC,MALlB,8F,IAAA,wEAQA,WAA+BE,GAA/B,qFACQN,EAAWC,EAAAA,EAAAA,MADnB,SAEyBC,EAAAA,EAAAA,IAAA,kBACVF,EADU,sBACYM,GACjC,CAAC,GAJL,cAEQH,EAFR,yBAMSA,EAASC,MANlB,8FARA,MAQA,EAxBmBL,E,4MCQN,SAASQ,IACtB,IACIC,GADWC,EAAAA,EAAAA,MACOH,GAChBI,EAASC,aAAaC,QAAQ,YAGpC,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,GAAtC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8CF,EAAAA,EAAAA,WAAS,GAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KAgBA,OAJAC,EAAAA,EAAAA,YAAU,YAVqB,SAACV,GAC9BT,EAAAA,EAAAA,kBAAmCS,GAAUW,MAAK,SAACC,GACjDL,GAAU,SAACD,GAAD,eAAC,UAAiBA,GAAWM,EAA7B,IACVH,GAAmB,GAGnBI,EAAAA,EAAAA,UAAwBD,EAAME,QAAQH,MAAK,SAACI,GAAkB,GAC/D,GACF,CAGCC,CAAuBhB,EACxB,GAAE,KAGD,8BACE,qBAASiB,UAAU,cAAnB,WACE,SAAC,IAAD,CACEC,OAAOC,EAAAA,EAAAA,IAAK,kBACZC,MAAO,CACL,EAACD,EAAAA,EAAAA,IAAK,aAAc,KACpB,EAACA,EAAAA,EAAAA,IAAK,kBAAmB,kBAG7B,SAACE,EAAD,WACE,oBAASJ,UAAU,eAAnB,SACGT,GACC,SAAC,IAAD,CAAUc,OAAQ,OAElB,gBAAKL,UAAU,cAAf,SACc,OAAXf,GACC,iCACE,SAAC,IAAD,CAAYgB,MAAOZ,EAAM,MAAWc,MAAO,MAC3C,iBAAKH,UAAU,aAAf,UACGX,EAAM,WACL,iBAAMW,UAAU,gBAAhB,SACGX,EAAM,UAAN,UAED,KACHA,EAAM,YACL,iBAAMW,UAAU,qBAAhB,SACGX,EAAM,WAAN,UAED,SAGN,mBAEA,0BAAOA,EAAM,iBACb,mBAEA,gBAAKW,UAAU,cAAf,SAA8BX,EAAM,gBACpC,qBAEW,OAAXJ,GACF,iCACE,SAAC,IAAD,CAAYgB,MAAOZ,EAAM,MAAWc,MAAO,MAC3C,iBAAKH,UAAU,aAAf,UACGX,EAAM,WACL,iBAAMW,UAAU,gBAAhB,SACGX,EAAM,UAAN,UAED,KACHA,EAAM,YACL,iBAAMW,UAAU,qBAAhB,SACGX,EAAM,WAAN,UAED,SAGN,mBAEA,0BAAOA,EAAM,iBACb,mBAEA,gBAAKW,UAAU,cAAf,SAA8BX,EAAM,gBACpC,sBAGF,iCACE,SAAC,IAAD,CAAYY,MAAOZ,EAAM,MAAWc,MAAO,MAC3C,iBAAKH,UAAU,aAAf,UACGX,EAAM,WACL,iBAAMW,UAAU,gBAAhB,SACGX,EAAM,UAAN,UAED,KACHA,EAAM,YACL,iBAAMW,UAAU,qBAAhB,SACGX,EAAM,WAAN,UAED,SAGN,mBAEA,0BAAOA,EAAM,iBACb,mBAEA,gBAAKW,UAAU,cAAf,SAA8BX,EAAM,gBACpC,+BAWnB,CAED,IAAMe,EAAaE,EAAAA,GAAAA,QAAH,krE,oFCjIVC,EAAgBD,EAAAA,GAAAA,IAAH,grBA6EnB,IAtCA,SAAoBE,GAClB,IAAMC,EAAS,SAACC,GACd,OAAOA,EAAKC,OAAS,CACtB,EACD,OACE,SAACJ,EAAD,WACE,iBAAKP,UAAU,kBAAf,WACE,0BACE,wBAAKQ,EAAMP,WAEb,0BACE,eAAID,UAAU,aAAd,SACGQ,EAAML,MAAMS,KAAI,SAACF,EAAMG,GAAP,OACf,eAAkBb,UAAS,kBAA3B,SACGS,EAAOC,IACN,UAAC,KAAD,CAAMI,GAAIJ,EAAK,GAAf,UACG,IACAA,EAAK,GACO,MAAZA,EAAK,IACJ,8BAAGA,EAAK,MAER,gBAAKK,MAAO,CAAEC,QAAS,OAAQC,aAAc,GAA7C,SACGP,EAAK,QAKZA,EAAK,IAdAA,EAAK,GADC,YAwB5B,C,gMC1EKQ,EAAuBC,EAAAA,cAAoB,CAAC,GAG5CC,GAAyB,EAwB/B,SAASC,EAAT,GAMI,IANgL,IAC5KC,EAAIC,EAAIC,EADoK,IAAhKC,MAAAA,OAAgK,MAAxJ,EAAwJ,EAA5IC,EAA4I,EAArJC,QAA6BC,EAAwH,EAAnI5B,UAA4B6B,EAAuG,EAAvGA,mBAAoBC,EAAmF,EAAnFA,gBAAmF,IAAlEC,OAAAA,OAAkE,SAA3CC,EAA2C,EAAlDjB,MAAqBkB,GAA6B,YAE1KC,EAAsBf,EAAAA,WAAiBD,GACvCiB,GAAoB,UAAKF,GAG/B,MAA2BG,OAAOC,QAAQJ,GAA1C,eAAsE,CAAjE,sBAAOK,EAAP,KACoB,qBADpB,aAEUH,EAAkBG,EAEhC,CAED,IAAMC,GAAe,0BACdL,GACAC,GAFW,IAGdJ,OAAAA,IAGEhB,GAAQ,kBACPiB,GAzCX,YAAyK,IAAlIQ,EAAkI,EAAlIA,UAAWC,EAAuH,EAAvHA,eAAgBC,EAAuG,EAAvGA,MAAOrC,EAAgG,EAAhGA,OAAQsC,EAAwF,EAAxFA,aAAcZ,EAA0E,EAA1EA,OAAQa,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,SAAuD,IAA7CC,gBAAAA,OAA6C,MAA3B1B,EAA2B,EAC/JL,EAAQ,CAAC,EAmBf,MAlBkB,QAAd6B,IACA7B,EAAM,yBAA2B,WACb,kBAAb8B,IACP9B,EAAM,wBAAN,UAAmC8B,EAAnC,MACCC,IACD/B,EAAM,4BAA8B,QACnB,kBAAV2B,GAAuC,kBAAVA,IACpC3B,EAAM2B,MAAQA,GACI,kBAAXrC,GAAyC,kBAAXA,IACrCU,EAAMV,OAASA,GACS,kBAAjBsC,GAAqD,kBAAjBA,IAC3C5B,EAAM4B,aAAeA,GACrBZ,IACAhB,EAAM4B,aAAe,OACA,qBAAdH,IACPzB,EAAM,gBAAkByB,GACE,qBAAnBC,IACP1B,EAAM,qBAAuB0B,GAC1B1B,CACV,CAqBUgC,CAA4BR,IAE/BvC,EAAY,yBACZ4B,IACA5B,GAAa,IAAJ,OAAQ4B,IAIrB,IAHA,IAAMoB,EAAwC,QAA9B1B,EAAKiB,EAAaS,cAA2B,IAAP1B,GAAgBA,EAChE2B,EAAW,GACXC,EAAYC,KAAKC,KAAK3B,GACnB4B,EAAI,EAAGA,EAAIH,EAAWG,IAAK,CAChC,IAAIC,EAAYvC,EAChB,GAAImC,EAAYzB,GAAS4B,IAAMH,EAAY,EAAG,CAO1C,IAAMR,EAAmC,QAA1BnB,EAAK+B,EAAUZ,aAA0B,IAAPnB,EAAgBA,EAAK,OAChEgC,EAAiB9B,EAAQ,EACzB+B,EAAmC,kBAAVd,EACzBA,EAAQa,EADU,eAEVb,EAFU,cAECa,EAFD,KAGxBD,GAAY,kBAAKA,GAAR,IAAmBZ,MAAOc,GACtC,CACD,IAAMC,EAAgBtC,EAAAA,cAAoB,OAAQ,CAAEnB,UAAWA,EAAWe,MAAOuC,EAAWhB,IAAKe,GAAK,UAClGL,EACAC,EAASS,KAAKD,GAKdR,EAASS,KAAKvC,EAAAA,cAAoBA,EAAAA,SAAgB,CAAEmB,IAAKe,GACrDI,EACAtC,EAAAA,cAAoB,KAAM,OAErC,CACD,OAAQA,EAAAA,cAAoB,OAAQ,CAAEnB,UAAW6B,EAAoB,cAAeC,EAAiB,YAAa,SAAU,YAAqD,QAAvCN,EAAKe,EAAaO,uBAAoC,IAAPtB,EAAgBA,EAAKJ,GAA0BM,EAClOuB,EAASrC,KAAI,SAAC+C,EAAIN,GAAL,OAAWlC,EAAAA,cAAoBO,EAAS,CAAEY,IAAKe,GAAKM,EAApD,IACbV,EACT,C","sources":["modules/Glossaire/GlossaireService.tsx","view/Glossaire/ViewDetails.tsx","view/shared/Breadcrumb.tsx","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\r\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\r\n\r\nexport default class GlossaireService {\r\n  static async getGloassaireCategories() {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/category-glossaire`,\r\n      {}\r\n    );\r\n    return response.data;\r\n  }\r\n  // fetchin list of glossaire\r\n  static async getGloassaireList() {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(`/tenant/${tenantId}/glossaire`, {});\r\n    return response.data;\r\n  }\r\n  // GET ONE\r\n  static async getOneGloassaire(GLOSSAIRE_ID) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/glossaire/${GLOSSAIRE_ID}`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  static async getGloassaireById(id) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/glossaire/${id}`,\r\n      {}\r\n    );\r\n    return response.data;\r\n  }\r\n}\r\n","import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BsFacebook, BsTwitter, BsInstagram, BsLinkedin } from \"react-icons/bs\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { i18n } from \"src/i18n\";\r\nimport GlossaireService from \"src/modules/Glossaire/GlossaireService\";\r\nimport TenantService from \"src/modules/Tenant/TenantService\";\r\nimport styled from \"styled-components\";\r\nimport Breadcrumb from \"../shared/Breadcrumb\";\r\n\r\nexport default function ViewDetails() {\r\n  const params = useParams();\r\n  let entityID = params.id;\r\n  const langue = localStorage.getItem(\"language\");\r\n\r\n  // FETCH DETAILS OF THAT ONE ENETITY\r\n  const [entity, setEntity] = useState({});\r\n  const [entityIsLoading, setEntityIsLoading] = useState(true);\r\n\r\n  const fetchTypeEntitYDetails = (entityID) => {\r\n    GlossaireService.getGloassaireById(entityID).then((value) => {\r\n      setEntity((entity) => ({ ...entity, ...value }));\r\n      setEntityIsLoading(false);\r\n\r\n      // fetching user's data once entity is loaded\r\n      TenantService.getTenant(value.tenant).then((userDetails) => {});\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTypeEntitYDetails(entityID);\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <section className=\"wideContent\">\r\n        <Breadcrumb\r\n          title={i18n(\"menu.Glossaire\")}\r\n          items={[\r\n            [i18n(\"app.title\"), \"/\"],\r\n            [i18n(\"menu.Glossaire\"), \"/Glossaire\"],\r\n          ]}\r\n        />\r\n        <MainLayout>\r\n          <section className=\"rightSection\">\r\n            {entityIsLoading ? (\r\n              <Skeleton height={500} />\r\n            ) : (\r\n              <div className=\"cardContent\">\r\n                {langue === \"fr\" ? (\r\n                  <>\r\n                    <Breadcrumb title={entity[\"nomFR\"]} items={[]} />\r\n                    <div className=\"cardHeader\">\r\n                      {entity[\"categorie\"] ? (\r\n                        <span className=\"categoryBadge\">\r\n                          {entity[\"categorie\"][\"titleFR\"]}\r\n                        </span>\r\n                      ) : null}\r\n                      {entity[\"thematique\"] ? (\r\n                        <span className=\"categoryBadgeTheme\">\r\n                          {entity[\"thematique\"][\"titleFR\"]}\r\n                        </span>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <span>{entity[\"abreviationFR\"]}</span>\r\n                    <br />\r\n\r\n                    <div className=\"cardContent\">{entity[\"definitionFR\"]}</div>\r\n                    <br />\r\n                  </>\r\n                ) : langue === \"ar\" ? (\r\n                  <>\r\n                    <Breadcrumb title={entity[\"nomAR\"]} items={[]} />\r\n                    <div className=\"cardHeader\">\r\n                      {entity[\"categorie\"] ? (\r\n                        <span className=\"categoryBadge\">\r\n                          {entity[\"categorie\"][\"titleAR\"]}\r\n                        </span>\r\n                      ) : null}\r\n                      {entity[\"thematique\"] ? (\r\n                        <span className=\"categoryBadgeTheme\">\r\n                          {entity[\"thematique\"][\"titleAR\"]}\r\n                        </span>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <span>{entity[\"abreviationAR\"]}</span>\r\n                    <br />\r\n\r\n                    <div className=\"cardContent\">{entity[\"definitionAR\"]}</div>\r\n                    <br />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Breadcrumb title={entity[\"nomEN\"]} items={[]} />\r\n                    <div className=\"cardHeader\">\r\n                      {entity[\"categorie\"] ? (\r\n                        <span className=\"categoryBadge\">\r\n                          {entity[\"categorie\"][\"titleEN\"]}\r\n                        </span>\r\n                      ) : null}\r\n                      {entity[\"thematique\"] ? (\r\n                        <span className=\"categoryBadgeTheme\">\r\n                          {entity[\"thematique\"][\"titleEN\"]}\r\n                        </span>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <span>{entity[\"abreviationEN\"]}</span>\r\n                    <br />\r\n\r\n                    <div className=\"cardContent\">{entity[\"definitionEN\"]}</div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </MainLayout>\r\n        {/* <RelatedContent type={entity[\"categorie\"]} /> */}\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst MainLayout = styled.section`\r\n  // width: var(--cerntered-content);\r\n  height: auto;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  // margin: 1rem auto;\r\n  max-width: 100%;\r\n  margin: 2rem auto;\r\n\r\n  @media (max-width : 1171px){ \r\n    margin : 150px 10px 20px 10px;\r\n    \r\n  }\r\n\r\n  p{\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: var(--violet);\r\n    text-align: justify;\r\n    margin-bottom: 2rem;\r\n  }\r\n    .rightSection{\r\n        width: 100%;\r\n        /* margin-right: 2.5rem; */\r\n\r\n        .socials{\r\n            width: 250px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n\r\n      button {\r\n        background-color: transparent;\r\n        border-radius: 50%;\r\n        color: var(--violet);\r\n        font-size: 1.8rem;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 767px){\r\n        width: 100%; \r\n    }\r\n    .cardContent {\r\n      font-size: 1rem;\r\n      line-height: 1.5;\r\n      color: var(--violet);\r\n      text-align: justify;\r\n      margin-bottom: 2rem;\r\n      font-family: \"Proxima Nova\";\r\n    \r\n        .cardHeader {\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          font-size: 12px;\r\n          font-family: \"Proxima Nova\";\r\n    \r\n          .categoryBadge {\r\n            background: #f8d7da;\r\n            border-radius: 3px;\r\n            color: var(--dark--red);\r\n            padding: 0.4rem 0.5rem;\r\n            font-size: 12px;\r\n            font-family: \"Proxima Nova\";\r\n          }\r\n          .categoryBadgeTheme {\r\n            background: #d7f8de;\r\n            border-radius: 3px;\r\n            color: #00380c;\r\n            padding: 0.4rem 0.5rem;\r\n            font-size: 12px;\r\n            font-family: \"Proxima Nova\";\r\n          }\r\n        }\r\n        .titre {\r\n            color: var(--gray3);\r\n        }\r\n        .title {\r\n          margin-top: 1.5rem;\r\n          color: var(--violet);\r\n    \r\n          span {\r\n            font-family: \"Proxima Nova\";\r\n            // font-family: \"Bebas Neue Pro\";\r\n            font-style: normal;\r\n            font-weight: 700;\r\n            font-size: 23px;\r\n            line-height: 24px;\r\n          }\r\n        }\r\n      }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BreadcrumbNav = styled.div`\r\n  margin: 28px 0 10px 0;\r\n  .breadcrumb {\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: transparent;\r\n  }\r\n  ol {\r\n    display: flex;\r\n  }\r\n  li {\r\n    font-family: \"Proxima Nova\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 25px;\r\n  }\r\n  .breadcrump__nav {\r\n    margin: auto;\r\n    left: 0;\r\n    display: flex;\r\n    max-width: 1170px;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .breadcrumb-item:not(.active) a {\r\n    color: rgba(0, 0, 0, 0.45);\r\n  }\r\n\r\n  h2 {\r\n    font-family: \"Bebas Neue Pro\";\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 47px;\r\n    line-height: 39px;\r\n  }\r\n`;\r\n\r\nfunction Breadcrumb(props) {\r\n  const isLink = (item) => {\r\n    return item.length > 1;\r\n  };\r\n  return (\r\n    <BreadcrumbNav>\r\n      <div className=\"breadcrump__nav\">\r\n        <div>\r\n          <h2>{props.title}</h2>\r\n        </div>\r\n        <div>\r\n          <ol className=\"breadcrumb\">\r\n            {props.items.map((item, index) => (\r\n              <li key={item[0]} className={`breadcrumb-item`}>\r\n                {isLink(item) ? (\r\n                  <Link to={item[1]}>\r\n                    {\" \"}\r\n                    {item[0]}\r\n                    {item[1] === \"/\" ? (\r\n                      <>{item[1]}</>\r\n                    ) : (\r\n                      <div style={{ display: \"none\", marginBottom: 0 }}>\r\n                        {item[1]}\r\n                      </div>\r\n                    )}\r\n                  </Link>\r\n                ) : (\r\n                  item[0]\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </BreadcrumbNav>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["GlossaireService","tenantId","AuthCurrentTenant","authAxios","response","data","GLOSSAIRE_ID","id","ViewDetails","entityID","useParams","langue","localStorage","getItem","useState","entity","setEntity","entityIsLoading","setEntityIsLoading","useEffect","then","value","TenantService","tenant","userDetails","fetchTypeEntitYDetails","className","title","i18n","items","MainLayout","height","styled","BreadcrumbNav","props","isLink","item","length","map","index","to","style","display","marginBottom","SkeletonThemeContext","React","defaultEnableAnimation","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","containerClassName","containerTestId","circle","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","baseColor","highlightColor","width","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}
{"version":3,"file":"static/js/7275.a423a015.chunk.js","mappings":"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","sources":["view/shared/show-one/components/Header.tsx","view/shared/show-one/components/Main.tsx","view/shared/show-one/components/SectionHeader.tsx","view/shared/show-one/RelatedContent.tsx","view/shared/show-one/Index.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PublicationService from \"src/modules/publication/publicationService\";\n// ICONS\nimport { BsFacebook, BsTwitter, BsInstagram, BsLinkedin } from \"react-icons/bs\";\nimport Translate from \"../../Translate\";\nimport {\n  EmailIcon,\n  FacebookIcon,\n  FacebookMessengerIcon,\n  HatenaIcon,\n  InstapaperIcon,\n  LineIcon,\n  LinkedinIcon,\n  LivejournalIcon,\n  MailruIcon,\n  OKIcon,\n  PinterestIcon,\n  PocketIcon,\n  RedditIcon,\n  TelegramIcon,\n  TumblrIcon,\n  TwitterIcon,\n  ViberIcon,\n  VKIcon,\n  WeiboIcon,\n  WhatsappIcon,\n  WorkplaceIcon,\n} from \"react-share\";\nexport default function Header({\n  PUBLICATION_TITLE,\n  PUBLICATION_CREATED_AT,\n  PUBLICATION_TYPE,\n}) {\n  return (\n    <HeaderLayout>\n      <span className=\"categoryBadge\">\n        {Translate.Trans(\"title\", PUBLICATION_TYPE)}\n      </span>\n\n      <h1 className=\"h1\">{Translate.Trans(\"title\", PUBLICATION_TITLE)}</h1>\n\n      <div className=\"data\">\n        <div className=\"dateAndOwner\">\n          <span>\n            Publi√© le {PublicationService.pipeDate(PUBLICATION_CREATED_AT)}\n          </span>\n        </div>\n        <br />\n        <div className=\"socials\">\n          <span>Partager :</span>\n          <button>\n            <FacebookIcon />\n          </button>\n          <button>\n            <BsTwitter />\n          </button>\n          <button>\n            <BsInstagram />\n          </button>\n          <button>\n            <BsLinkedin />\n          </button>\n        </div>\n      </div>\n    </HeaderLayout>\n  );\n}\n\nconst HeaderLayout = styled.section`\n  font-family: \"Proxima Nova\";\n  font-style: normal;\n\n  .categoryBadge {\n    background: #f8d7da;\n    border-radius: 3px;\n    color: var(--dark--red);\n    padding: 0.4rem 0.5rem;\n    font-size: 12px;\n    font-family: \"Proxima Nova\";\n  }\n\n  h1 {\n    margin: 1rem 0;\n    font-size: 40px;\n    line-height: 43px;\n    text-transform: uppercase;\n    color: var(--violet);\n  }\n\n  .socials {\n    margin-top: 1rem;\n    width: 250px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background-color: transparent;\n      border-radius: 50%;\n      color: var(--violet);\n      font-size: 1.8rem;\n    }\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n    padding: 0 0.5rem;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n// HELPER PACKAGES\nimport ReactPlayer from \"react-player/lazy\";\nimport Photogrid from \"react-facebook-photo-grid\";\nimport parse from \"html-react-parser\";\nimport Translate from \"../../Translate\";\n\nexport default function Main({ PUBLICATION, data }) {\n  return (\n    <MainLayout>\n      {PUBLICATION[\"videos\"]?.length > 0 && (\n        <VideoPlayersLayout>\n          {PUBLICATION[\"videos\"].map((vid) => {\n            return (\n              <ReactPlayer\n                key={vid._id}\n                url={vid[\"downloadUrl\"]}\n                loop={true}\n                controls={true}\n                className='video__player'\n              />\n            );\n          })}\n        </VideoPlayersLayout>\n      )}\n      <div\n        dangerouslySetInnerHTML={{\n          __html: Translate.Trans(\"description\", PUBLICATION),\n        }}\n      />\n      {/* RENDERING IMAGES (if there are any) */}\n      {(PUBLICATION[\"photos\"]?.length > 0 ||\n        PUBLICATION[\"supports\"]?.length > 0) && (\n        <PhotoPlayersLayout>\n          <section className='gridSection'>\n            {<Photogrid images={data} maxWidth='100%' key={0}></Photogrid>}\n          </section>\n        </PhotoPlayersLayout>\n      )}\n    </MainLayout>\n  );\n}\n\nconst MainLayout = styled.section`\n  margin: 2rem 0;\n  p {\n    text-align: justify;\n    color: var(--gray2);\n    font-family: \"Proxima Nova\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 16px;\n    line-height: 25px;\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n    padding: 0 0.5rem;\n  }\n`;\nconst VideoPlayersLayout = styled.section`\n  margin: 3rem 0;\n  audio {\n    height: 70px !important;\n  }\n\n  @media (max-width: 767px) {\n    video {\n      width: 90% !important;\n    }\n  }\n`;\nconst PhotoPlayersLayout = styled.section`\n  margin-top: 1rem;\n\n  .gridSection {\n    width: 100%;\n    display: block;\n    &:before {\n      content: \"( Double click to open a photo )\";\n      display: block;\n      font-family: \"Proxima Nova\";\n      font-style: normal;\n      font-size: 1rem;\n      margin-bottom: 1rem;\n    }\n  }\n\n  img {\n    width: 100%;\n  }\n`;\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport default function SectionHeader({ title }) {\n    return (\n        <HeaderLayout>\n            <header>\n                <span>{title}</span>\n            </header>\n        </HeaderLayout>\n    )\n}\n\nconst HeaderLayout = styled.div`\n    header{\n        width: 100%;\n        margin-bottom: 1rem;\n\n        span{\n            font-size: 2.5rem;\n            text-transform: uppercase;\n            font-family: 'Bebas Neue Pro';\n            line-height: .5;\n            padding: 0;\n\n            display: flex;\n            flex-direction: row;\n            align-items: flex-end;\n            justify-content: space-between;\n\n            &:after{\n                content: '';\n                display: inline-block;\n                height: 1px;\n                flex-grow: 1;\n                background-color: red;\n            }\n        }\n    }\n\n`;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n// SERVICES\nimport PublicationService from \"src/modules/publication/publicationService\";\n// COMPONENTSS\nimport SectionHeader from \"./components/SectionHeader\";\nimport Translate from \"../Translate\";\nimport { i18n } from \"src/i18n\";\nimport { noImage } from \"src/assets/images\";\n\nexport default function RelatedContent({ type }) {\n  // Fetching related entities based on type\n  const [related, setRelated] = useState<any[]>([]);\n  const [entityIsLoading, setEntityIsLoading] = useState(true);\n  const language = localStorage.getItem(\"language\");\n  const fetchRelatedContent = (type) => {\n    PublicationService.getRelated(type).then((value) => {\n      value.rows?.map((entry) => {\n        setRelated((related) => related.concat(entry));\n      });\n      setEntityIsLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchRelatedContent(type);\n  }, [type]);\n\n  return (\n    <RelatedCOntentLayout>\n      <SectionHeader title=\"publications qui peuvent vous int√©resser\" />\n      {entityIsLoading ? (\n        <section>\n          <h4 className=\"h4\">{i18n(\"table.loadingContent\")}</h4>\n        </section>\n      ) : (\n        <div className=\"gridLayout\">\n          {related?.map((entity) => {\n            return (\n              <HorizontalCard key={entity[\"_id\"]}>\n                {language === \"fr\" ? (\n                  <>\n                    {entity[\"photos\"].length > 0 ? (\n                      <img src={entity[\"photos\"][0].downloadUrl} alt=\"\" />\n                    ) : (\n                      <img src={noImage} />\n                    )}\n                  </>\n                ) : language === \"ar\" ? (\n                  <>\n                    {entity[\"photosAR\"].length > 0 ? (\n                      <img src={entity[\"photosAR\"][0].downloadUrl} alt=\"\" />\n                    ) : (\n                      <img src={noImage} />\n                    )}\n                  </>\n                ) : (\n                  <>\n                    {entity[\"photosEN\"].length > 0 ? (\n                      <img src={entity[\"photosEN\"][0].downloadUrl} alt=\"\" />\n                    ) : (\n                      <img src={noImage} />\n                    )}\n                  </>\n                )}\n\n                <div className=\"cardContent\">\n                  <div className=\"cardHeader\">\n                    <span className=\"categoryBadge\">{entity[\"type\"]}</span>\n                    <span>{PublicationService.pipeDate(entity[\"date\"])}</span>\n                  </div>\n                  <Link\n                    to={\"/Mediatheque/entity/\" + entity[\"_id\"]}\n                    className=\"title text__wrap\"\n                    style={{ maxWidth: 370 }}\n                  >\n                    <span>{Translate.Trans(\"title\", entity)}</span>\n                  </Link>\n                </div>\n              </HorizontalCard>\n            );\n          })}\n        </div>\n      )}\n    </RelatedCOntentLayout>\n  );\n}\n\n// S T Y L E S\nconst RelatedCOntentLayout = styled.section`\n  margin: 5rem 0;\n  width: 100%;\n\n  .gridLayout {\n    margin-top: 2rem;\n    width: 100%;\n    display: grid;\n    grid-gap: 1rem;\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n    padding: 0 0.5rem;\n  }\n`;\nconst HorizontalCard = styled.div`\n  height: 200px;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  /* LEFT SECTION */\n  .cardThumbnail {\n    width: 100%;\n    height: 200px;\n    background-size: cover;\n    background-position: center;\n    position: relative;\n  }\n  .hasNoThumbnail {\n    background-image: url(${noImage});\n  }\n  .cardImage {\n    width: 200px;\n    min-width: 200px !important;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  /* LEFT SECTION */\n  .cardContent {\n    flex-grow: 1;\n    height: 100%;\n    padding-left: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    .cardHeader {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n      font-size: 12px;\n      font-family: \"Proxima Nova\";\n\n      .categoryBadge {\n        background: #f8d7da;\n        border-radius: 3px;\n        color: var(--dark--red);\n        padding: 0.4rem 0.5rem;\n        font-size: 12px;\n        font-family: \"Proxima Nova\";\n      }\n    }\n\n    .title {\n      margin-top: 1.5rem;\n      color: var(--violet);\n\n      span {\n        font-family: \"Bebas Neue Pro\";\n        font-style: normal;\n        font-weight: 700;\n        font-size: 23px;\n        line-height: 24px;\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n// SERVICES\nimport PublicationService from \"src/modules/publication/publicationService\";\n// COMPONENTS\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport RelatedContent from \"./RelatedContent\";\n\nexport default function Index() {\n  // STATES AND VARS\n  let ID = useParams().id;\n  const [PublicationDetails, setPublicationDetails] = useState({});\n  const [data, setData] = useState([]);\n\n  // Get the details of that one publication\n  const getPublicationDetails = (PUBLICATION_ID) => {\n    PublicationService.find(PUBLICATION_ID)\n      .then((response: any) => {\n        setPublicationDetails(response);\n        // loadig photos to be used in the grid\n        if (response.photos.length >= 1) {\n          response.photos.map((p) => {\n            setData((data) => data.concat(p.downloadUrl));\n          });\n        }\n        if (response.supports.length >= 1) {\n          response.supports.map((supp) => {\n            setData((data) => data.concat(supp.downloadUrl));\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  // FETCH ON LOAD\n  useEffect(() => {\n    getPublicationDetails(ID);\n  }, []);\n\n  // TEMPLATE\n  return (\n    <MainLayout>\n      <Header\n        PUBLICATION_TITLE={PublicationDetails ?? \"N.A\"}\n        PUBLICATION_CREATED_AT={PublicationDetails[\"date\"] ?? \"N.A\"}\n        PUBLICATION_TYPE={PublicationDetails[\"thematique\"] ?? \"N.A\"}\n      />\n      <Main PUBLICATION={PublicationDetails} data={data} />\n      <RelatedContent type={PublicationDetails[\"type\"] ?? \"N.A\"} />\n    </MainLayout>\n  );\n}\n\nconst MainLayout = styled.section`\n  width: 1170px;\n  height: 100%;\n  margin: 1rem auto;\n`;\n"],"names":["Header","PUBLICATION_TITLE","PUBLICATION_CREATED_AT","PUBLICATION_TYPE","HeaderLayout","className","Translate","PublicationService","FacebookIcon","styled","Main","PUBLICATION","data","MainLayout","length","VideoPlayersLayout","map","vid","url","loop","controls","_id","dangerouslySetInnerHTML","__html","PhotoPlayersLayout","images","maxWidth","SectionHeader","title","RelatedContent","type","useState","related","setRelated","entityIsLoading","setEntityIsLoading","language","localStorage","getItem","useEffect","then","value","rows","entry","concat","fetchRelatedContent","RelatedCOntentLayout","i18n","entity","HorizontalCard","src","downloadUrl","alt","noImage","to","style","Index","ID","useParams","id","PublicationDetails","setPublicationDetails","setData","PUBLICATION_ID","response","photos","p","supports","supp","catch","err","console","error"],"sourceRoot":""}
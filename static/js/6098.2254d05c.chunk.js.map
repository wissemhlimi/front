{"version":3,"file":"static/js/6098.2254d05c.chunk.js","mappings":"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","sources":["modules/publication/form/publicationFormSelectors.tsx","modules/publication/publicationEnumerators.tsx","view/shared/form/items/RadioFormItem.tsx","view/shared/form/items/AutocompleteFormItem.tsx","modules/categoryPublication/categoryPublicationSelectors.tsx","view/Publications/autocomplete/PublicationAutocompleteFormItem.tsx","view/shared/styles/ImagesWrapper.tsx","view/shared/uploaders/ImagesContentUploader.tsx","view/shared/form/items/ImagesUploadFormItem.tsx","view/Publications/form/PublicationForm.tsx","view/Publications/form/PublicationFormPage.tsx","view/shared/uploaders/FilesUploader.tsx","view/shared/form/items/FilesFormItem.tsx","view/shared/form/items/TextAreaFormItem.tsx"],"sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectRaw = (state) => state.publication.form;\r\n\r\nconst selectRecord = createSelector(\r\n  [selectRaw],\r\n  (raw) => raw.record,\r\n);\r\n\r\nconst selectInitLoading = createSelector(\r\n  [selectRaw],\r\n  (raw) => Boolean(raw.initLoading),\r\n);\r\n\r\nconst selectSaveLoading = createSelector(\r\n  [selectRaw],\r\n  (raw) => Boolean(raw.saveLoading),\r\n);\r\n\r\nconst publicationFormSelectors = {\r\n  selectInitLoading,\r\n  selectSaveLoading,\r\n  selectRecord,\r\n  selectRaw,\r\n};\r\n\r\nexport default publicationFormSelectors;","const publicationEnumerators = {\r\n  categorie: [\r\n    \"Manifestation\",\r\n    \"article scientifique\",\r\n    \"article journalistique\",\r\n    \"rapport\",\r\n    \"entretien\",\r\n    \"données numériques\",\r\n    \"autre\",\r\n  ],\r\n  type: [\r\n    \"Texte\",\r\n    \"audio\",\r\n    \"vidéo\",\r\n    \"lien_web\",\r\n    \"photo\",\r\n    \"infographie\",\r\n    \"statistiques\",\r\n    \"autre\",\r\n  ],\r\n  statut: [\"archive\", \"en_attente\", \"valide\", \"rejete\"],\r\n};\r\n\r\nexport default publicationEnumerators;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormErrors from \"src/view/shared/form/formErrors\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\r\nimport \"@splidejs/react-splide/css\";\r\nimport { GrTextAlignFull } from \"react-icons/gr\";\r\nimport { IoVideocamOutline } from \"react-icons/io5\";\r\nimport { CgLink } from \"react-icons/cg\";\r\nimport { BsCamera } from \"react-icons/bs\";\r\nimport { BiMicrophone, BiStats } from \"react-icons/bi\";\r\nimport { AiOutlineQuestion } from \"react-icons/ai\";\r\nimport { VscGraphScatter } from \"react-icons/vsc\";\r\nimport { i18n } from \"src/i18n\";\r\n\r\nfunction RadioFormItem(props) {\r\n  const {\r\n    label,\r\n    name,\r\n    hint,\r\n    options,\r\n    externalErrorMessage,\r\n    required,\r\n    className,\r\n  } = props;\r\n\r\n  const {\r\n    register,\r\n    errors,\r\n    formState: { touched, isSubmitted },\r\n    setValue,\r\n    watch,\r\n  } = useFormContext();\r\n\r\n  useEffect(() => {\r\n    register({ name });\r\n  }, [register, name]);\r\n\r\n  const errorMessage = FormErrors.errorMessage(\r\n    name,\r\n    errors,\r\n    touched,\r\n    isSubmitted,\r\n    externalErrorMessage\r\n  );\r\n\r\n  return (\r\n    <section className=\"contentTypes\">\r\n      <span>{label}</span>\r\n      <Splide\r\n        className=\"splide\"\r\n        options={{\r\n          gap: \".2rem\",\r\n          perPage: 5,\r\n          pagination: false,\r\n          Wheel: true,\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <SplideSlide key={option.value}>\r\n            <label key={option.value} htmlFor={option.label}>\r\n              <input\r\n                type=\"radio\"\r\n                className={className}\r\n                id={`${option.value}`}\r\n                name={`${name}-${option.value}`}\r\n                value={option.value}\r\n                checked={String(option.value) === String(watch(name))}\r\n                onChange={(e) => {\r\n                  setValue(name, e.target.value, {\r\n                    shouldValidate: true,\r\n                    shouldDirty: true,\r\n                  });\r\n                  props.onChange && props.onChange(e.target.value);\r\n                }}\r\n              />\r\n              <div className=\"TypeCard\">\r\n                {\r\n                  {\r\n                    Texte: <GrTextAlignFull className=\"icon\" fontSize={20} />,\r\n                    audio: <BiMicrophone className=\"icon\" fontSize={20} />,\r\n                    vidéo: <IoVideocamOutline className=\"icon\" fontSize={20} />,\r\n                    lien_web: <CgLink className=\"icon\" fontSize={20} />,\r\n                    photo: <BsCamera className=\"icon\" fontSize={20} />,\r\n                    infographie: (\r\n                      <VscGraphScatter className=\"icon\" fontSize={20} />\r\n                    ),\r\n                    statistiques: <BiStats className=\"icon\" fontSize={20} />,\r\n                    autre: <AiOutlineQuestion className=\"icon\" fontSize={20} />,\r\n                  }[option.label]\r\n                }\r\n                <span>\r\n                  {i18n(\r\n                    `entities.publication.enumerators.type.${option.label}`\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </label>\r\n          </SplideSlide>\r\n        ))}\r\n      </Splide>\r\n    </section>\r\n  );\r\n}\r\n\r\nRadioFormItem.defaultProps = {\r\n  required: false,\r\n};\r\n\r\nRadioFormItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n  label: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  externalErrorMessage: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default RadioFormItem;\r\n","import { i18n } from \"src/i18n\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport FormErrors from \"src/view/shared/form/formErrors\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\nconst AUTOCOMPLETE_SERVER_FETCH_SIZE = 100;\r\n\r\nfunction AutocompleteFormItem(props) {\r\n  const {\r\n    errors,\r\n    watch,\r\n    setValue,\r\n    register,\r\n    formState: { touched, isSubmitted },\r\n  } = useFormContext();\r\n\r\n  const {\r\n    label,\r\n    name,\r\n    hint,\r\n    placeholder,\r\n    autoFocus,\r\n    externalErrorMessage,\r\n    mode,\r\n    required,\r\n    isClearable,\r\n    fetchFn,\r\n    mapper,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    register({ name });\r\n  }, [register, name]);\r\n\r\n  const originalValue = watch(name);\r\n\r\n  const value = () => {\r\n    if (mode === \"multiple\") {\r\n      return valueMultiple();\r\n    } else {\r\n      return valueOne();\r\n    }\r\n  };\r\n\r\n  const valueMultiple = () => {\r\n    if (originalValue) {\r\n      return originalValue.map((value) => mapper.toAutocomplete(value));\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  const valueOne = () => {\r\n    if (originalValue) {\r\n      return mapper.toAutocomplete(originalValue);\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleSelect = (value) => {\r\n    if (mode === \"multiple\") {\r\n      return handleSelectMultiple(value);\r\n    } else {\r\n      return handleSelectOne(value);\r\n    }\r\n  };\r\n\r\n  const handleSelectMultiple = (values) => {\r\n    if (!values) {\r\n      setValue(name, [], { shouldValidate: true, shouldDirty: true });\r\n      props.onChange && props.onChange([]);\r\n      return;\r\n    }\r\n\r\n    const newValue = values.map((value) => mapper.toValue(value));\r\n    setValue(name, newValue, { shouldValidate: true, shouldDirty: true });\r\n    props.onChange && props.onChange(newValue);\r\n  };\r\n\r\n  const handleSelectOne = (value) => {\r\n    if (!value) {\r\n      setValue(name, null, { shouldValidate: true, shouldDirty: true });\r\n      props.onChange && props.onChange(null);\r\n      return;\r\n    }\r\n\r\n    const newValue = mapper.toValue(value);\r\n    setValue(name, newValue, { shouldValidate: true, shouldDirty: true });\r\n    props.onChange && props.onChange(newValue);\r\n  };\r\n\r\n  const handleSearch = async (value) => {\r\n    try {\r\n      const results = await fetchFn(value, AUTOCOMPLETE_SERVER_FETCH_SIZE);\r\n\r\n      return results.map((result) => mapper.toAutocomplete(result));\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const errorMessage = FormErrors.errorMessage(\r\n    name,\r\n    errors,\r\n    touched,\r\n    isSubmitted,\r\n    externalErrorMessage\r\n  );\r\n\r\n  const isInvalid = Boolean(errorMessage);\r\n\r\n  const controlStyles = isInvalid\r\n    ? {\r\n        control: (provided) => ({\r\n          ...provided,\r\n          borderColor: \"red\",\r\n        }),\r\n      }\r\n    : undefined;\r\n\r\n  return (\r\n    <div className='form-group'>\r\n      {Boolean(label) && (\r\n        <label\r\n          className={`col-form-label ${required ? \"required\" : null}`}\r\n          htmlFor={name}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <div style={{ display: \"flex\" }}>\r\n        <AsyncSelect\r\n          className='w-100'\r\n          styles={controlStyles}\r\n          id={name}\r\n          name={name}\r\n          defaultOptions={true}\r\n          isMulti={mode === \"multiple\" ? true : false}\r\n          loadOptions={handleSearch}\r\n          placeholder={placeholder || \"\"}\r\n          autoFocus={autoFocus || undefined}\r\n          onChange={handleSelect}\r\n          onBlur={(event) => {\r\n            props.onBlur && props.onBlur(event);\r\n          }}\r\n          value={value()}\r\n          isClearable={isClearable}\r\n          loadingMessage={() => i18n(\"autocomplete.loading\")}\r\n          noOptionsMessage={() => i18n(\"autocomplete.noOptions\")}\r\n        />\r\n      </div>\r\n\r\n      <div className='invalid-feedback'>{errorMessage}</div>\r\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\r\n    </div>\r\n  );\r\n}\r\n\r\nAutocompleteFormItem.defaultProps = {\r\n  isClearable: true,\r\n  mode: \"default\",\r\n  required: false,\r\n};\r\n\r\nAutocompleteFormItem.propTypes = {\r\n  fetchFn: PropTypes.func.isRequired,\r\n  mapper: PropTypes.object.isRequired,\r\n  required: PropTypes.bool,\r\n  mode: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  externalErrorMessage: PropTypes.string,\r\n  isClearable: PropTypes.bool,\r\n  showCreate: PropTypes.bool,\r\n  hasPermissionToCreate: PropTypes.bool,\r\n};\r\n\r\nexport default AutocompleteFormItem;\r\n","import { createSelector } from 'reselect';\r\nimport authSelectors from 'src/modules/auth/authSelectors';\r\nimport PermissionChecker from 'src/modules/auth/permissionChecker';\r\nimport Permissions from 'src/security/permissions';\r\n\r\nconst selectPermissionToRead = createSelector(\r\n  [\r\n    authSelectors.selectCurrentTenant,\r\n    authSelectors.selectCurrentUser,\r\n  ],\r\n  (currentTenant, currentUser) =>\r\n    new PermissionChecker(currentTenant, currentUser).match(\r\n      Permissions.values.categoryPublicationRead,\r\n    ),\r\n);\r\n\r\nconst selectPermissionToEdit = createSelector(\r\n  [\r\n    authSelectors.selectCurrentTenant,\r\n    authSelectors.selectCurrentUser,\r\n  ],\r\n  (currentTenant, currentUser) =>\r\n    new PermissionChecker(currentTenant, currentUser).match(\r\n      Permissions.values.categoryPublicationEdit,\r\n    ),\r\n);\r\n\r\nconst selectPermissionToCreate = createSelector(\r\n  [\r\n    authSelectors.selectCurrentTenant,\r\n    authSelectors.selectCurrentUser,\r\n  ],\r\n  (currentTenant, currentUser) =>\r\n    new PermissionChecker(currentTenant, currentUser).match(\r\n      Permissions.values.categoryPublicationCreate,\r\n    ),\r\n);\r\n\r\nconst selectPermissionToImport = createSelector(\r\n  [\r\n    authSelectors.selectCurrentTenant,\r\n    authSelectors.selectCurrentUser,\r\n  ],\r\n  (currentTenant, currentUser) =>\r\n    new PermissionChecker(currentTenant, currentUser).match(\r\n      Permissions.values.categoryPublicationImport,\r\n    ),\r\n);\r\n\r\nconst selectPermissionToDestroy = createSelector(\r\n  [\r\n    authSelectors.selectCurrentTenant,\r\n    authSelectors.selectCurrentUser,\r\n  ],\r\n  (currentTenant, currentUser) =>\r\n    new PermissionChecker(currentTenant, currentUser).match(\r\n      Permissions.values.categoryPublicationDestroy,\r\n    ),\r\n);\r\n\r\nconst categoryPublicationSelectors = {\r\n  selectPermissionToRead,\r\n  selectPermissionToEdit,\r\n  selectPermissionToCreate,\r\n  selectPermissionToDestroy,\r\n  selectPermissionToImport,\r\n};\r\n\r\nexport default categoryPublicationSelectors;\r\n","import React, { useState } from \"react\";\r\nimport CategoryPublicationService from \"src/modules/categoryPublication/categoryPublicationService\";\r\nimport AutocompleteFormItem from \"src/view/shared/form/items/AutocompleteFormItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport selectors from \"src/modules/categoryPublication/categoryPublicationSelectors\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\nconst CategoryPublicationAutocompleteFormItem = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const { setValue, getValues } = useFormContext();\r\n  const language = localStorage.getItem(\"language\");\r\n\r\n  const hasPermissionToCreate = useSelector(selectors.selectPermissionToCreate);\r\n\r\n  const doCloseModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const doOpenModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const fetchFn = (value, limit) => {\r\n    return CategoryPublicationService.listAutocomplete(value, limit, language);\r\n  };\r\n\r\n  const mapper = {\r\n    toAutocomplete(value) {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n\r\n      const key = value.id;\r\n      let label = value.label;\r\n\r\n      if (value.titleFR) {\r\n        label = value.titleFR;\r\n      }\r\n\r\n      return {\r\n        key,\r\n        label,\r\n      };\r\n    },\r\n\r\n    toValue(value) {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        id: value.key,\r\n        label: value.label,\r\n      };\r\n    },\r\n  };\r\n\r\n  const { form, ...rest } = props;\r\n  return (\r\n    <>\r\n      <AutocompleteFormItem\r\n        {...rest}\r\n        fetchFn={fetchFn}\r\n        mapper={mapper}\r\n        onOpenModal={doOpenModal}\r\n        inMemoryFilter\r\n        hasPermissionToCreate={hasPermissionToCreate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryPublicationAutocompleteFormItem;\r\n","import styled from \"styled-components\";\r\n\r\nconst ImagesWrapper = styled.div`\r\n  .ant-upload-select-picture-card i {\r\n    font-size: 32px;\r\n    color: #999;\r\n  }\r\n\r\n  .ant-upload-select-picture-card .ant-upload-text {\r\n    margin-top: 8px;\r\n    color: #666;\r\n  }\r\n\r\n  .ant-upload-list-item-info > span {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .ant-upload-list-item-thumbnail > img {\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport default ImagesWrapper;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Upload, Modal } from \"antd\";\r\n// import FileUploader from 'src/modules/shared/fileUpload/fileUploader';\r\nimport Errors from \"src/modules/shared/error/errors\";\r\nimport ImagesWrapper from \"src/view/shared/styles/ImagesWrapper\";\r\nimport { i18n } from \"src/i18n\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport FileUploader from \"src/modules/shared/fileupload/fileUploader\";\r\n\r\nconst ImagesContentUploader = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n\r\n  const value = () => {\r\n    const { value } = props;\r\n\r\n    if (!value) {\r\n      return [];\r\n    }\r\n\r\n    return Array.isArray(value) ? value : [value];\r\n  };\r\n\r\n  const fileList = () => {\r\n    return value().map((item) => ({\r\n      uid: item.id || undefined,\r\n      name: item.name,\r\n      status: \"done\" as \"done\",\r\n      url: item.downloadUrl,\r\n      size: item.size,\r\n      type: item.type,\r\n    }));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n\r\n  const handlePreview = (file) => {\r\n    setPreviewImage(file.url);\r\n    setPreviewVisible(true);\r\n  };\r\n\r\n  const handleSuccess = (file) => {\r\n    setLoading(false);\r\n    props.onChange([...value(), file]);\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    setLoading(false);\r\n    Errors.showMessage(error);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    props.onChange(value().filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleChange = (file) => {\r\n    if (!file || !file.file || !file.file.status) {\r\n      return;\r\n    }\r\n\r\n    if (file.file.status === \"removed\") {\r\n      handleRemove(file.file.uid);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const validate = (file) => {\r\n    try {\r\n      FileUploader.validate(file, {\r\n        storage: props.storage,\r\n        image: true,\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      handleError(error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const { max } = props;\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className=\"ant-upload-text\">{i18n(\"fileUploader.upload\")}</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <ImagesWrapper>\r\n      <Upload\r\n        accept=\"image/*\"\r\n        fileList={fileList()}\r\n        listType=\"picture-card\"\r\n        customRequest={(request) => {\r\n          FileUploader.uploadFromRequest(\r\n            request,\r\n            {\r\n              storage: props.storage,\r\n              image: true,\r\n            },\r\n            (file) => {\r\n              handleSuccess(file);\r\n            },\r\n            (error) => {\r\n              handleError(error);\r\n            }\r\n          );\r\n        }}\r\n        onChange={handleChange}\r\n        onPreview={handlePreview}\r\n        beforeUpload={validate}\r\n      >\r\n        {max && fileList().length >= max ? null : uploadButton}\r\n      </Upload>\r\n\r\n      <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\r\n        <img\r\n          alt={previewImage}\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n          src={previewImage}\r\n        />\r\n      </Modal>\r\n    </ImagesWrapper>\r\n  );\r\n};\r\n\r\nImagesContentUploader.propTypes = {\r\n  max: PropTypes.number,\r\n  storage: PropTypes.object,\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesContentUploader;\r\n","import { Form } from \"antd\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport FormErrors from \"src/view/shared/form/formErrors\";\r\nimport ImagesUploader from \"src/view/shared/uploaders/ImagesUploader\";\r\nimport ImagesContentUploader from \"src/view/shared/uploaders/ImagesContentUploader\";\r\n\r\nconst ImagesUploadFormItem = (props) => {\r\n  const {\r\n    label,\r\n    name,\r\n    hint,\r\n    layout,\r\n    storage,\r\n    max,\r\n    required,\r\n\r\n    externalErrorMessage,\r\n  } = props;\r\n\r\n  const {\r\n    errors,\r\n    formState: { touched, isSubmitted },\r\n    setValue,\r\n    watch,\r\n    register,\r\n  } = useFormContext();\r\n\r\n  useEffect(() => {\r\n    register({ name });\r\n  }, [register, name]);\r\n\r\n  const errorMessage = FormErrors.errorMessage(\r\n    name,\r\n    errors,\r\n    touched,\r\n    isSubmitted,\r\n    externalErrorMessage\r\n  );\r\n\r\n  const formHelperText = errorMessage || hint;\r\n\r\n  return (\r\n    <Form.Item\r\n      {...layout}\r\n      label={label}\r\n      required={required}\r\n      validateStatus={errorMessage ? \"error\" : \"success\"}\r\n      help={formHelperText}\r\n    >\r\n      <ImagesContentUploader\r\n        storage={storage}\r\n        value={watch(name)}\r\n        onChange={(value) => {\r\n          setValue(name, value, { shouldValidate: true, shouldDirty: true });\r\n          props.onChange && props.onChange(value);\r\n        }}\r\n        max={max}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nImagesUploadFormItem.defaultProps = {\r\n  layout: null,\r\n  max: undefined,\r\n  required: false,\r\n};\r\n\r\nImagesUploadFormItem.propTypes = {\r\n  storage: PropTypes.object.isRequired,\r\n  max: PropTypes.number,\r\n\r\n  required: PropTypes.bool,\r\n\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  layout: PropTypes.object,\r\n};\r\n\r\nexport default ImagesUploadFormItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport moment from \"moment\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport yupFormSchemas from \"src/modules/shared/yup/yupFormSchemas\";\r\nimport { i18n } from \"src/i18n\";\r\nimport * as yup from \"yup\";\r\nimport FilesFormItem from \"src/view/shared/form/items/FilesFormItem\";\r\nimport Storage from \"src/security/storage\";\r\nimport TextAreaFormItem from \"src/view//shared/form/items/TextAreaFormItem\";\r\nimport ButtonIcon from \"src/view/shared/ButtonIcon\";\r\nimport publicationEnumerators from \"src/modules/publication/publicationEnumerators\";\r\nimport RadioFormItem from \"src/view/shared/form/items/RadioFormItem\";\r\nimport CategoryPublicationAutocompleteFormItem from \"../autocomplete/PublicationAutocompleteFormItem\";\r\nimport AproposService from \"src/modules/Apropos/AproposService\";\r\nimport ImagesFormItem from \"src/view/shared/form/items/ImagesFormItem\";\r\nimport ImagesUploadFormItem from \"src/view/shared/form/items/ImagesUploadFormItem\";\r\n\r\nconst schema = yup.object().shape({\r\n  thematique: yupFormSchemas.relationToOne(\r\n    i18n(\"entities.publication.fields.thematique\"),\r\n    {}\r\n  ),\r\n  category: yupFormSchemas.relationToOne(\r\n    i18n(\"entities.publication.fields.categorie\"),\r\n    {\r\n      required: false,\r\n    }\r\n  ),\r\n  supports: yupFormSchemas.files(i18n(\"entities.publication.fields.supports\"), {\r\n    required: true,\r\n  }),\r\n  photos: yupFormSchemas.images(i18n(\"entities.publication.fields.photos\"), {\r\n    required: false,\r\n  }),\r\n  descriptionFR: yupFormSchemas.string(\r\n    i18n(\"entities.publication.fields.description\"),\r\n    {\r\n      required: false,\r\n    }\r\n  ),\r\n  descriptionAR: yupFormSchemas.string(\r\n    i18n(\"entities.publication.fields.description\"),\r\n    {\r\n      required: false,\r\n    }\r\n  ),\r\n  descriptionEN: yupFormSchemas.string(\r\n    i18n(\"entities.publication.fields.description\"),\r\n    {\r\n      required: false,\r\n    }\r\n  ),\r\n});\r\nfunction PublicationForm(props) {\r\n  const [initialValues] = useState(() => {\r\n    const record = props.record || {};\r\n\r\n    return {\r\n      thematique: record.thematique,\r\n      category: record.category,\r\n      type: record.type,\r\n      supports: record.supports || [],\r\n      photos: record.photos || [],\r\n      descriptionFR: record.descriptionFR,\r\n      descriptionAR: record.descriptionAR,\r\n      descriptionEN: record.descriptionEN,\r\n      statut: record.statut,\r\n      // date: record.date ? moment(record.date, \"DD-MM-YYYY\") : null,\r\n    };\r\n  });\r\n  const currentlySelectedLanguage = localStorage.getItem(\"language\");\r\n\r\n  const form = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: \"all\",\r\n    defaultValues: initialValues as any,\r\n  });\r\n\r\n  const onReset = () => {\r\n    Object.keys(initialValues).forEach((key) => {\r\n      form.setValue(key, initialValues[key]);\r\n    });\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    props.onSubmit(props?.record?.id, values);\r\n  };\r\n  const { saveLoading } = props;\r\n  return (\r\n    <FormProvider {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)}>\r\n        <div className=\"container__form\">\r\n          {/* CATEGORIES */}\r\n          <CategoryPublicationAutocompleteFormItem\r\n            name=\"category\"\r\n            label={i18n(\"entities.publication.fields.categorie\")}\r\n            required={false}\r\n            showCreate={!props.modal}\r\n          />\r\n\r\n          <RadioFormItem\r\n            name=\"type\"\r\n            label={i18n(\"entities.publication.fields.type\")}\r\n            options={publicationEnumerators.type.map((value) => ({\r\n              value,\r\n              label: value,\r\n            }))}\r\n            className=\"contentTypeRadio\"\r\n          />\r\n          <ImagesUploadFormItem\r\n            name=\"photos\"\r\n            label={i18n(\"entities.publication.fields.photos\")}\r\n            required={false}\r\n            storage={Storage.values.publicationPhotos}\r\n            max={undefined}\r\n          />\r\n          <FilesFormItem\r\n            name=\"supports\"\r\n            label={i18n(\"entities.publication.fields.supports\")}\r\n            required={true}\r\n            storage={Storage.values.publicationSupports}\r\n            max={undefined}\r\n            formats={undefined}\r\n          />\r\n          {currentlySelectedLanguage === \"fr\" ? (\r\n            <TextAreaFormItem\r\n              name=\"descriptionFR\"\r\n              label={i18n(\"entities.publication.fields.description\")}\r\n              required={false}\r\n            />\r\n          ) : currentlySelectedLanguage === \"en\" ? (\r\n            <TextAreaFormItem\r\n              name=\"descriptionEN\"\r\n              label={i18n(\"entities.publication.fields.description\")}\r\n              required={false}\r\n            />\r\n          ) : (\r\n            <TextAreaFormItem\r\n              name=\"descriptionAR\"\r\n              label={i18n(\"entities.publication.fields.description\")}\r\n              required={false}\r\n            />\r\n          )}\r\n\r\n          <div className=\"item__button\">\r\n            <button\r\n              className=\"cancel__button\"\r\n              onClick={onReset}\r\n              type=\"button\"\r\n              disabled={saveLoading}\r\n            >\r\n              {i18n(\"common.reset\")}\r\n            </button>\r\n            <button\r\n              className=\"form__button\"\r\n              onClick={form.handleSubmit(onSubmit)}\r\n              disabled={saveLoading}\r\n            >\r\n              <ButtonIcon loading={saveLoading} />\r\n              {i18n(\"common.save\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\nexport default PublicationForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { i18n } from \"src/i18n\";\r\nimport actions from \"src/modules/publication/form/publicationFormActions\";\r\nimport selectors from \"src/modules/publication/form/publicationFormSelectors\";\r\nimport { getHistory } from \"src/modules/store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PublicationForm from \"./PublicationForm\";\r\nimport Spinner from \"src/view/shared/Spinner\";\r\nimport FormWrapper from \"../../shared/styles/FormWrapper\";\r\nimport moment from \"moment\";\r\nimport Retour from \"../../shared/Retour\";\r\nimport AproposService from \"src/modules/Apropos/AproposService\";\r\n\r\nfunction PublicationFormPage() {\r\n  const [dispatched, setDispatched] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n\r\n  const initLoading = useSelector(selectors.selectInitLoading);\r\n  const saveLoading = useSelector(selectors.selectSaveLoading);\r\n  const record = useSelector(selectors.selectRecord);\r\n\r\n  const [propsText, setPropsText] = useState(\"\");\r\n  const [currentlySelectedLanguage, setCurrentlySelectedLanguage] =\r\n    useState(\"fr\");\r\n  const getAboutText = () => {\r\n    setCurrentlySelectedLanguage(localStorage.getItem(\"language\") ?? \"fr\");\r\n    AproposService.getApropos()\r\n      .then((res: any) => {\r\n        if (res.rows.length > 0) {\r\n          setPropsText(res.rows[0]);\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n  useEffect(() => {\r\n    getAboutText();\r\n  }, []);\r\n\r\n  const isEditing = Boolean(match.params.id);\r\n  const title = isEditing\r\n    ? i18n(\"entities.publication.edit.title\")\r\n    : i18n(\"entities.publication.new.title\");\r\n  useEffect(() => {\r\n    dispatch(actions.doInit(match.params.id));\r\n    setDispatched(true);\r\n  }, [dispatch, match.params.id]);\r\n\r\n  const doSubmit = (id, data) => {\r\n    if (isEditing) {\r\n      dispatch(actions.doUpdate(id, data));\r\n    } else {\r\n      data.date = moment().format(\"YYYY-MM-DD\");\r\n      data.statut = \"en_attente\";\r\n      dispatch(actions.doCreate(data));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"app__contenu\">\r\n      <Link to=\"/profile\">\r\n        <Retour />\r\n      </Link>\r\n      <section className=\"contenu\">\r\n        <div className=\"mainContent\">\r\n          <div className=\"archieve__header\">\r\n            <h2>{i18n(\"menu.suggerer_des_donnees\")}</h2>\r\n            <div className=\"communiquer__bar\"></div>\r\n          </div>\r\n          {propsText ? (\r\n            <>\r\n              {currentlySelectedLanguage === \"fr\" ? (\r\n                <>\r\n                  {propsText[\"publicationDescFR\"] ? (\r\n                    <div className=\"contenu__description\">\r\n                      {propsText[\"publicationDescFR\"]}\r\n                    </div>\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {propsText[\"publicationDescAR\"] ? (\r\n                    <div className=\"contenu__description\">\r\n                      {propsText[\"publicationDescAR\"]}\r\n                    </div>\r\n                  ) : null}\r\n                </>\r\n              )}\r\n            </>\r\n          ) : null}\r\n\r\n          <FormWrapper>\r\n            <div className=\"Login__container\">\r\n              {initLoading && <Spinner />}\r\n              {dispatched && !initLoading && (\r\n                <PublicationForm\r\n                  title={title}\r\n                  saveLoading={saveLoading}\r\n                  record={record}\r\n                  isEditing={isEditing}\r\n                  onSubmit={doSubmit}\r\n                  onCancel={() => getHistory().push(\"/profile\")}\r\n                />\r\n              )}\r\n            </div>\r\n          </FormWrapper>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\nexport default PublicationFormPage;\r\n","import React, { useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FileUploader from \"src/modules/shared/fileupload/fileUploader\";\r\nimport Errors from \"src/modules/shared/error/errors\";\r\nimport { i18n } from \"src/i18n\";\r\nimport ButtonIcon from \"src/view/shared/ButtonIcon\";\r\n\r\nfunction FilesUploader(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const input = useRef<any>();\r\n\r\n  const value = () => {\r\n    const { value } = props;\r\n    if (!value) {\r\n      return [];\r\n    }\r\n    return Array.isArray(value) ? value : [value];\r\n  };\r\n\r\n  const fileList = () => {\r\n    return value().map((item) => ({\r\n      uid: item.id || undefined,\r\n      name: item.name,\r\n      status: \"done\",\r\n      url: item.downloadUrl,\r\n    }));\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    props.onChange(value().filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleChange = async (event) => {\r\n    try {\r\n      const files = event.target.files;\r\n\r\n      if (!files || !files.length) {\r\n        return;\r\n      }\r\n\r\n      let file = files[0];\r\n\r\n      FileUploader.validate(file, {\r\n        storage: props.storage,\r\n        formats: props.formats,\r\n      });\r\n      setLoading(true);\r\n      file = await FileUploader.upload(file, {\r\n        storage: props.storage,\r\n        formats: props.formats,\r\n      });\r\n      input.current.value = \"\";\r\n      setLoading(false);\r\n      props.onChange([...value(), file]);\r\n    } catch (error) {\r\n      input.current.value = \"\";\r\n      console.error(error);\r\n      setLoading(false);\r\n      Errors.showMessage(error);\r\n    }\r\n  };\r\n\r\n  const formats = () => {\r\n    const { schema } = props;\r\n    if (schema && schema.formats) {\r\n      return schema.formats.map((format) => `.${format}`).join(\",\");\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  const { max, readonly } = props;\r\n\r\n  const uploadButton = (\r\n    <label\r\n      className='btn btn-outline-secondary px-4 mb-2'\r\n      style={{ cursor: \"pointer\" }}>\r\n      <div className='upload__file'>\r\n        {i18n(\"fileUploader.upload\")}\r\n\r\n        <ButtonIcon loading={loading} iconClass='fas fa-plus' />\r\n      </div>\r\n      <input\r\n        style={{ display: \"none\" }}\r\n        disabled={loading || readonly}\r\n        accept={formats()}\r\n        type='file'\r\n        onChange={handleChange}\r\n        ref={input}\r\n      />\r\n    </label>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {readonly || (max && fileList().length >= max) ? null : uploadButton}\r\n\r\n      {value() && value().length ? (\r\n        <div>\r\n          {value().map((item) => {\r\n            return (\r\n              <div className='file__show' key={item.id}>\r\n                <i className='fas fa-link text-muted mr-2'></i>\r\n                <a\r\n                  href={item.downloadUrl}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                  download>\r\n                  {item.name}\r\n                </a>\r\n                {!readonly && (\r\n                  <button\r\n                    className='btn btn-link'\r\n                    type='button'\r\n                    onClick={() => handleRemove(item.id)}>\r\n                    <i className='fas fa-times'></i>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nFilesUploader.propTypes = {\r\n  readonly: PropTypes.bool,\r\n  max: PropTypes.number,\r\n  formats: PropTypes.arrayOf(PropTypes.string),\r\n  storage: PropTypes.object,\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FilesUploader;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport FilesUploader from \"src/view/shared/uploaders/FilesUploader\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport FormErrors from \"src/view/shared/form/formErrors\";\r\n\r\nfunction FilesFormItem(props) {\r\n  const {\r\n    label,\r\n    name,\r\n    hint,\r\n    storage,\r\n    formats,\r\n    max,\r\n    required,\r\n    externalErrorMessage,\r\n  } = props;\r\n\r\n  const {\r\n    register,\r\n    errors,\r\n    formState: { touched, isSubmitted },\r\n    setValue,\r\n    watch,\r\n  } = useFormContext();\r\n\r\n  useEffect(() => {\r\n    register({ name });\r\n  }, [register, name]);\r\n\r\n  const errorMessage = FormErrors.errorMessage(\r\n    name,\r\n    errors,\r\n    touched,\r\n    isSubmitted,\r\n    externalErrorMessage\r\n  );\r\n\r\n  return (\r\n    <div className='form-group'>\r\n      {Boolean(label) && (\r\n        <label\r\n          className={`col-form-label ${required ? \"required\" : null}`}\r\n          htmlFor={name}>\r\n          {label}\r\n        </label>\r\n      )}\r\n\r\n      <br />\r\n\r\n      <FilesUploader\r\n        storage={storage}\r\n        formats={formats}\r\n        value={watch(name)}\r\n        onChange={(value) => {\r\n          setValue(name, value, { shouldValidate: true, shouldDirty: true });\r\n          props.onChange && props.onChange(value);\r\n        }}\r\n        max={max}\r\n      />\r\n\r\n      <div className='invalid-feedback'>{errorMessage}</div>\r\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\r\n    </div>\r\n  );\r\n}\r\n\r\nFilesFormItem.defaultProps = {\r\n  max: undefined,\r\n  required: false,\r\n};\r\n\r\nFilesFormItem.propTypes = {\r\n  storage: PropTypes.object.isRequired,\r\n  formats: PropTypes.any,\r\n\r\n  required: PropTypes.bool,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  formItemProps: PropTypes.object,\r\n  max: PropTypes.number,\r\n};\r\n\r\nexport default FilesFormItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport FormErrors from \"src/view/shared/form/formErrors\";\r\n\r\nfunction TextAreaFormItem(props) {\r\n  const {\r\n    label,\r\n    name,\r\n    hint,\r\n    size,\r\n    placeholder,\r\n    autoFocus,\r\n    autoComplete,\r\n    externalErrorMessage,\r\n    required,\r\n  } = props;\r\n\r\n  const sizeLabelClassName =\r\n    {\r\n      small: \"col-form-label-sm\",\r\n      large: \"col-form-label-lg\",\r\n    }[size] || \"\";\r\n\r\n  const sizeInputClassName =\r\n    {\r\n      small: \"form-control-sm\",\r\n      large: \"form-control-lg\",\r\n    }[size] || \"\";\r\n\r\n  const {\r\n    register,\r\n    errors,\r\n    formState: { touched, isSubmitted },\r\n  } = useFormContext();\r\n\r\n  const errorMessage = FormErrors.errorMessage(\r\n    name,\r\n    errors,\r\n    touched,\r\n    isSubmitted,\r\n    externalErrorMessage\r\n  );\r\n\r\n  return (\r\n    <div className='form_textarea'>\r\n      {Boolean(label) && (\r\n        <label\r\n          className={`col-form-label ${\r\n            required ? \"required\" : null\r\n          } ${sizeLabelClassName}`}\r\n          htmlFor={name}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <textarea\r\n        id={name}\r\n        name={name}\r\n        ref={register}\r\n        onChange={(event) => {\r\n          props.onChange && props.onChange(event.target.value);\r\n        }}\r\n        onBlur={(event) => {\r\n          props.onBlur && props.onBlur(event);\r\n        }}\r\n        placeholder={placeholder || undefined}\r\n        autoFocus={autoFocus || undefined}\r\n        autoComplete={autoComplete || undefined}\r\n        className={`form-control ${sizeInputClassName} ${\r\n          errorMessage ? \"is-invalid\" : \"\"\r\n        }`}\r\n      />\r\n      <div className='invalid-feedback'>{errorMessage}</div>\r\n      {Boolean(hint) && <small className='form-text text-muted'>{hint}</small>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextAreaFormItem.defaultProps = {\r\n  required: false,\r\n};\r\n\r\nTextAreaFormItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  required: PropTypes.bool,\r\n  label: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n  prefix: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  externalErrorMessage: PropTypes.string,\r\n};\r\n\r\nexport default TextAreaFormItem;\r\n"],"names":["selectRaw","state","publication","form","selectRecord","createSelector","raw","record","selectInitLoading","Boolean","initLoading","selectSaveLoading","saveLoading","categorie","type","statut","RadioFormItem","props","label","name","options","hint","externalErrorMessage","className","required","useFormContext","register","errors","formState","touched","isSubmitted","setValue","watch","useEffect","FormErrors","gap","perPage","pagination","Wheel","width","map","option","htmlFor","id","value","checked","String","onChange","e","target","shouldValidate","shouldDirty","Texte","fontSize","audio","vidéo","lien_web","photo","infographie","statistiques","autre","i18n","defaultProps","AutocompleteFormItem","placeholder","autoFocus","mode","isClearable","fetchFn","mapper","originalValue","valueMultiple","toAutocomplete","valueOne","handleSelectMultiple","values","newValue","toValue","handleSelectOne","handleSearch","results","result","console","error","errorMessage","controlStyles","control","provided","borderColor","undefined","style","display","styles","defaultOptions","isMulti","loadOptions","onBlur","event","loadingMessage","noOptionsMessage","selectPermissionToRead","authSelectors","currentTenant","currentUser","PermissionChecker","match","Permissions","selectPermissionToEdit","selectPermissionToCreate","selectPermissionToImport","selectPermissionToDestroy","useState","setModalVisible","language","getValues","localStorage","getItem","hasPermissionToCreate","useSelector","selectors","rest","limit","CategoryPublicationService","key","titleFR","onOpenModal","inMemoryFilter","styled","loading","setLoading","previewVisible","setPreviewVisible","previewImage","setPreviewImage","Array","isArray","fileList","item","uid","status","url","downloadUrl","size","handleError","Errors","max","uploadButton","LoadingOutlined","PlusOutlined","accept","listType","customRequest","request","FileUploader","storage","image","file","handleSuccess","filter","onPreview","beforeUpload","length","visible","footer","onCancel","alt","src","ImagesUploadFormItem","layout","formHelperText","validateStatus","help","schema","yup","shape","thematique","yupFormSchemas","category","supports","photos","descriptionFR","descriptionAR","descriptionEN","initialValues","currentlySelectedLanguage","useForm","resolver","yupResolver","defaultValues","onSubmit","handleSubmit","showCreate","modal","publicationEnumerators","Storage","FilesFormItem","formats","TextAreaFormItem","onClick","Object","keys","forEach","disabled","ButtonIcon","dispatched","setDispatched","dispatch","useDispatch","useRouteMatch","propsText","setPropsText","setCurrentlySelectedLanguage","AproposService","then","res","rows","catch","err","getAboutText","isEditing","params","title","actions","to","Retour","FormWrapper","Spinner","data","date","moment","format","getHistory","push","input","useRef","handleChange","files","current","readonly","cursor","iconClass","join","ref","href","rel","download","autoComplete","sizeLabelClassName","small","large","sizeInputClassName"],"sourceRoot":""}
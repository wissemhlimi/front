{"version":3,"file":"static/js/3249.a55c9edd.chunk.js","mappings":"wNAGqBA,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAgDnB,OAhDmBA,EAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,M,yCAEnB,kGACQC,EAAWC,EAAAA,EAAAA,MADnB,SAEyBC,EAAAA,EAAAA,IAAA,kBACVF,EADU,0BAFzB,cAEQG,EAFR,yBAKSA,EAASC,MALlB,6F,IAAA,yGAQA,WACEC,EACAC,GAFF,qFAIQN,EAAWC,EAAAA,EAAAA,MAJnB,SAKyBC,EAAAA,EAAAA,IAAA,kBACVF,EADU,0BACgBK,EADhB,4BACiDC,EADjD,sBALzB,cAKQH,EALR,yBAQSA,EAASC,MARlB,gGARA,I,gFAoBA,WAAuCC,EAAeE,EAAcD,GAApE,6FACQN,EAAWC,EAAAA,EAAAA,MADnB,SAEyBC,EAAAA,EAAAA,IAAA,kBACVF,EADU,iDACuCO,IAHhE,cAEQJ,EAFR,OAKQK,EALR,UAKyCL,EAASC,KAAKK,KAAK,UAL5D,aAKyC,EAAuBC,aACxDC,EAAsB,CAC1BF,KAAI,OAAED,QAAF,IAAEA,EAAAA,EAAkC,GACxCI,MAAK,iBAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAgCK,cAAlC,QAA4C,GARrD,kBAUSF,GAVT,kG,wGAcA,WACEN,EACAS,EACAR,GAHF,qFAKQN,EAAWC,EAAAA,EAAAA,MALnB,SAMyBC,EAAAA,EAAAA,IAAA,kBACVF,EADU,8CACoCK,EADpC,2BACoEC,EADpE,kCACoGQ,IAP7H,cAMQX,EANR,yBASSA,EAASC,MATlB,kG,IAAA,6EAYA,WAAoCC,EAAeU,EAAQT,GAA3D,qFACQN,EAAWC,EAAAA,EAAAA,MADnB,SAEyBC,EAAAA,EAAAA,IAAA,kBACVF,EADU,sCAC4BK,EAD5B,4BAC6DC,EAD7D,6BACwFS,EAAOC,OAD/F,iCAC8HD,EAAOE,WADrI,+BACsKF,EAAOG,WAHtM,cAEQf,EAFR,yBAKSA,EAASC,MALlB,kGAZA,MAYA,EAhDmBL,E,2LCoJrB,UA3IA,YAAsC,IAAboB,EAAY,EAAZA,SACjBC,EAASC,aAAaC,QAAQ,YAEpC,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOb,EAAP,KAAqBc,EAArB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAmBMC,EAAsB,yCAAG,yGAE3BD,GAAW,GAFgB,SAGR3B,EAAAA,EAAAA,uBACjBoB,EAASS,oBACTT,EAASU,cACT,GANyB,OAGvBC,EAHuB,OAQ3BN,EAAgBM,EAAOrB,MACvBiB,GAAW,GATgB,gDAW3BK,QAAQC,IAAI,MAAZ,MACAN,GAAW,GAZgB,yDAAH,qDAmB5B,OAJAO,EAAAA,EAAAA,YAAU,WACRN,GACD,GAAE,KAGD,iCACE,SAAC,IAAD,CACEO,OAAOC,EAAAA,EAAAA,IAAK,mBACZC,MAAO,CAAC,EAACD,EAAAA,EAAAA,IAAK,aAAc,KAAM,EAACA,EAAAA,EAAAA,IAAK,wBAE1C,gBAAKE,UAAU,6BAAf,SACGZ,GACC,8BACE,SAAC,IAAD,CAAUa,OAAQ,SAGpB,gBAAKD,UAAU,WAAf,UACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKA,UAAU,iBAAf,UACE,SAACE,EAAD,WACE,yBACG7B,EAAaG,OAAS,GACrB,yBACGH,EAAa8B,KAAI,SAACC,EAAcC,GAC/B,IAAIC,EAOiB,EAiBO,EAiBA,EAlC5B,OALIF,EAAY,SACdE,EA3DA,SAACC,GACzB,IACIC,EAAU,sCAad,OAZAD,EAAiBE,SAAQ,SAACC,GACxB,GAAIA,EAAIC,aACFD,EAAIC,YAAYnC,QAAU,EAAG,CAC/B,IAAMoC,EAAeF,EAAIC,YAAYE,UACnCH,EAAIC,YAAYG,YAAY,KAAO,EACnCJ,EAAIC,YAAYnC,QAPE,sBASEuC,SAASH,KAC7BJ,EAAUE,EAAIC,YAEjB,CACJ,IACMH,CACR,CA2CqCQ,CACVZ,EAAY,SAGD,OAAXrB,GAEA,SAAC,IAAD,CACEkC,KACEb,EAAY,SACRA,EAAY,SAAZ,QACA,KAENP,MAAOO,EAAY,QACnBc,OAAQ,SAERC,IAAG,UAAEf,EAAY,WAAd,QAAyB,EAC5BgB,KAAMhB,EAAY,KAClBiB,QAASjB,EAAY,cACrBE,UAAWA,GAJND,GAOW,OAAXtB,GAEP,SAAC,IAAD,CACEkC,KACEb,EAAY,SACRA,EAAY,SAAZ,QACA,KAENP,MAAOO,EAAY,QACnBc,OAAQ,SAERC,IAAG,UAAEf,EAAY,WAAd,QAAyB,EAC5BgB,KAAMhB,EAAY,KAClBiB,QAASjB,EAAY,cACrBE,UAAWA,GAJND,GAOW,OAAXtB,GAEP,SAAC,IAAD,CACEkC,KACEb,EAAY,SACRA,EAAY,SAAZ,QACA,KAENP,MAAOO,EAAY,QACnBc,OAAQ,SAERC,IAAG,UAAEf,EAAY,WAAd,QAAyB,EAC5BgB,KAAMhB,EAAY,KAClBiB,QAASjB,EAAY,cACrBE,UAAWA,GAJND,QAVJ,CAkBR,OAGH,gBAAIiB,GAAG,cAAP,WACE,SAAC,MAAD,IADF,QAESxB,EAAAA,EAAAA,IAAK,kCAYnC,EAGD,IAAMI,EAAsBqB,EAAAA,GAAAA,IAAH,qW,+JCnJV,SAASC,EAAT,GAQX,IAPFL,EAOC,EAPDA,IACAC,EAMC,EANDA,KACAC,EAKC,EALDA,QACAf,EAIC,EAJDA,UACAT,EAGC,EAHDA,MACAqB,EAEC,EAFDA,OACAD,EACC,EADDA,KAEMQ,EAAgBC,IAAON,GAAMO,OAAO,KAC1C,OACE,UAACC,EAAD,YACE,SAAC,KAAD,CAAMC,GAAI,IAAMX,EAAS,IAAMC,EAA/B,UACE,gBAAKnB,UAAU,sBAAf,UACE,4BACE,gBAAKA,UAAU,kBAAf,SACGM,GACC,gBACEN,UAAU,WACV8B,MAAO,CAAEC,MAAO,IAAK9B,OAAQ,KAC7B+B,IAAK1B,EACL2B,IAAI,MAGN,gBACEjC,UAAU,WACV8B,MAAO,CAAEC,MAAO,IAAK9B,OAAQ,KAC7B+B,IAAKE,EAAAA,GACLD,IAAI,QAIV,iBAAKjC,UAAU,mBAAf,WACE,iBAAKA,UAAU,OAAf,WACE,4BACE,gBAAKA,UAAU,WAAWgC,IAAKG,EAAAA,GAAUF,IAAI,GAAGG,OAAO,KACtDX,KAEFR,GACC,gBAAKjB,UAAU,aAAf,UACE,iBAAMA,UAAU,gBAAhB,SAAiCiB,MAEjC,QAELpB,GACC,gBAAKG,UAAU,QAAf,SACGH,EAAMrB,OAAS,KACZ6D,EAAAA,EAAAA,IAAMxC,EAAMgB,UAAU,EAAG,KAAO,QAChCwB,EAAAA,EAAAA,IAAMxC,KAEV,KACHwB,GACC,gBAAKrB,UAAU,gBAAf,SACGqB,EAAQ7C,OAAS,KACd6D,EAAAA,EAAAA,IAAMhB,EAAQR,UAAU,EAAG,KAAO,QAClCwB,EAAAA,EAAAA,IAAMhB,KAEV,gBAKZ,oBAGL,CAED,IAAMO,EAAaL,EAAAA,GAAAA,IAAH,y+B,oFCrEVe,EAAgBf,EAAAA,GAAAA,IAAH,grBA0EnB,IAnCA,SAAoBgB,GACnB,IAAMC,EAAS,SAACC,GACf,OAAOA,EAAKjE,OAAS,CACrB,EACD,OACC,SAAC8D,EAAD,WACC,iBAAKtC,UAAU,kBAAf,WACC,0BACC,wBAAKuC,EAAM1C,WAEZ,0BACC,eAAIG,UAAU,aAAd,SACEuC,EAAMxC,MAAMI,KAAI,SAACsC,EAAMpC,GAAP,OAChB,eAECL,UAAS,0BACRuC,EAAMxC,MAAMvB,OAAS,IAAM6B,EAAQ,SAAW,IAHhD,SAKEmC,EAAOC,IACP,UAAC,KAAD,CAAMZ,GAAIY,EAAK,GAAf,UACE,IACAA,EAAK,GAFP,IAEYA,EAAK,MAGjBA,EAAK,IAVDA,EAAK,GAFK,YAqBtB,C","sources":["modules/Search/SearchService.tsx","view/Archive/SearchArchive.tsx","view/Search/SRPCard.tsx","view/shared/Breadcrumb.tsx"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\r\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\r\n\r\nexport default class SearchService {\r\n  // GET CATEGORIES LIST FOR PUBLICATIONS\r\n  static async getCategoriesList() {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/category-publication`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  static async getSearchResultsForPublicationsBasedOnSearchString(\r\n    SEARCH_STRING,\r\n    OFFSET\r\n  ) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/search?filter=${SEARCH_STRING}&limit=10&offset=${OFFSET}&validated={true}`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  // SAERCH BASED ON CATEGORIES (REVERSE LOGIC)\r\n  static async searchUsingMainCatefories(SEARCH_STRING, categoryName, OFFSET) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/category-publication?filter[titleFR]=${categoryName}`\r\n    );\r\n    const publicationsOfSelectedCategory = response.data.rows[0]?.publications;\r\n    const finalResponseOBject = {\r\n      rows: publicationsOfSelectedCategory ?? [],\r\n      count: publicationsOfSelectedCategory?.length ?? 0,\r\n    };\r\n    return finalResponseOBject;\r\n  }\r\n\r\n  // ARCHIVE SEARCH\r\n  static async getSearchResultsForArchiveBasedOnSearchString(\r\n    SEARCH_STRING,\r\n    FILTER_STRING,\r\n    OFFSET\r\n  ) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/publication?filter[descriptionFR]=${SEARCH_STRING}&limit=5&offset=${OFFSET}&filter[statut]=archive${FILTER_STRING}`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  static async getArchivePublications(SEARCH_STRING, FILTER, OFFSET) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/publication/search?filter=${SEARCH_STRING}&limit=10&offset=${OFFSET}&advanced[statut]=${FILTER.statut}&advanced[thematique]=${FILTER.thematique}&advanced[category]=${FILTER.category}`\r\n    );\r\n    return response.data;\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Etudes, search__archeive } from \"src/assets/images\";\r\nimport { i18n } from \"../../i18n\";\r\nimport Breadcrumb from \"../shared/Breadcrumb\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport SearchService from \"src/modules/Search/SearchService\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport SRPCard from \"../Search/SRPCard\";\r\nimport { BsBox } from \"react-icons/bs\";\r\n\r\nfunction SearchArchive({ location }) {\r\n  const langue = localStorage.getItem(\"language\");\r\n\r\n  const [publications, setPublications] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getValidThumbnail = (attachmentsArray) => {\r\n    const acceptableExtions = \"png, jpg, jpeg, gif\";\r\n    let fakeUrl = \"https://via.placeholder.com/270x175\";\r\n    attachmentsArray.forEach((att) => {\r\n      if (att.downloadUrl)\r\n        if (att.downloadUrl.length >= 1) {\r\n          const urlExtension = att.downloadUrl.substring(\r\n            att.downloadUrl.lastIndexOf(\".\") + 1,\r\n            att.downloadUrl.length\r\n          );\r\n          if (acceptableExtions.includes(urlExtension)) {\r\n            fakeUrl = att.downloadUrl;\r\n          }\r\n        }\r\n    });\r\n    return fakeUrl;\r\n  };\r\n  const getArchivePublications = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let result = await SearchService.getArchivePublications(\r\n        location.archiveSearchString,\r\n        location.archiveFilter,\r\n        0\r\n      );\r\n      setPublications(result.rows);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getArchivePublications();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb\r\n        title={i18n(\"common.Archives\")}\r\n        items={[[i18n(\"app.title\"), \"/\"], [i18n(\"common.Archives\")]]}\r\n      />\r\n      <div className=\"app__archieve__page_search\">\r\n        {loading ? (\r\n          <section>\r\n            <Skeleton height={170} />\r\n          </section>\r\n        ) : (\r\n          <div className=\"archeive\">\r\n            <div className=\"archieve__content\">\r\n              <div className=\"archieve__left\">\r\n                <SearchArchiveLayout>\r\n                  <div>\r\n                    {publications.length > 0 ? (\r\n                      <div>\r\n                        {publications.map((searchResult, index) => {\r\n                          let thumbnail: any;\r\n\r\n                          if (searchResult[\"photos\"]) {\r\n                            thumbnail = getValidThumbnail(\r\n                              searchResult[\"photos\"]\r\n                            );\r\n                          }\r\n                          if (langue === \"fr\") {\r\n                            return (\r\n                              <SRPCard\r\n                                type={\r\n                                  searchResult[\"category\"]\r\n                                    ? searchResult[\"category\"][\"titleFR\"]\r\n                                    : null\r\n                                }\r\n                                title={searchResult[\"titleFR\"]}\r\n                                entite={\"detail\"}\r\n                                key={index}\r\n                                _id={searchResult[\"_id\"] ?? 0}\r\n                                date={searchResult[\"date\"]}\r\n                                content={searchResult[\"descriptionFR\"]}\r\n                                thumbnail={thumbnail}\r\n                              />\r\n                            );\r\n                          } else if (langue === \"ar\") {\r\n                            return (\r\n                              <SRPCard\r\n                                type={\r\n                                  searchResult[\"category\"]\r\n                                    ? searchResult[\"category\"][\"titleAR\"]\r\n                                    : null\r\n                                }\r\n                                title={searchResult[\"titleAR\"]}\r\n                                entite={\"detail\"}\r\n                                key={index}\r\n                                _id={searchResult[\"_id\"] ?? 0}\r\n                                date={searchResult[\"date\"]}\r\n                                content={searchResult[\"descriptionAR\"]}\r\n                                thumbnail={thumbnail}\r\n                              />\r\n                            );\r\n                          } else if (langue === \"en\") {\r\n                            return (\r\n                              <SRPCard\r\n                                type={\r\n                                  searchResult[\"category\"]\r\n                                    ? searchResult[\"category\"][\"titleEN\"]\r\n                                    : null\r\n                                }\r\n                                title={searchResult[\"titleEN\"]}\r\n                                entite={\"detail\"}\r\n                                key={index}\r\n                                _id={searchResult[\"_id\"] ?? 0}\r\n                                date={searchResult[\"date\"]}\r\n                                content={searchResult[\"descriptionEN\"]}\r\n                                thumbnail={thumbnail}\r\n                              />\r\n                            );\r\n                          }\r\n                        })}\r\n                      </div>\r\n                    ) : (\r\n                      <h3 id=\"noDataFound\">\r\n                        <BsBox />\r\n                        &nbsp;{i18n(\"common.noData\")}\r\n                      </h3>\r\n                    )}\r\n                  </div>\r\n                </SearchArchiveLayout>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default SearchArchive;\r\n\r\nconst SearchArchiveLayout = styled.div`\r\n  width: 100%;\r\n  margin: 1rem 0;\r\n\r\n  #noDataFound {\r\n    font-family: \"Proxima Nova\";\r\n    font-style: normal;\r\n    font-weight: 100;\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    color: #c7c6c6;\r\n\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport parse from \"html-react-parser\";\r\nimport moment from \"moment\";\r\nimport { calendar, noData } from \"src/assets/images\";\r\nexport default function SRPCard({\r\n  _id,\r\n  date,\r\n  content,\r\n  thumbnail,\r\n  title,\r\n  entite,\r\n  type,\r\n}) {\r\n  const formattedDate = moment(date).format(\"l\");\r\n  return (\r\n    <CardLayout>\r\n      <Link to={\"/\" + entite + \"/\" + _id}>\r\n        <div className=\"search__description\">\r\n          <div>\r\n            <div className=\"evenement__left\">\r\n              {thumbnail ? (\r\n                <img\r\n                  className=\"lazyload\"\r\n                  style={{ width: 100, height: 100 }}\r\n                  src={thumbnail}\r\n                  alt=\"\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  className=\"lazyload\"\r\n                  style={{ width: 100, height: 100 }}\r\n                  src={noData}\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"evenement__right\">\r\n              <div className=\"date\">\r\n                <div>\r\n                  <img className=\"lazyload\" src={calendar} alt=\"\" srcSet=\"\" />\r\n                  {formattedDate}\r\n                </div>\r\n                {type ? (\r\n                  <div className=\"cardHeader\">\r\n                    <span className=\"categoryBadge\">{type}</span>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              {title ? (\r\n                <div className=\"title\">\r\n                  {title.length > 100\r\n                    ? parse(title.substring(0, 100) + \"...\")\r\n                    : parse(title)}\r\n                </div>\r\n              ) : null}\r\n              {content ? (\r\n                <div className=\"right__footer\">\r\n                  {content.length > 100\r\n                    ? parse(content.substring(0, 100) + \"...\")\r\n                    : parse(content)}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <hr></hr>\r\n    </CardLayout>\r\n  );\r\n}\r\n\r\nconst CardLayout = styled.div`\r\n  /* LEFT SECTION */\r\n  hr {\r\n    height: 1px;\r\n    background-color: #2b2840;\r\n    border: none;\r\n  }\r\n  .cardContent {\r\n    flex-grow: 1;\r\n    height: 100%;\r\n    padding-left: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    .cardHeader {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      font-size: 12px;\r\n      font-family: \"Proxima Nova\";\r\n\r\n      .categoryBadge {\r\n        background: #f8d7da;\r\n        border-radius: 3px;\r\n        color: var(--dark--red);\r\n        padding: 0.4rem 0.5rem;\r\n        font-size: 12px;\r\n        font-family: \"Proxima Nova\";\r\n      }\r\n    }\r\n\r\n    .title {\r\n      margin-top: 1.5rem;\r\n      color: var(--violet);\r\n\r\n      span {\r\n        font-family: \"Bebas Neue Pro\";\r\n        font-style: normal;\r\n        font-weight: 700;\r\n        font-size: 23px;\r\n        line-height: 24px;\r\n      }\r\n    }\r\n  }\r\n  hr {\r\n    margin-top: 10px;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BreadcrumbNav = styled.div`\r\n\tmargin: 28px 0 10px 0;\r\n\t.breadcrumb {\r\n\t\twidth: 100%;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tbackground-color: transparent;\r\n\t}\r\n\tol {\r\n\t\tdisplay: flex;\r\n\t}\r\n\tli {\r\n\t\tfont-family: \"Proxima Nova\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 25px;\r\n\t}\r\n\t.breadcrump__nav {\r\n\t\tmargin: auto;\r\n\t\tleft: 0;\r\n\t\tdisplay: flex;\r\n\t\tmax-width: 1170px;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.breadcrumb-item:not(.active) a {\r\n\t\tcolor: rgba(0, 0, 0, 0.45);\r\n\t}\r\n\r\n\th2 {\r\n\t\tfont-family: \"Bebas Neue Pro\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 47px;\r\n\t\tline-height: 39px;\r\n\t}\r\n`;\r\n\r\nfunction Breadcrumb(props) {\r\n\tconst isLink = (item) => {\r\n\t\treturn item.length > 1;\r\n\t};\r\n\treturn (\r\n\t\t<BreadcrumbNav>\r\n\t\t\t<div className=\"breadcrump__nav\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t{props.items.map((item, index) => (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={item[0]}\r\n\t\t\t\t\t\t\t\tclassName={`breadcrumb-item ${\r\n\t\t\t\t\t\t\t\t\tprops.items.length - 1 === index ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t\t\t{isLink(item) ? (\r\n\t\t\t\t\t\t\t\t\t<Link to={item[1]}>\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{item[0]} {item[1]}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\titem[0]\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</BreadcrumbNav>\r\n\t);\r\n}\r\n\r\nexport default Breadcrumb;\r\n"],"names":["SearchService","tenantId","AuthCurrentTenant","authAxios","response","data","SEARCH_STRING","OFFSET","categoryName","publicationsOfSelectedCategory","rows","publications","finalResponseOBject","count","length","FILTER_STRING","FILTER","statut","thematique","category","location","langue","localStorage","getItem","useState","setPublications","loading","setLoading","getArchivePublications","archiveSearchString","archiveFilter","result","console","log","useEffect","title","i18n","items","className","height","SearchArchiveLayout","map","searchResult","index","thumbnail","attachmentsArray","fakeUrl","forEach","att","downloadUrl","urlExtension","substring","lastIndexOf","includes","getValidThumbnail","type","entite","_id","date","content","id","styled","SRPCard","formattedDate","moment","format","CardLayout","to","style","width","src","alt","noData","calendar","srcSet","parse","BreadcrumbNav","props","isLink","item"],"sourceRoot":""}
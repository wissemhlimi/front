{"version":3,"file":"static/js/7275.34457507.chunk.js","mappings":"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","sources":["view/shared/show-one/components/Header.tsx","view/shared/show-one/components/Main.tsx","view/shared/show-one/components/SectionHeader.tsx","view/shared/show-one/RelatedContent.tsx","view/shared/show-one/Index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PublicationService from \"src/modules/publication/publicationService\";\r\n// ICONS\r\nimport { BsFacebook, BsTwitter, BsInstagram, BsLinkedin } from \"react-icons/bs\";\r\nimport Translate from \"../../Translate\";\r\nimport {\r\n  EmailIcon,\r\n  FacebookIcon,\r\n  FacebookMessengerIcon,\r\n  HatenaIcon,\r\n  InstapaperIcon,\r\n  LineIcon,\r\n  LinkedinIcon,\r\n  LivejournalIcon,\r\n  MailruIcon,\r\n  OKIcon,\r\n  PinterestIcon,\r\n  PocketIcon,\r\n  RedditIcon,\r\n  TelegramIcon,\r\n  TumblrIcon,\r\n  TwitterIcon,\r\n  ViberIcon,\r\n  VKIcon,\r\n  WeiboIcon,\r\n  WhatsappIcon,\r\n  WorkplaceIcon,\r\n} from \"react-share\";\r\nexport default function Header({\r\n  PUBLICATION_TITLE,\r\n  PUBLICATION_CREATED_AT,\r\n  PUBLICATION_TYPE,\r\n}) {\r\n  return (\r\n    <HeaderLayout>\r\n      <span className=\"categoryBadge\">\r\n        {Translate.Trans(\"title\", PUBLICATION_TYPE)}\r\n      </span>\r\n\r\n      <h1>{Translate.Trans(\"title\", PUBLICATION_TITLE)}</h1>\r\n\r\n      <div className=\"data\">\r\n        <div className=\"dateAndOwner\">\r\n          <span>\r\n            Publi√© le {PublicationService.pipeDate(PUBLICATION_CREATED_AT)}\r\n          </span>\r\n        </div>\r\n        <br />\r\n        <div className=\"socials\">\r\n          <span>Partager :</span>\r\n          <button>\r\n            <FacebookIcon />\r\n          </button>\r\n          <button>\r\n            <BsTwitter />\r\n          </button>\r\n          <button>\r\n            <BsInstagram />\r\n          </button>\r\n          <button>\r\n            <BsLinkedin />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </HeaderLayout>\r\n  );\r\n}\r\n\r\nconst HeaderLayout = styled.section`\r\n  font-family: \"Proxima Nova\";\r\n  font-style: normal;\r\n\r\n  .categoryBadge {\r\n    background: #f8d7da;\r\n    border-radius: 3px;\r\n    color: var(--dark--red);\r\n    padding: 0.4rem 0.5rem;\r\n    font-size: 12px;\r\n    font-family: \"Proxima Nova\";\r\n  }\r\n\r\n  h1 {\r\n    margin: 1rem 0;\r\n    font-size: 40px;\r\n    line-height: 43px;\r\n    text-transform: uppercase;\r\n    color: var(--violet);\r\n  }\r\n\r\n  .socials {\r\n    margin-top: 1rem;\r\n    width: 250px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button {\r\n      background-color: transparent;\r\n      border-radius: 50%;\r\n      color: var(--violet);\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    padding: 0 0.5rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n// HELPER PACKAGES\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport Photogrid from \"react-facebook-photo-grid\";\r\nimport parse from \"html-react-parser\";\r\nimport Translate from \"../../Translate\";\r\n\r\nexport default function Main({ PUBLICATION, data }) {\r\n  return (\r\n    <MainLayout>\r\n      {PUBLICATION[\"videos\"]?.length > 0 && (\r\n        <VideoPlayersLayout>\r\n          {PUBLICATION[\"videos\"].map((vid) => {\r\n            return (\r\n              <ReactPlayer\r\n                key={vid._id}\r\n                url={vid[\"downloadUrl\"]}\r\n                loop={true}\r\n                controls={true}\r\n                className='video__player'\r\n              />\r\n            );\r\n          })}\r\n        </VideoPlayersLayout>\r\n      )}\r\n      <div\r\n        dangerouslySetInnerHTML={{\r\n          __html: Translate.Trans(\"description\", PUBLICATION),\r\n        }}\r\n      />\r\n      {/* RENDERING IMAGES (if there are any) */}\r\n      {(PUBLICATION[\"photos\"]?.length > 0 ||\r\n        PUBLICATION[\"supports\"]?.length > 0) && (\r\n        <PhotoPlayersLayout>\r\n          <section className='gridSection'>\r\n            {<Photogrid images={data} maxWidth='100%' key={0}></Photogrid>}\r\n          </section>\r\n        </PhotoPlayersLayout>\r\n      )}\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\nconst MainLayout = styled.section`\r\n  margin: 2rem 0;\r\n  p {\r\n    text-align: justify;\r\n    color: var(--gray2);\r\n    font-family: \"Proxima Nova\";\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 25px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    padding: 0 0.5rem;\r\n  }\r\n`;\r\nconst VideoPlayersLayout = styled.section`\r\n  margin: 3rem 0;\r\n  audio {\r\n    height: 70px !important;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    video {\r\n      width: 90% !important;\r\n    }\r\n  }\r\n`;\r\nconst PhotoPlayersLayout = styled.section`\r\n  margin-top: 1rem;\r\n\r\n  .gridSection {\r\n    width: 100%;\r\n    display: block;\r\n    &:before {\r\n      content: \"( Double click to open a photo )\";\r\n      display: block;\r\n      font-family: \"Proxima Nova\";\r\n      font-style: normal;\r\n      font-size: 1rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default function SectionHeader({ title }) {\r\n    return (\r\n        <HeaderLayout>\r\n            <header>\r\n                <span>{title}</span>\r\n            </header>\r\n        </HeaderLayout>\r\n    )\r\n}\r\n\r\nconst HeaderLayout = styled.div`\r\n    header{\r\n        width: 100%;\r\n        margin-bottom: 1rem;\r\n\r\n        span{\r\n            font-size: 2.5rem;\r\n            text-transform: uppercase;\r\n            font-family: 'Bebas Neue Pro';\r\n            line-height: .5;\r\n            padding: 0;\r\n\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: flex-end;\r\n            justify-content: space-between;\r\n\r\n            &:after{\r\n                content: '';\r\n                display: inline-block;\r\n                height: 1px;\r\n                flex-grow: 1;\r\n                background-color: red;\r\n            }\r\n        }\r\n    }\r\n\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n// SERVICES\r\nimport PublicationService from \"src/modules/publication/publicationService\";\r\n// COMPONENTSS\r\nimport SectionHeader from \"./components/SectionHeader\";\r\nimport Translate from \"../Translate\";\r\nimport { i18n } from \"src/i18n\";\r\n\r\nexport default function RelatedContent({ type }) {\r\n  // Fetching related entities based on type\r\n  const [related, setRelated] = useState<any[]>([]);\r\n  const [entityIsLoading, setEntityIsLoading] = useState(true);\r\n\r\n  const fetchRelatedContent = (type) => {\r\n    PublicationService.getRelated(type).then((value) => {\r\n      value.rows?.map((entry) => {\r\n        setRelated((related) => related.concat(entry));\r\n      });\r\n      setEntityIsLoading(false);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchRelatedContent(type);\r\n  }, [type]);\r\n\r\n  return (\r\n    <RelatedCOntentLayout>\r\n      <SectionHeader title=\"publications qui peuvent vous int√©resser\" />\r\n      {entityIsLoading ? (\r\n        <section>\r\n          <h4>{i18n(\"table.loadingContent\")}</h4>\r\n        </section>\r\n      ) : (\r\n        <div className=\"gridLayout\">\r\n          {related?.map((entity) => {\r\n            return (\r\n              <HorizontalCard key={entity[\"_id\"]}>\r\n                {entity[\"photos\"].length > 0 ? (\r\n                  <img src={entity[\"photos\"][0].downloadUrl} alt=\"\" />\r\n                ) : (\r\n                  <div className=\"cardImage cardThumbnail hasNoThumbnail\"></div>\r\n                )}\r\n                <div className=\"cardContent\">\r\n                  <div className=\"cardHeader\">\r\n                    <span className=\"categoryBadge\">{entity[\"type\"]}</span>\r\n                    <span>\r\n                      {PublicationService.pipeDate(entity[\"updatedAt\"])}\r\n                    </span>\r\n                  </div>\r\n                  <Link\r\n                    to={\"/Mediatheque/entity/\" + entity[\"_id\"]}\r\n                    className=\"title text__wrap\"\r\n                    style={{ maxWidth: 370 }}\r\n                  >\r\n                    <span>{Translate.Trans(\"title\", entity)}</span>\r\n                  </Link>\r\n                </div>\r\n              </HorizontalCard>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </RelatedCOntentLayout>\r\n  );\r\n}\r\n\r\n// S T Y L E S\r\nconst RelatedCOntentLayout = styled.section`\r\n  margin: 5rem 0;\r\n  width: 100%;\r\n\r\n  .gridLayout {\r\n    margin-top: 2rem;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    padding: 0 0.5rem;\r\n  }\r\n`;\r\nconst HorizontalCard = styled.div`\r\n  height: 200px;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  /* LEFT SECTION */\r\n  .cardThumbnail {\r\n    width: 100%;\r\n    height: 200px;\r\n    background-size: cover;\r\n    background-position: center;\r\n    position: relative;\r\n  }\r\n  .hasNoThumbnail {\r\n    background-image: url(\"https://imgur.com/N1ZiTM4.jpeg\");\r\n  }\r\n  .cardImage {\r\n    width: 200px;\r\n    min-width: 200px !important;\r\n    height: 100%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  /* LEFT SECTION */\r\n  .cardContent {\r\n    flex-grow: 1;\r\n    height: 100%;\r\n    padding-left: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    .cardHeader {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      font-size: 12px;\r\n      font-family: \"Proxima Nova\";\r\n\r\n      .categoryBadge {\r\n        background: #f8d7da;\r\n        border-radius: 3px;\r\n        color: var(--dark--red);\r\n        padding: 0.4rem 0.5rem;\r\n        font-size: 12px;\r\n        font-family: \"Proxima Nova\";\r\n      }\r\n    }\r\n\r\n    .title {\r\n      margin-top: 1.5rem;\r\n      color: var(--violet);\r\n\r\n      span {\r\n        font-family: \"Bebas Neue Pro\";\r\n        font-style: normal;\r\n        font-weight: 700;\r\n        font-size: 23px;\r\n        line-height: 24px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n// SERVICES\r\nimport PublicationService from \"src/modules/publication/publicationService\";\r\n// COMPONENTS\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport RelatedContent from \"./RelatedContent\";\r\n\r\nexport default function Index() {\r\n  // STATES AND VARS\r\n  let ID = useParams().id;\r\n  const [PublicationDetails, setPublicationDetails] = useState({});\r\n  const [data, setData] = useState([]);\r\n\r\n  // Get the details of that one publication\r\n  const getPublicationDetails = (PUBLICATION_ID) => {\r\n    PublicationService.find(PUBLICATION_ID)\r\n      .then((response: any) => {\r\n        setPublicationDetails(response);\r\n        // loadig photos to be used in the grid\r\n        if (response.photos.length >= 1) {\r\n          response.photos.map((p) => {\r\n            setData((data) => data.concat(p.downloadUrl));\r\n          });\r\n        }\r\n        if (response.supports.length >= 1) {\r\n          response.supports.map((supp) => {\r\n            setData((data) => data.concat(supp.downloadUrl));\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  // FETCH ON LOAD\r\n  useEffect(() => {\r\n    getPublicationDetails(ID);\r\n  }, []);\r\n\r\n  // TEMPLATE\r\n  return (\r\n    <MainLayout>\r\n      <Header\r\n        PUBLICATION_TITLE={PublicationDetails ?? \"N.A\"}\r\n        PUBLICATION_CREATED_AT={PublicationDetails[\"updatedAt\"] ?? \"N.A\"}\r\n        PUBLICATION_TYPE={PublicationDetails[\"thematique\"] ?? \"N.A\"}\r\n      />\r\n      <Main PUBLICATION={PublicationDetails} data={data} />\r\n      <RelatedContent type={PublicationDetails[\"type\"] ?? \"N.A\"} />\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\nconst MainLayout = styled.section`\r\n  width: 1170px;\r\n  height: 100%;\r\n  margin: 1rem auto;\r\n`;\r\n"],"names":["Header","PUBLICATION_TITLE","PUBLICATION_CREATED_AT","PUBLICATION_TYPE","HeaderLayout","className","Translate","PublicationService","FacebookIcon","styled","Main","PUBLICATION","data","MainLayout","length","VideoPlayersLayout","map","vid","url","loop","controls","_id","dangerouslySetInnerHTML","__html","PhotoPlayersLayout","images","maxWidth","SectionHeader","title","RelatedContent","type","useState","related","setRelated","entityIsLoading","setEntityIsLoading","useEffect","then","value","rows","entry","concat","fetchRelatedContent","RelatedCOntentLayout","i18n","entity","HorizontalCard","src","downloadUrl","alt","to","style","Index","ID","useParams","id","PublicationDetails","setPublicationDetails","setData","PUBLICATION_ID","response","photos","p","supports","supp","catch","err","console","error"],"sourceRoot":""}
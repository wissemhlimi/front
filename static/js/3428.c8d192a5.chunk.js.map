{"version":3,"file":"static/js/3428.c8d192a5.chunk.js","mappings":"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","sources":["modules/Glossaire/GlossaireService.tsx","view/Glossaire/Header.tsx","view/Glossaire/styles/FilterStyles.tsx","view/Glossaire/shared/LoadingData.tsx","view/Glossaire/shared/NoDataFound.tsx","view/Glossaire/Filter.tsx","view/Glossaire/styles/GlossaireSection.tsx","view/Glossaire/GloassaireList.tsx","view/Glossaire/Glossaire.tsx","view/shared/Breadcrumb.tsx"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\n\nexport default class GlossaireService {\n  static async getGloassaireCategories() {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/category-glossaire`,\n      {}\n    );\n    return response.data;\n  }\n  // fetchin list of glossaire\n  static async getGloassaireList() {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(`/tenant/${tenantId}/glossaire`, {});\n    return response.data;\n  }\n\n  //search\n  static async search(filter) {\n    const params = {\n      filter,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/glossaire/search`,\n      {\n        params,\n      }\n    );\n\n    return response.data;\n  }\n  // GET ONE\n  static async getOneGloassaire(GLOSSAIRE_ID) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/glossaire/${GLOSSAIRE_ID}`\n    );\n    return response.data;\n  }\n\n  static async getGloassaireById(id) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/glossaire/${id}`,\n      {}\n    );\n    return response.data;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport Breadcrumb from \"../shared/Breadcrumb\";\n\nimport styled from \"styled-components\";\nimport AproposService from \"src/modules/Apropos/AproposService\";\nimport { i18n } from \"src/i18n\";\n\nexport default function Header() {\n  const [glossaireDesc, setGlossaireDesc] = useState();\n  const langue = localStorage.getItem(\"language\");\n\n  useEffect(() => {\n    AproposService.list(\"\", \"\", \"\", \"\").then((res) => {\n      if (langue === \"fr\") {\n        setGlossaireDesc(res.rows[0].glossaireDescFR);\n      }\n      if (langue === \"ar\") {\n        setGlossaireDesc(res.rows[0].glossaireDescAR);\n      }\n      if (langue === \"en\") {\n        setGlossaireDesc(res.rows[0].glossaireDescEN);\n      }\n    });\n  }, []);\n  return (\n    <div>\n      <Breadcrumb\n        title={i18n(\"menu.Glossaire\")}\n        items={[\n          [i18n(\"app.title\"), \"/\"],\n          [i18n(\"menu.Glossaire\"), \"/Glossaire\"],\n        ]}\n      />\n\n      {/* DESCRIPTION PLACEHOLDER */}\n      <DescriptionSection>\n        <p>{glossaireDesc}</p>\n      </DescriptionSection>\n    </div>\n  );\n}\n\nconst DescriptionSection = styled.section`\n  color: var(--violet);\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 1rem 0;\n  text-align: justify;\n`;\n","import styled from 'styled-components'\n\nconst FilterStyles = styled.section`\n  max-width: 1170px;\n  margin: 2rem 0;\n  font-size: 1rem;\n  background-color: #F1F1F1;\n  \n\n  .tabsHeader{\n    border-bottom: 1px solid #A3A3A9;\n\n    button{\n      padding: 1rem;\n      font-size: 1rem;\n      color: var(--gray3);\n      position: relative;\n    }\n    .active{\n      color: var(--violet);\n\n      &::after{\n        content: \"\";\n        display: block;\n        width: 70%;\n        height: 2px;\n        position: absolute;\n        left: 50%;\n        bottom: -2px;\n        transform: translateX(-50%);\n        background-color: red;\n        transition: .2s ease-in-out;\n      }\n    }\n  }\n\n  .tabContent{\n    padding: 1rem;\n    font-size: 1.4rem;\n    color: var(--violet);\n\n    .letterLinkFilter{\n      display: inline-block;\n      padding: .2rem .2rem;\n      font-weight: 700;\n      cursor: pointer;\n\n      &:hover{\n        color: red;\n      }\n    }\n\n    .categoryLink{\n      font-size: 1rem;\n      text-transform: uppercase;\n      cursor: pointer;\n      color: var(--violet);\n      background-color: #fff;\n      padding: .3rem .5rem;\n      margin: 0 .3rem;\n\n      &:hover{\n        color: red;\n      }\n    }\n  }\n`\n\nexport default FilterStyles\n","import React from 'react'\nimport styled from 'styled-components'\n// ICONS\nimport { MdOutlineHourglassEmpty } from 'react-icons/md'\n\n\nexport default function LoadingData() {\n    return (\n        <TabMessage>\n            <MdOutlineHourglassEmpty className='icon loadingIcon' />\n            <span>Chargement des données</span>\n        </TabMessage>\n    )\n}\n\nconst TabMessage = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .icon{\n        font-size: 2rem;\n        color: var(--violet);\n    }\n\n    .loadingIcon{\n        animation: spin infinite 2s ease-in-out;\n    }\n\n    span{\n        margin-top: 1rem;\n    }\n\n    @keyframes spin {\n        from {transform:rotate(0deg);}\n        to {transform:rotate(360deg);}\n    }\n`","import React from 'react'\nimport styled from 'styled-components'\n// ICONS\nimport { MdOutlineHourglassEmpty } from 'react-icons/md'\nimport { CgSmileNone } from 'react-icons/cg'\n\n\nexport default function NoDataFound() {\n    return (\n        <TabMessage>\n            <CgSmileNone className='icon' />\n            <span>Aucune donnée disponible</span>\n        </TabMessage>\n    )\n}\n\nconst TabMessage = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .icon{\n        font-size: 2rem;\n        color: var(--violet);\n    }\n\n    .loadingIcon{\n        animation: spin infinite 2s ease-in-out;\n    }\n\n    span{\n        margin-top: 1rem;\n    }\n`","import React, { useState, useEffect } from \"react\";\nimport FilterStyles from \"./styles/FilterStyles\";\nimport { Link } from \"react-scroll\";\nimport GlossaireService from \"src/modules/Glossaire/GlossaireService\";\n\n// COMPONENTS\nimport LoadingData from \"./shared/LoadingData\";\nimport NoDataFound from \"./shared/NoDataFound\";\nimport { i18n } from \"../../i18n\";\nexport default function Filter({ setGroupByCategory }) {\n  // current tab\n  const [activeTab, setActiveTab] = useState(true);\n  const toggleTabOnClick = (_) => {\n    setActiveTab((current) => !current);\n    setGroupByCategory(false);\n    if (activeTab) {\n      setGetCategoriesTrigger(true);\n      setGroupByCategory(true);\n    }\n  };\n  const langue = localStorage.getItem(\"language\");\n  // dummy letters array to use as links\n  const letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n  ];\n  const arabicLetters = [\n    \"أ\",\n    \"ب\",\n    \"ت\",\n    \"ث\",\n    \"ج\",\n    \"ح\",\n    \"خ\",\n    \"د\",\n    \"ذ\",\n    \"ر\",\n    \"ز\",\n    \"س\",\n    \"ش\",\n    \"ص\",\n    \"ض\",\n    \"ط\",\n    \"ظ\",\n    \"ع\",\n    \"غ\",\n    \"ف\",\n    \"ق\",\n    \"ك\",\n    \"ل\",\n    \"م\",\n    \"ن\",\n    \"ه\",\n    \"و\",\n    \"ي\",\n  ];\n  // Glossaire ccategories\n  const [glossaireCategories, setGlossaireCategories] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // fetching category only if user switched tabs\n  const [getCategoriesTrigger, setGetCategoriesTrigger] = useState(false);\n\n  useEffect(() => {\n    if (getCategoriesTrigger) {\n      GlossaireService.getGloassaireCategories().then((res) => {\n        setGlossaireCategories(res.rows);\n        setIsLoading(false);\n      });\n    }\n  }, [getCategoriesTrigger]);\n\n  return (\n    <div>\n      {/* FILTER */}\n      <FilterStyles>\n        <div className=\"tabsHeader\">\n          <button\n            className={activeTab ? \"active\" : \"\"}\n            onClick={toggleTabOnClick}\n          >\n            {i18n(\"common.lettre\")}\n          </button>\n          <button\n            className={!activeTab ? \"active\" : \"\"}\n            onClick={toggleTabOnClick}\n          >\n            {i18n(\"common.category\")}\n          </button>\n        </div>\n        <div className=\"tabContent\">\n          {langue === \"ar\" ? (\n            <>\n              {activeTab && (\n                <div className=\"tab letterTab\">\n                  {arabicLetters.map((l) => {\n                    return (\n                      <Link\n                        to={l}\n                        smooth={true}\n                        duration={300}\n                        key={l}\n                        className=\"letterLinkFilter\"\n                      >\n                        {l}\n                      </Link>\n                    );\n                  })}\n                </div>\n              )}\n            </>\n          ) : (\n            <>\n              {activeTab && (\n                <div className=\"tab letterTab\">\n                  {letters.map((l) => {\n                    return (\n                      <Link\n                        to={l}\n                        smooth={true}\n                        duration={300}\n                        key={l}\n                        className=\"letterLinkFilter\"\n                      >\n                        {l.toUpperCase()}\n                      </Link>\n                    );\n                  })}\n                </div>\n              )}\n            </>\n          )}\n\n          {!activeTab && (\n            <div className=\"tab categoryTab\">\n              {!isLoading ? (\n                <div>\n                  {glossaireCategories.length ? (\n                    <section style={{ display: \"grid\" }}>\n                      {glossaireCategories.map((gc) => {\n                        return (\n                          <Link\n                            to={\n                              langue === \"fr\"\n                                ? gc[\"titleFR\"]\n                                : langue === \"ar\"\n                                ? gc[\"titleAR\"]\n                                : gc[\"titleEN\"]\n                            }\n                            smooth={true}\n                            duration={300}\n                            key={gc[\"id\"]}\n                            className=\"categoryLink\"\n                          >\n                            {langue === \"fr\"\n                              ? gc[\"titleFR\"]\n                              : langue === \"ar\"\n                              ? gc[\"titleAR\"]\n                              : gc[\"titleEN\"]}\n                          </Link>\n                        );\n                      })}\n                    </section>\n                  ) : (\n                    <NoDataFound />\n                  )}\n                </div>\n              ) : (\n                <LoadingData />\n              )}\n            </div>\n          )}\n\n          {/* end of tab content */}\n        </div>\n      </FilterStyles>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\n\nconst GlossaireSection = styled.section`\n  width: 100%;\n  padding: 1rem 0;\n\n  .sectionHeader {\n    span {\n      color: var(--violet);\n      font-size: 2rem;\n      font-weight: 700;\n\n            &:after{\n                content: '';\n                display: block;\n                width: 100%;\n                height: 1px;\n                background-color: red;\n                margin: 1rem 0;\n            }\n        }\n    }\n  }\n\n  .sectionBody {\n    .glossaireLink {\n      display: block;\n      width: auto;\n      height: 30px;\n      padding: 0.4rem 0;\n      margin: 1rem 0;\n\n      text-align: left;\n      font-weight: 600;\n      font-size: 1rem;\n\n      background-color: transparent;\n      border: none;\n      color: var(--violet);\n\n      &:hover {\n        color: red;\n        border-bottom: 1px solid red;\n      }\n    }\n  }\n`;\n\nexport default GlossaireSection;\n","import React, { useState } from \"react\";\nimport GlossaireSection from \"./styles/GlossaireSection\";\nimport _ from \"lodash\";\n// MODAL\nimport { Link } from \"react-router-dom\";\n\n// PACKAGES\nvar arraySort = require(\"array-sort\");\nvar groupArray = require(\"group-array\");\n\nexport default function GloassaireList({ data, criteria }) {\n  // HELPER FUNCTION(S)\n  const initial = (text) => {\n    return _.capitalize(text?.substring(0, 1));\n  };\n\n  // ### LETTER TAB LOGIC ###\n  let arrayOfData: any[] = [];\n  const langue = localStorage.getItem(\"language\");\n\n  if (criteria === \"letter\") {\n    if (langue === \"fr\") {\n      data.forEach((GLOSSOBJECT) => {\n        arrayOfData.push({\n          letter: initial(GLOSSOBJECT.nomFR),\n          data: GLOSSOBJECT,\n        });\n      });\n      arrayOfData = groupArray(arraySort(arrayOfData, \"letter\"), \"letter\");\n    } else if (langue === \"en\") {\n      data.forEach((GLOSSOBJECT) => {\n        arrayOfData.push({\n          letter: initial(GLOSSOBJECT.nomEN),\n          data: GLOSSOBJECT,\n        });\n      });\n      arrayOfData = groupArray(arraySort(arrayOfData, \"letter\"), \"letter\");\n    }\n    if (langue === \"ar\") {\n      data.forEach((GLOSSOBJECT) => {\n        arrayOfData.push({\n          letter: initial(GLOSSOBJECT.nomAR),\n          data: GLOSSOBJECT,\n        });\n      });\n      arrayOfData = groupArray(arraySort(arrayOfData, \"letter\"), \"letter\");\n    }\n  }\n  const initialsList: any = Object.keys(arrayOfData);\n\n  // ### CATEGORY TAB LOGIC ###\n  const categoriesList: any = Object.keys(data);\n  const [isShowing, setIsShowing] = useState(false);\n\n  // Modal.setAppElement(\"#root\");\n  const [modalData, setModalData] = useState([\n    {\n      nomFR: \"\",\n      nomAR: \"\",\n      nomEN: \"\",\n      definitionFR: \"\",\n      definitionAR: \"\",\n      definitionEN: \"\",\n      categorie: { titleFR: \"\", titleAR: \"\", titleEN: \"\" },\n    },\n  ]);\n  const [modalDataLetter, setModalDataLetter] = useState([\n    {\n      data: {\n        nomFR: \"\",\n        nomAR: \"\",\n        nomEN: \"\",\n        definitionFR: \"\",\n        definitionAR: \"\",\n        definitionEN: \"\",\n        categorie: { titleFR: \"\", titleAR: \"\", titleEN: \"\" },\n      },\n    },\n  ]);\n  const handleClick = (CAT, ID) => {\n    setIsShowing(true);\n    if (criteria === \"category\") {\n      const modalData = data[CAT].filter((glossaireObject) => {\n        return glossaireObject.id === ID;\n      });\n      if (modalData.length > 0) {\n        setModalData(modalData);\n      }\n    } else {\n      const modalDataLetter = arrayOfData[CAT].filter((glossaireObject) => {\n        return glossaireObject.data._id === ID;\n      });\n      if (modalDataLetter.length > 0) {\n        setModalDataLetter(modalDataLetter);\n      }\n    }\n  };\n\n  return (\n    <div>\n      {/* LIST OF ENTRIES */}\n      <section className='listOfEntries'>\n        {\n          // ============ CATEGORY TAB ============\n          criteria === \"category\" && (\n            <div>\n              {categoriesList.map((CAT) => {\n                const glossList = data[CAT];\n                return (\n                  <GlossaireSection key={CAT} id={CAT}>\n                    <div className='sectionHeader'>\n                      <span>{CAT}</span>\n                    </div>\n                    <section className='sectionBody'>\n                      {glossList.map((GLOSS) => {\n                        return (\n                          <Link to={\"/Glossaire/\" + GLOSS._id}>\n                            <section key={GLOSS.id}>\n                              <button\n                                className='glossaireLink'\n                                onClick={() => {}}>\n                                {langue === \"fr\"\n                                  ? GLOSS.nomFR\n                                  : langue === \"ar\"\n                                  ? GLOSS.nomAR\n                                  : GLOSS.nomEN}\n                              </button>\n                            </section>\n                          </Link>\n                        );\n                      })}\n                    </section>\n                  </GlossaireSection>\n                );\n              })}\n            </div>\n          )\n        }\n\n        {/* RENDERING DATA BASED ON FILTER */}\n\n        {\n          // ============ LETTER TAB ============\n          criteria !== \"category\" && (\n            <div>\n              {initialsList.map((GLOSSAIREINITIAL) => {\n                const glossList = arrayOfData[GLOSSAIREINITIAL];\n                return (\n                  <GlossaireSection\n                    key={GLOSSAIREINITIAL}\n                    id={GLOSSAIREINITIAL}>\n                    <div className='sectionHeader'>\n                      <span>{GLOSSAIREINITIAL}</span>\n                    </div>\n                    <section className='sectionBody'>\n                      {glossList.map((ENTRY) => {\n                        return (\n                          <Link to={\"/Glossaire/\" + ENTRY.data._id}>\n                            <section key={ENTRY.data.id}>\n                              <button\n                                className='glossaireLink'\n                                onClick={() =>\n                                  handleClick(GLOSSAIREINITIAL, ENTRY.data.id)\n                                }>\n                                {langue === \"fr\"\n                                  ? ENTRY.data.nomFR\n                                  : langue === \"ar\"\n                                  ? ENTRY.data.nomAR\n                                  : ENTRY.data.nomEN}\n                              </button>\n                            </section>\n                          </Link>\n                        );\n                      })}\n                    </section>\n                  </GlossaireSection>\n                );\n              })}\n            </div>\n          )\n        }\n      </section>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport GlossaireService from \"src/modules/Glossaire/GlossaireService\";\n\n// COMPONENTS\nimport Header from \"./Header\";\nimport Filter from \"./Filter\";\nimport GloassaireList from \"./GloassaireList\";\nimport LoadingData from \"./shared/LoadingData\";\nimport NoDataFound from \"./shared/NoDataFound\";\nimport Footer from \"../Layout/CopyWrite\";\nimport { i18n } from \"src/i18n\";\nimport Link from \"antd/es/typography/Link\";\nimport { search__archeive } from \"src/assets/images\";\n\n// Packages\nvar groupArray = require(\"group-array\");\n\nfunction Glossaire() {\n  // state to hold a copy of the glossaire list (with all data)\n  const [glossaireList, setGlossaireList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const langue = localStorage.getItem(\"language\");\n  // FETCHING initial data from DB\n  const getGlossaire = () => {\n    GlossaireService.getGloassaireList().then((gl) => {\n      setGlossaireList(gl.rows);\n      setIsLoading(false);\n    });\n  };\n  const searchGlossaire = (filter) => {\n    GlossaireService.search(filter).then((gl) => {\n      setGlossaireList(gl.rows);\n      setIsLoading(false);\n    });\n  };\n  useEffect(() => {\n    getGlossaire();\n  }, []);\n\n  // passing grouped data (category)\n  const [groupByCategory, setGroupByCategory] = useState(false);\n  const [searchString, setSearchString] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSearchString(event.target.value);\n  };\n  const onSearch = () => {\n    searchGlossaire(searchString);\n  };\n  return (\n    <>\n      <GlossaireLayout>\n        <Header />\n\n        <div className=\"archieve__left\">\n          <div className=\"left__search\">\n            <input\n              type=\"text\"\n              placeholder={i18n(\"common.search\")}\n              onChange={handleChange}\n              value={searchString}\n            />\n            {searchString.length >= 1 ? (\n              <Link onClick={onSearch}>\n                <div className=\"button__search\">\n                  <i className=\"fa-solid fa-magnifying-glass\" />\n                  {i18n(\"common.search\")}\n                </div>\n              </Link>\n            ) : (\n              <div className=\"button__search\">\n                <i className=\"fa-solid fa-magnifying-glass\" />\n                {i18n(\"common.search\")}\n              </div>\n            )}\n          </div>\n          <div className=\"mobile__archeiveSearch\">\n            <div className=\"archeiveSearch__form\">\n              <input type=\"text\" placeholder={i18n(\"common.search\")} />\n              <div className=\"button_search\">\n                <img\n                  className=\"lazyload\"\n                  src={search__archeive}\n                  alt=\"Search Archeive ICon\"\n                  srcSet=\"\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Filter setGroupByCategory={setGroupByCategory} />\n        {isLoading ? (\n          <LoadingData />\n        ) : (\n          <section>\n            {!glossaireList.length ? (\n              <NoDataFound />\n            ) : (\n              <>\n                {groupByCategory ? (\n                  <GloassaireList\n                    data={\n                      langue === \"fr\"\n                        ? groupArray(glossaireList, \"categorie.titleFR\")\n                        : langue === \"ar\"\n                        ? groupArray(glossaireList, \"categorie.titleAR\")\n                        : groupArray(glossaireList, \"categorie.titleEN\")\n                    }\n                    criteria=\"category\"\n                  />\n                ) : (\n                  <GloassaireList data={glossaireList} criteria=\"letter\" />\n                )}\n              </>\n            )}\n          </section>\n        )}\n      </GlossaireLayout>\n    </>\n  );\n}\n\nexport default Glossaire;\n\nconst GlossaireLayout = styled.section`\n  max-width: 1170px;\n  margin: 2rem auto;\n\n  font-family: \"Proxima Nova\";\n  font-style: normal;\n\n  @media screen and (max-width: 1071px) {\n    padding: 0 10px;\n    margin: 160px auto 0 auto;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst BreadcrumbNav = styled.div`\n  margin: 28px 0 10px 0;\n  .breadcrumb {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n  }\n  ol {\n    display: flex;\n  }\n  li {\n    font-family: \"Proxima Nova\";\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 25px;\n  }\n  .breadcrump__nav {\n    margin: auto;\n    left: 0;\n    display: flex;\n    max-width: 1170px;\n    flex-direction: column;\n  }\n\n  .breadcrumb-item:not(.active) a {\n    color: rgba(0, 0, 0, 0.45);\n  }\n\n  h2 {\n    font-family: \"Bebas Neue Pro\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 47px;\n    line-height: 39px;\n  }\n`;\n\nfunction Breadcrumb(props) {\n  const isLink = (item) => {\n    return item.length > 1;\n  };\n  return (\n    <BreadcrumbNav>\n      <div className=\"breadcrump__nav\">\n        <div>\n          <h2 className=\"h2\">{props.title}</h2>\n        </div>\n        <div>\n          <ol className=\"breadcrumb\">\n            {props.items.map((item, index) => (\n              <li key={item[0]} className={`breadcrumb-item liClass`}>\n                {isLink(item) ? (\n                  <Link to={item[1]}>\n                    {\" \"}\n                    {item[0]}\n                    {item[1] === \"/\" ? (\n                      <>{item[1]}</>\n                    ) : (\n                      <div style={{ display: \"none\", marginBottom: 0 }}>\n                        {item[1]}\n                      </div>\n                    )}\n                  </Link>\n                ) : (\n                  item[0]\n                )}\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </BreadcrumbNav>\n  );\n}\n\nexport default Breadcrumb;\n"],"names":["GlossaireService","tenantId","AuthCurrentTenant","authAxios","response","data","filter","params","GLOSSAIRE_ID","id","Header","useState","glossaireDesc","setGlossaireDesc","langue","localStorage","getItem","useEffect","AproposService","then","res","rows","glossaireDescFR","glossaireDescAR","glossaireDescEN","Breadcrumb","title","i18n","items","DescriptionSection","styled","LoadingData","TabMessage","className","NoDataFound","Filter","setGroupByCategory","activeTab","setActiveTab","toggleTabOnClick","_","current","setGetCategoriesTrigger","glossaireCategories","setGlossaireCategories","isLoading","setIsLoading","getCategoriesTrigger","onClick","map","l","to","smooth","duration","toUpperCase","length","style","display","gc","arraySort","require","groupArray","GloassaireList","criteria","initial","text","substring","arrayOfData","forEach","GLOSSOBJECT","push","letter","nomFR","nomEN","nomAR","initialsList","Object","keys","categoriesList","setIsShowing","definitionFR","definitionAR","definitionEN","categorie","titleFR","titleAR","titleEN","setModalData","setModalDataLetter","CAT","glossList","GLOSS","_id","GLOSSAIREINITIAL","ENTRY","ID","modalData","glossaireObject","modalDataLetter","handleClick","glossaireList","setGlossaireList","gl","groupByCategory","searchString","setSearchString","GlossaireLayout","type","placeholder","onChange","event","target","value","Link","src","search__archeive","alt","srcSet","BreadcrumbNav","props","isLink","item","index","marginBottom"],"sourceRoot":""}
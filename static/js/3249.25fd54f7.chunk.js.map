{"version":3,"file":"static/js/3249.25fd54f7.chunk.js","mappings":"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","sources":["modules/Search/SearchService.tsx","view/Archive/SearchArchive.tsx","view/Search/SRPCard.tsx","view/shared/Breadcrumb.tsx"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\n\nexport default class SearchService {\n  // GET CATEGORIES LIST FOR PUBLICATIONS\n  static async getCategoriesList() {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/category-publication`\n    );\n    return response.data;\n  }\n\n  static async getSearchResultsForPublicationsBasedOnSearchString(\n    SEARCH_STRING,\n    OFFSET\n  ) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/search?filter=${SEARCH_STRING}&limit=10&offset=${OFFSET}&validated={true}`\n    );\n    return response.data;\n  }\n\n  // SAERCH BASED ON CATEGORIES (REVERSE LOGIC)\n  static async searchUsingMainCatefories(SEARCH_STRING, categoryName, OFFSET) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/category-publication?filter[titleFR]=${categoryName}`\n    );\n    const publicationsOfSelectedCategory = response.data.rows[0]?.publications;\n    const finalResponseOBject = {\n      rows: publicationsOfSelectedCategory ?? [],\n      count: publicationsOfSelectedCategory?.length ?? 0,\n    };\n    return finalResponseOBject;\n  }\n\n  // ARCHIVE SEARCH\n  static async getSearchResultsForArchiveBasedOnSearchString(\n    SEARCH_STRING,\n    FILTER_STRING,\n    OFFSET\n  ) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/publication?filter[descriptionFR]=${SEARCH_STRING}&limit=5&offset=${OFFSET}&filter[statut]=archive${FILTER_STRING}`\n    );\n    return response.data;\n  }\n\n  static async getArchivePublications(\n    filter,\n    orderBy,\n    limit,\n    offset,\n    advanced\n  ) {\n    const params = {\n      filter,\n      orderBy,\n      limit,\n      offset,\n      advanced,\n    };\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/publication/search`,\n      {\n        params,\n      }\n    );\n    return response.data;\n  }\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Etudes, search__archeive } from \"src/assets/images\";\nimport { i18n } from \"../../i18n\";\nimport Breadcrumb from \"../shared/Breadcrumb\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport SearchService from \"src/modules/Search/SearchService\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport SRPCard from \"../Search/SRPCard\";\nimport { BsBox } from \"react-icons/bs\";\nimport { Pagination, ConfigProvider } from \"antd\";\n\nfunction SearchArchive({ location }) {\n  const langue = localStorage.getItem(\"language\");\n\n  const [publications, setPublications] = useState([]);\n  const [count, setCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [loading, setLoading] = useState(false);\n\n  const getValidThumbnail = (attachmentsArray) => {\n    const acceptableExtions = \"png, jpg, jpeg, gif\";\n    let fakeUrl = \"https://via.placeholder.com/270x175\";\n    attachmentsArray.forEach((att) => {\n      if (att.downloadUrl)\n        if (att.downloadUrl.length >= 1) {\n          const urlExtension = att.downloadUrl.substring(\n            att.downloadUrl.lastIndexOf(\".\") + 1,\n            att.downloadUrl.length\n          );\n          if (acceptableExtions.includes(urlExtension)) {\n            fakeUrl = att.downloadUrl;\n          }\n        }\n    });\n    return fakeUrl;\n  };\n  const getArchivePublications = async (offset) => {\n    const filter = location.archiveSearchString;\n    const advanced = location.archiveFilter\n      ? location.archiveFilter\n      : { statut: \"archive\" };\n\n    try {\n      setLoading(true);\n      let result = await SearchService.getArchivePublications(\n        filter,\n        \"\",\n        10,\n        offset,\n        advanced\n      );\n      setPublications(result.rows);\n      setCount(result.count);\n      setLoading(false);\n    } catch (error) {\n      console.log(\"err\", error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getArchivePublications(0);\n  }, []);\n\n  return (\n    <>\n      <>\n        <Breadcrumb\n          title={i18n(\"common.Archives\")}\n          items={[[i18n(\"app.title\"), \"/\"], [i18n(\"common.Archives\")]]}\n        />\n      </>\n      <div className=\"app__archieve__page_search\">\n        {loading ? (\n          <section>\n            <Skeleton height={170} />\n          </section>\n        ) : (\n          <div className=\"archeive\">\n            <div className=\"archieve__content\">\n              <div className=\"archieve__left\">\n                <ConfigProvider\n                  theme={{\n                    token: {\n                      colorPrimary: \"#e1011a\",\n                    },\n                  }}\n                >\n                  <SearchArchiveLayout>\n                    <div>\n                      {publications.length > 0 ? (\n                        <>\n                          <div>\n                            {publications.map((searchResult, index) => {\n                              let thumbnail: any;\n\n                              if (searchResult[\"photos\"]) {\n                                thumbnail = getValidThumbnail(\n                                  searchResult[\"photos\"]\n                                );\n                              }\n                              if (langue === \"fr\") {\n                                return (\n                                  <SRPCard\n                                    type={\n                                      searchResult[\"category\"]\n                                        ? searchResult[\"category\"][\"titleFR\"]\n                                        : null\n                                    }\n                                    title={searchResult[\"titleFR\"]}\n                                    entite={\"detail\"}\n                                    key={index}\n                                    _id={searchResult[\"_id\"] ?? 0}\n                                    date={searchResult[\"date\"]}\n                                    content={searchResult[\"descriptionFR\"]}\n                                    thumbnail={thumbnail}\n                                  />\n                                );\n                              } else if (langue === \"ar\") {\n                                return (\n                                  <SRPCard\n                                    type={\n                                      searchResult[\"category\"]\n                                        ? searchResult[\"category\"][\"titleAR\"]\n                                        : null\n                                    }\n                                    title={searchResult[\"titleAR\"]}\n                                    entite={\"detail\"}\n                                    key={index}\n                                    _id={searchResult[\"_id\"] ?? 0}\n                                    date={searchResult[\"date\"]}\n                                    content={searchResult[\"descriptionAR\"]}\n                                    thumbnail={thumbnail}\n                                  />\n                                );\n                              } else if (langue === \"en\") {\n                                return (\n                                  <SRPCard\n                                    type={\n                                      searchResult[\"category\"]\n                                        ? searchResult[\"category\"][\"titleEN\"]\n                                        : null\n                                    }\n                                    title={searchResult[\"titleEN\"]}\n                                    entite={\"detail\"}\n                                    key={index}\n                                    _id={searchResult[\"_id\"] ?? 0}\n                                    date={searchResult[\"date\"]}\n                                    content={searchResult[\"descriptionEN\"]}\n                                    thumbnail={thumbnail}\n                                  />\n                                );\n                              }\n                            })}\n                          </div>\n                          <div>\n                            <Pagination\n                              defaultCurrent={currentPage}\n                              pageSize={pageSize}\n                              onChange={(e) => {\n                                const offNumber = (e - 1) * pageSize;\n                                getArchivePublications(offNumber);\n                                setCurrentPage(e);\n                              }}\n                              onShowSizeChange={(current, size) => {\n                                setPageSize(size);\n                              }}\n                              total={count}\n                              responsive\n                            />\n                          </div>\n                        </>\n                      ) : (\n                        <h3 className=\"h3\" id=\"noDataFound\">\n                          <BsBox />\n                          &nbsp;{i18n(\"common.noData\")}\n                        </h3>\n                      )}\n                    </div>\n                  </SearchArchiveLayout>\n                </ConfigProvider>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\nexport default SearchArchive;\n\nconst SearchArchiveLayout = styled.div`\n  width: 100%;\n  margin: 1rem 0;\n\n  #noDataFound {\n    font-family: \"Proxima Nova\";\n    font-style: normal;\n    font-weight: 100;\n    font-size: 1.5rem;\n    text-align: center;\n    color: #c7c6c6;\n\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport parse from \"html-react-parser\";\nimport moment from \"moment\";\nimport { calendar, noData, noImage } from \"src/assets/images\";\nexport default function SRPCard({\n  _id,\n  date,\n  content,\n  thumbnail,\n  title,\n  entite,\n  type,\n}) {\n  const formattedDate = moment(date).format(\"l\");\n  return (\n    <CardLayout>\n      <Link to={\"/\" + entite + \"/\" + _id}>\n        <div className=\"search__description\">\n          <div>\n            <div className=\"evenement__left\">\n              {thumbnail ? (\n                <img\n                  className=\"lazyload\"\n                  style={{ width: 100, height: 100 }}\n                  src={thumbnail}\n                />\n              ) : (\n                <img\n                  className=\"lazyload\"\n                  style={{ width: 100, height: 100 }}\n                  src={noImage}\n                />\n              )}\n            </div>\n            <div className=\"evenement__right\">\n              <div className=\"date\">\n                <div>\n                  <img\n                    className=\"lazyload\"\n                    src={calendar}\n                    // alt={noImage}\n                    // srcSet={noImage}\n                  />\n                  {formattedDate}\n                </div>\n                {type ? (\n                  <div className=\"cardHeader\">\n                    <span className=\"categoryBadge\">{type}</span>\n                  </div>\n                ) : null}\n              </div>\n              {title ? (\n                <div className=\"title\">\n                  {title.length > 100\n                    ? parse(title.substring(0, 100) + \"...\")\n                    : parse(title)}\n                </div>\n              ) : null}\n              {content ? (\n                <div className=\"right__footer\">\n                  {content.length > 100\n                    ? parse(content.substring(0, 100) + \"...\")\n                    : parse(content)}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </Link>\n      <hr></hr>\n    </CardLayout>\n  );\n}\n\nconst CardLayout = styled.div`\n  /* LEFT SECTION */\n  hr {\n    height: 1px;\n    background-color: #2b2840;\n    border: none;\n  }\n  .cardContent {\n    flex-grow: 1;\n    height: 100%;\n    padding-left: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    .cardHeader {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n      font-size: 12px;\n      font-family: \"Proxima Nova\";\n\n      .categoryBadge {\n        background: #f8d7da;\n        border-radius: 3px;\n        color: var(--dark--red);\n        padding: 0.4rem 0.5rem;\n        font-size: 12px;\n        font-family: \"Proxima Nova\";\n      }\n    }\n\n    .title {\n      margin-top: 1.5rem;\n      color: var(--violet);\n\n      span {\n        font-family: \"Bebas Neue Pro\";\n        font-style: normal;\n        font-weight: 700;\n        font-size: 23px;\n        line-height: 24px;\n      }\n    }\n  }\n  hr {\n    margin-top: 10px;\n    margin-bottom: 5px;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst BreadcrumbNav = styled.div`\n  margin: 28px 0 10px 0;\n  .breadcrumb {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n  }\n  ol {\n    display: flex;\n  }\n  li {\n    font-family: \"Proxima Nova\";\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 25px;\n  }\n  .breadcrump__nav {\n    margin: auto;\n    left: 0;\n    display: flex;\n    max-width: 1170px;\n    flex-direction: column;\n  }\n\n  .breadcrumb-item:not(.active) a {\n    color: rgba(0, 0, 0, 0.45);\n  }\n\n  h2 {\n    font-family: \"Bebas Neue Pro\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 47px;\n    line-height: 39px;\n  }\n`;\n\nfunction Breadcrumb(props) {\n  const isLink = (item) => {\n    return item.length > 1;\n  };\n  return (\n    <BreadcrumbNav>\n      <div className=\"breadcrump__nav\">\n        <div>\n          <h2 className=\"h2\">{props.title}</h2>\n        </div>\n        <div>\n          <ol className=\"breadcrumb\">\n            {props.items.map((item, index) => (\n              <li key={item[0]} className={`breadcrumb-item liClass`}>\n                {isLink(item) ? (\n                  <Link to={item[1]}>\n                    {\" \"}\n                    {item[0]}\n                    {item[1] === \"/\" ? (\n                      <>{item[1]}</>\n                    ) : (\n                      <div style={{ display: \"none\", marginBottom: 0 }}>\n                        {item[1]}\n                      </div>\n                    )}\n                  </Link>\n                ) : (\n                  item[0]\n                )}\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </BreadcrumbNav>\n  );\n}\n\nexport default Breadcrumb;\n"],"names":["SearchService","tenantId","AuthCurrentTenant","authAxios","response","data","SEARCH_STRING","OFFSET","categoryName","publicationsOfSelectedCategory","rows","publications","finalResponseOBject","count","length","FILTER_STRING","filter","orderBy","limit","offset","advanced","params","location","langue","localStorage","getItem","useState","setPublications","setCount","currentPage","setCurrentPage","pageSize","setPageSize","loading","setLoading","getArchivePublications","archiveSearchString","archiveFilter","statut","result","console","log","useEffect","title","i18n","items","className","height","theme","token","colorPrimary","SearchArchiveLayout","map","searchResult","index","thumbnail","attachmentsArray","fakeUrl","forEach","att","downloadUrl","urlExtension","substring","lastIndexOf","includes","getValidThumbnail","type","entite","_id","date","content","defaultCurrent","onChange","e","onShowSizeChange","current","size","total","responsive","id","styled","SRPCard","formattedDate","moment","format","CardLayout","to","style","width","src","noImage","calendar","parse","BreadcrumbNav","props","isLink","item","display","marginBottom"],"sourceRoot":""}